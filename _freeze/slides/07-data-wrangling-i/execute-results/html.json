{
  "hash": "95365e91ac0b11410dc5dac87bffe9ab",
  "result": {
    "markdown": "---\ntitle: \"Data wrangling (I)\"\nsubtitle: \"Lecture 7\"\ndate: \"February 14, 2023\"\nformat: revealjs\nresources:\n  - \"data/scdb-case.csv\"\n---\n\n\n\n\n# Announcements\n\n## Announcements\n\n- Meet with your project \\#1 teams\n- Draft proposal rendered + committed + pushed to GitHub by 11:59pm on Thursday\n\n## Agenda for today\n\n- Transforming and reshaping a single data frame\n\n# Setup\n\n## Packages + figures\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# load packages\nlibrary(tidyverse)\nlibrary(scales)\n\n# set default theme for ggplot2\ntheme_set(theme_minimal(base_size = 12))\n```\n:::\n\n\n### YAML options\n\n```yaml\nknitr:\n  opts_chunk:\n    fig.width: 7\n    fig.asp: 0.618\n    fig.retina: 2\n    dpi: 150\n    out.width: \"80%\"\n```\n\n# Transforming and reshaping a single data frame\n\n## Data: SCOTUS\n\n-   Data from the Supreme Court of the United States\n-   Observations: Each row represents a case\n\n\n::: {.cell layout-align=\"center\" hash='07-data-wrangling-i_cache/revealjs/unnamed-chunk-3_5f855950c6921caea0022910f74a54bd'}\n\n```{.r .cell-code}\nscdb_case <- read_csv(\"https://info3312.infosci.cornell.edu/slides/data/scdb-case.csv\")\n```\n:::\n\n::: {.cell layout-align=\"center\" hash='07-data-wrangling-i_cache/revealjs/scotus_716e7ba0856cbdd33a1e304b263f2357'}\n\n```{.r .cell-code}\nscdb_case <- read_csv(\"data/scdb-case.csv\")\n```\n:::\n\n\n## Scenario 1\n\n::: hand\nWe...\n\nhave a single data frame\n\nwant to slice it, and dice it, and juice it, and process it, so we can plot it\n:::\n\n## **dplyr** 101\n\n::: task\nWhich of the following (if any) are unfamiliar to you?\n:::\n\n-   `distinct()`\n-   `select()`, `relocate()`\n-   `arrange()`, `arrange(desc())`\n-   `slice()`, `slice_head()`, `slice_tail()`, `slice_sample()`\n-   `filter()`\n-   `mutate()`\n-   `summarize()`, `count()`\n\n## What percentage of cases in each term are decided by an **n**-vote margin (i.e. 5-4, 6-3, etc.)\n\n::: task\nLet's recreate this visualization!\n:::\n\n\n::: {.cell layout-align=\"center\" hash='07-data-wrangling-i_cache/revealjs/n-vote-margin_b23e8d34d1f8b45897f0b58209c797a1'}\n::: {.cell-output-display}\n![](07-data-wrangling-i_files/figure-revealjs/n-vote-margin-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## Livecoding\n\nReveal below for code developed during live coding session.\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}