{
  "hash": "84ea81f4bfd6c403ac61e91aa1a92d33",
  "result": {
    "markdown": "---\ntitle: \"Deep dive: geoms\"\nsubtitle: \"Lecture 4\"\ndate: \"February 2, 2023\"\nformat: revealjs\n---\n\n\n\n\n## Announcements\n\nHW 1 is posted:\n\n- Go to the [course GitHub org](https://github.coecis.cornell.edu/info3312-s23/) and look for a repo named `hw-01-NETID`\n- Instructions are in the README\n- All work must be completed in the provided Quarto document, rendered as PDF, and uploaded to Gradescope\n- Make sure to also stage/commit/push your work to GitHub\n- Due Wednesday, February 8, by 11:59pm\n- Post questions on the discussion forum\n\n# Setup\n\n\n## Packages\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-2_8bd9cee788e3a93e1b32d9afb03886b2'}\n\n```{.r .cell-code}\n# load packages\nlibrary(tidyverse)\n# remotes::install_github(\"cis-ds/rcis\")\nlibrary(rcis)\n```\n:::\n\n\n\n## **ggplot2** theme\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-3_e993a3b61a1f6f9ed36db4d250a8b899'}\n\n```{.r .cell-code}\n# set default theme for ggplot2\nggplot2::theme_set(ggplot2::theme_minimal(base_size = 16))\n```\n:::\n\n\n## Figure sizing\n\nFor more on including figures in Quarto documents with the right size, resolution, etc.\n\n- [R for Data Science - Figures](https://r4ds.hadley.nz/quarto.html#sec-figures)\n- Use the YAML header\n\n```yaml\nknitr:\n  opts_chunk:\n    fig.width: 8\n    fig.asp: 0.618\n    fig.retina: 2\n    dpi: 150\n    out.width: \"80%\"\n```\n\n---\n\n## Data prep: new variables\n\nFrom last class...\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-4_e515ebcca0f618474430cf7e8a5f963e'}\n\n```{.r .cell-code}\nscorecard <- scorecard %>%\n  mutate(pctpell_cat = cut_interval(x = pctpell, n = 6)) %>%\n  drop_na(pctpell_cat)\n\nscorecard %>%\n  count(pctpell_cat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 2\n  pctpell_cat       n\n  <fct>         <int>\n1 [0,0.167]       169\n2 (0.167,0.333]   630\n3 (0.333,0.5]     609\n4 (0.5,0.667]     205\n5 (0.667,0.833]    73\n6 (0.833,1]        31\n```\n:::\n:::\n\n\n---\n\n## Data prep: summary table\n\nFrom last class...\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-5_a1187ef108d2ba732b06cc341a927e4f'}\n\n```{.r .cell-code}\nmean_netcost_pctpell <- scorecard %>%\n  group_by(pctpell_cat) %>%\n  summarise(mean_netcost = mean(netcost, na.rm = TRUE))\n\nmean_netcost_pctpell\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 2\n  pctpell_cat   mean_netcost\n  <fct>                <dbl>\n1 [0,0.167]           29919.\n2 (0.167,0.333]       22579.\n3 (0.333,0.5]         19171.\n4 (0.5,0.667]         16966.\n5 (0.667,0.833]       15572.\n6 (0.833,1]           10138.\n```\n:::\n:::\n\n\n# Aesthetic mappings in ggplot2\n\n## Global vs. layer-specific aesthetics\n\n- Aesthetic mappings can be supplied in the initial `ggplot()` call, in individual layers, or in some combination of both.\n\n- Within each layer, you can add, override, or remove mappings.\n\n- If you only have one layer in the plot, the way you specify aesthetics doesn’t make any difference. However, the distinction is important when you start adding additional layers.\n\n## Activity: Spot the difference I\n\n::: appex\nDo you expect the following plots to be the same or different? If different, how? Discuss in a pair (or group) without running the code and sketch the resulting plots based on what you think the code will produce.\n:::\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-6_a7f41c1749e176d3564531c06c2b3bdc'}\n\n```{.r .cell-code}\n# Plot A\nggplot(scorecard, aes(x = avgfacsal, y = netcost, color = pctpell_cat)) +\n  geom_point(alpha = 0.7) +\n  geom_smooth(method = \"lm\", se = FALSE, size = 0.5)\n```\n\n```{.r .cell-code}\n# Plot B\nggplot(scorecard, aes(x = avgfacsal, y = netcost)) +\n  geom_point(aes(color = pctpell_cat), alpha = 0.7) +\n  geom_smooth(method = \"lm\", se = FALSE, size = 0.5)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_80fc6b44\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">02</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n---\n\n## Activity: Spot the difference II\n\n::: appex\nDo you expect the following plots to be the same or different? If different, how? Discuss in a pair (or group) without running the code and sketch the resulting plots based on what you think the code will produce.\n:::\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-8_d9f4743d36d7c9d6c32b1bb9c6b818ab'}\n\n```{.r .cell-code}\n# Plot A\nggplot(scorecard, aes(x = avgfacsal, y = netcost)) +\n  geom_point(aes(color = pctpell_cat))\n```\n:::\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-9_a90c6720c0eb56733b6369f0b9bf9fa8'}\n\n```{.r .cell-code}\n# Plot B\nggplot(scorecard, aes(x = avgfacsal, y = netcost)) +\n  geom_point(color = \"blue\")\n```\n:::\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-10_48645525269911f59cd99bddb953640a'}\n\n```{.r .cell-code}\n# Plot C\nggplot(scorecard, aes(x = avgfacsal, y = netcost)) +\n  geom_point(color = \"#a493ba\")\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_76730d01\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">03</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n# Geoms\n\n## Geoms\n\n- Geometric objects, or geoms for short, perform the actual rendering of the layer, controlling the type of plot that you create\n\n- You can think of them as \"the geometric shape used to represent the data\"\n\n## One variable\n\n- Discrete:\n  - `geom_bar()`: display distribution of discrete variable.\n\n- Continuous\n  - `geom_histogram()`: bin and count continuous variable, display with bars\n  - `geom_density()`: smoothed density estimate\n  - `geom_dotplot()`: stack individual points into a dot plot\n  - `geom_freqpoly()`: bin and count continuous variable, display with lines\n\n---\n\n## [aside...]{.hand}\n\nAlways use \"typewriter text\" (monospace font) when writing function names, and follow with `()`, e.g., \n\n- `geom_freqpoly()`\n- `mean()`\n- `lm()`\n\n## `geom_bar()`\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-12_b559495e5260b8e46cb4a21191604e19'}\n\n```{.r .cell-code}\nggplot(scorecard, aes(x = pctpell_cat)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-12-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## `geom_bar()`\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-13_d02d8638705988556e94ad345dc79e82'}\n\n```{.r .cell-code}\nggplot(scorecard, aes(y = pctpell_cat)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-13-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## `geom_histogram()`\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-14_c856a2dae7df0cbff5aa9cb7d25896a8'}\n\n```{.r .cell-code}\nggplot(scorecard, aes(x = netcost)) +\n  geom_histogram()\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-14-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## `geom_histogram()` and `binwidth`\n\n::: {.panel-tabset}\n\n### 2K\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-15_7021bd353be5b9442f4c8cf44b0475e7'}\n\n```{.r .cell-code}\nggplot(scorecard, aes(x = netcost)) +\n  geom_histogram(binwidth = 2000)\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-15-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n### 5K\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-16_b7ee2dead1e0c6a8721437a0bdeaf8e1'}\n\n```{.r .cell-code}\nggplot(scorecard, aes(x = netcost)) +\n  geom_histogram(binwidth = 5000)\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-16-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n### 10K\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-17_dc7eda0efe30c9a61b05891b833c9917'}\n\n```{.r .cell-code}\nggplot(scorecard, aes(x = netcost)) +\n  geom_histogram(binwidth = 10000)\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-17-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n### 20K\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-18_c479780c754f459bd42d2db8a7f08182'}\n\n```{.r .cell-code}\nggplot(scorecard, aes(x = netcost)) +\n  geom_histogram(binwidth = 20000)\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-18-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n:::\n\n## `geom_density()`\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-19_abe954af33806ad2d562e778ad10c8ab'}\n\n```{.r .cell-code}\nggplot(scorecard, aes(x = netcost)) +\n  geom_density()\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-19-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## `geom_density()` and bandwidth (`bw`)\n\n::: {.panel-tabset}\n\n### 1\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-20_ffdf4874f6ceec45a6e969b9afded0f4'}\n\n```{.r .cell-code}\nggplot(scorecard, aes(x = netcost)) +\n  geom_density(bw = 1)\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-20-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n### 100\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-21_1d153e551487f3fb2b129e53cc03a102'}\n\n```{.r .cell-code}\nggplot(scorecard, aes(x = netcost)) +\n  geom_density(bw = 100)\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-21-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n### 1,000\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-22_4ff80499755c40d733fd856b6d2e2b3e'}\n\n```{.r .cell-code}\nggplot(scorecard, aes(x = netcost)) +\n  geom_density(bw = 1000)\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-22-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n### 10,000\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-23_db6460006662b652b3a00c639fcb5ab1'}\n\n```{.r .cell-code}\nggplot(scorecard, aes(x = netcost)) +\n  geom_density(bw = 10000)\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-23-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n:::\n\n## `geom_density()` outlines\n\n::: {.panel-tabset}\n\n### full\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-24_2081a2a16bc584a94aaaff1f0fb18ac5'}\n\n```{.r .cell-code}\nggplot(scorecard, aes(x = netcost)) +\n  geom_density(outline.type = \"full\")\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-24-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n### both\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-25_aa46ff54eaf45fe6f1a3782cb56c0eee'}\n\n```{.r .cell-code}\nggplot(scorecard, aes(x = netcost)) +\n  geom_density(outline.type = \"both\")\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-25-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n### upper\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-26_fa0a11da8c61165409d37e9d213478b9'}\n\n```{.r .cell-code}\nggplot(scorecard, aes(x = netcost)) +\n  geom_density(outline.type = \"upper\")\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-26-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n### lower\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-27_24b45f4b652cea22022ede4b396d18ea'}\n\n```{.r .cell-code}\nggplot(scorecard, aes(x = netcost)) +\n  geom_density(outline.type = \"lower\")\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-27-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n:::\n\n## `geom_dotplot()`\n\n::: appex\nWhat does each point represent? How are their locations determined? What do the x and y axes represent?\n:::\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-28_c520483f95644bb155b21d79ddec64cb'}\n\n```{.r .cell-code}\nggplot(scorecard, aes(x = netcost)) +\n  geom_dotplot(binwidth = 418)\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-28-1.png){fig-align='center' width=100%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_f131ebe9\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">02</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n## `geom_freqpoly()`\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-30_3be4dd066986a4a6bf69d476100e91e8'}\n\n```{.r .cell-code}\nggplot(scorecard, aes(x = netcost)) +\n  geom_freqpoly(binwidth = 1000)\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-30-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## `geom_freqpoly()` for comparisons\n\n::: {.panel-tabset}\n\n### Histogram\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-31_3e5d33e81141ade4446011c067ce17ea'}\n\n```{.r .cell-code}\nggplot(scorecard, aes(x = netcost, fill = pctpell_cat)) +\n  geom_histogram(binwidth = 5000)\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-31-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n### Frequency polygon\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-32_394b07b190a53f4e5694daecee1d8a7c'}\n\n```{.r .cell-code}\nggplot(scorecard, aes(x = netcost, color = pctpell_cat)) +\n  geom_freqpoly(binwidth = 5000, size = 1)\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-32-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n:::\n\n## Two variables - both continuous\n\n- `geom_point()`: scatterplot\n- `geom_quantile()`: smoothed quantile regression\n- `geom_rug()`: marginal rug plots\n- `geom_smooth()`: smoothed line of best fit\n- `geom_text()`: text labels\n\n## `geom_rug()`\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-33_0bc245565f5d90b2a47e37d47e454424'}\n\n```{.r .cell-code}\nggplot(scorecard, aes(x = avgfacsal, y = netcost)) +\n  geom_point() +\n  geom_rug(alpha = 0.1)\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-33-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## `geom_rug()` on the outside\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-34_a3f97703a4a583829b639611a8cae3b4'}\n\n```{.r .cell-code}\nggplot(scorecard, aes(x = avgfacsal, y = netcost)) +\n  geom_point() +\n  geom_rug(alpha = 0.1, outside = TRUE) +\n  coord_cartesian(clip = \"off\")\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-34-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## `geom_rug()` on the outside, but better\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-35_907ae12eef766f3fe19a728b3e1d9102'}\n\n```{.r .cell-code}\nggplot(scorecard, aes(x = avgfacsal, y = netcost)) +\n  geom_point() +\n  geom_rug(alpha = 0.1, outside = TRUE, sides = \"tr\") +\n  coord_cartesian(clip = \"off\") +\n  theme(plot.margin = margin(1, 1, 1, 1, \"cm\"))\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-35-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## `geom_text()`\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-36_44ed1303e0babcbd02b5f183865ef627'}\n\n```{.r .cell-code}\nscorecard_samp <- sample_n(scorecard, size = 50) # for viz purposes\n\nggplot(scorecard_samp, aes(x = avgfacsal, y = netcost)) +\n  geom_text(aes(label = type))\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-36-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## `geom_text()` and more\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-37_189df62ea04837be2e03aab2ec556e88'}\n\n```{.r .cell-code}\nggplot(scorecard_samp, aes(x = avgfacsal, y = netcost)) +\n  geom_text(aes(label = type, color = type))\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-37-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## `geom_text()` and even more\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-38_8c8ce2867999520ac2634b14047e6e22'}\n\n```{.r .cell-code}\nggplot(scorecard_samp, aes(x = avgfacsal, y = netcost)) +\n  geom_text(aes(label = type, color = type),\n    show.legend = FALSE\n  )\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-38-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## Two variables - show distribution\n\n- `geom_bin2d()`: bin into rectangles and count\n- `geom_density2d()`: smoothed 2d density estimate\n- `geom_hex()`: bin into hexagons and count\n\n## `geom_hex()`\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-39_629d56dd92bfb83c2df7fd8a52d2ba50'}\n\n```{.r .cell-code}\nggplot(scorecard, aes(x = avgfacsal, y = netcost)) +\n  geom_hex()\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-39-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## `geom_hex()` and warnings\n\n- Requires installing the [**hexbin**](https://cran.r-project.org/web/packages/hexbin/index.html) package separately!\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-40_aead52150bd31dac1d148aff75d5c7ee'}\n\n```{.r .cell-code}\ninstall.packages(\"hexbin\")\n```\n:::\n\n\n- Otherwise you might see\n\n```\nWarning: Computation failed in `stat_binhex()`\n```\n\n## Two variables\n\n- At least one discrete\n  - `geom_count()`: count number of point at distinct locations\n  - `geom_jitter()`: randomly jitter overlapping points\n\n- One continuous, one discrete\n  - `geom_col()`: a bar chart of pre-computed summaries\n  - `geom_boxplot()`: boxplots\n  - `geom_violin()`: show density of values in each group\n\n## `geom_jitter()`\n\n::: appex\nHow are the following three plots different?\n:::\n\n::: {.panel-tabset}\n\n### Plot A\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-41_eb319c4b8c91b7cb4411ca8bf43f8a53'}\n\n```{.r .cell-code}\nggplot(scorecard, aes(x = type, y = netcost)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-41-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n### Plot B\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-42_ca86571d1af585e5d8ee57efac69fd59'}\n\n```{.r .cell-code}\nggplot(scorecard, aes(x = type, y = netcost)) +\n  geom_jitter()\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-42-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n### Plot C\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-43_86d56de50bbb84cdf676a57dcaca97f3'}\n\n```{.r .cell-code}\nggplot(scorecard, aes(x = type, y = netcost)) +\n  geom_jitter()\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-43-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n:::\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_69293052\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">03</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n## `geom_jitter()` and `set.seed()`\n\n::: {.panel-tabset}\n\n### Plot A\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-45_97a2622b5a79e739c17c4b4050e71b47'}\n\n```{.r .cell-code}\nset.seed(123)\nggplot(scorecard, aes(x = type, y = netcost)) +\n  geom_jitter()\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-45-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n### Plot B\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-46_7cdaa6ec7025dcb0c1dcfe07361fc0a4'}\n\n```{.r .cell-code}\nset.seed(123)\nggplot(scorecard, aes(x = type, y = netcost)) +\n  geom_jitter()\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-46-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n### Plot C\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-47_10880cb79607da2fd35c437950ea9f39'}\n\n```{.r .cell-code}\nset.seed(234)\nggplot(scorecard, aes(x = type, y = netcost)) +\n  geom_jitter()\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-47-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n:::\n\n## Two variables\n\n- One time, one continuous\n  - `geom_area()`: area plot\n  - `geom_line()`: line plot\n  - `geom_step()`: step plot\n\n- Display uncertainty:\n  - `geom_crossbar()`: vertical bar with center\n  - `geom_errorbar()`: error bars\n  - `geom_linerange()`: vertical line\n  - `geom_pointrange()`: vertical line with center\n\n- Spatial\n  - `geom_sf()`: for map data (more on this later...)\n\n## Average net cost per Pell grant recipient\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-48_2c18f5b5e8abac3cbd14705fce91c4bd'}\n\n```{.r .cell-code}\nmean_netcost_pctpell <- scorecard %>%\n  mutate(pctpell = round(pctpell, digits = 2)) %>%\n  group_by(pctpell) %>%\n  summarise(\n    n = n(),\n    mean_netcost = mean(netcost),\n    sd_netcost = sd(netcost)\n  ) %>%\n  drop_na(mean_netcost)\n\nmean_netcost_pctpell\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 67 × 4\n   pctpell     n mean_netcost sd_netcost\n     <dbl> <int>        <dbl>      <dbl>\n 1    0.08     2        8334       2493.\n 2    0.09     5       34389.      3211.\n 3    0.1      9       35855.      8615.\n 4    0.11    17       29528.      8323.\n 5    0.12    15       32092.      9152.\n 6    0.13    18       31172.      6811.\n 7    0.14    27       28900.      7628.\n 8    0.17    29       27933.     11449.\n 9    0.18    25       24109.      9916.\n10    0.19    36       25109.      8936.\n# … with 57 more rows\n```\n:::\n:::\n\n\n## `geom_line()`\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-49_b75af5616986a5b271938ea0d2df8807'}\n\n```{.r .cell-code}\nggplot(mean_netcost_pctpell, aes(x = pctpell, y = mean_netcost)) +\n  geom_line()\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-49-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n## `geom_area()`\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-50_e2d05f2169603413db9d85718f83ffd7'}\n\n```{.r .cell-code}\nggplot(mean_netcost_pctpell, aes(x = pctpell, y = mean_netcost)) +\n  geom_area()\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-50-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## `geom_step()`\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-51_a3ed1bc3cf929ecc8abe3ffeaa90b8ca'}\n\n```{.r .cell-code}\nggplot(mean_netcost_pctpell, aes(x = pctpell, y = mean_netcost)) +\n  geom_step()\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-51-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## `geom_errorbar()`\n\n::: appex\nDescribe how this plot is constructed and what the points and the lines (error bars) correspond to.\n:::\n\n::: {.panel-tabset}\n\n### Code\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/errorbar_4230c27cfaeada5e706776cc762f9947'}\n\n```{.r .cell-code}\nggplot(mean_netcost_pctpell, aes(x = pctpell, y = mean_netcost)) +\n  geom_point() +\n  geom_errorbar(aes(\n    ymin = mean_netcost - sd_netcost,\n    ymax = mean_netcost + sd_netcost\n  ))\n```\n:::\n\n\n### Plot\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-53_2c096b53dcfbd9c78b3c78dd6ab51b65'}\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-53-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n:::\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_1e820dd2\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">03</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n\n## Let's clean things up a bit!\n\nMeet your new best friend, the [**scales**](https://scales.r-lib.org/) package!\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-55_240c59515bac3be9543dc5986561bbc1'}\n\n```{.r .cell-code}\nlibrary(scales)\n```\n:::\n\n\n## Let's clean things up a bit!\n\n::: {.panel-tabset}\n\n### Plot\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/scales-clean_21072626d3a4ac287377e407af8d6e0b'}\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/scales-clean-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n### Code\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-57_42646214f402f1edae31789732e279ee'}\n\n```{.r .cell-code}\nggplot(scorecard, aes(x = avgfacsal, y = netcost)) +\n  geom_point(alpha = 0.4, size = 2, color = \"#012169\") +\n  scale_x_continuous(labels = label_number(big.mark = \",\")) +\n  scale_y_continuous(labels = label_dollar()) +\n  labs(\n    x = \"Average faculty salary (USD)\",\n    y = \"Net cost of attendance (USD)\",\n    title = \"Faculty salaries and net cost of attendance in US universities\",\n    subtitle = \"2020-21\",\n    caption = \"Source: College Scorecard\"\n  )\n```\n:::\n\n\n:::\n\n# geoms\n\n## Three variables\n\n- `geom_tile()`: tile the plane with rectangles\n- `geom_raster()`: fast version of `geom_tile()` for equal sized tiles\n\n## `geom_tile()`\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-58_1c27d0172b9cd8bb2489cd263789fc30'}\n\n```{.r .cell-code}\nggplot(scorecard, aes(x = type, y = locale)) +\n geom_tile(aes(fill = netcost))\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-58-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## Another look at smooth-ish surface\n\n::: {.panel-tabset}\n\n### Summarize {.smaller}\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-59_c719a3ce70e611837d41d58fed5d11c0'}\n\n```{.r .cell-code}\nmean_netcost_type_locale <- scorecard %>%\n  group_by(type, locale) %>%\n  summarize(mean_netcost = mean(netcost, na.rm = TRUE), .groups = \"drop\")\n\nmean_netcost_type_locale\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 12 × 3\n   type                locale mean_netcost\n   <fct>               <fct>         <dbl>\n 1 Public              City         14007.\n 2 Public              Suburb       15946.\n 3 Public              Town         14692.\n 4 Public              Rural        13390.\n 5 Public              <NA>          7999 \n 6 Private, nonprofit  City         24485.\n 7 Private, nonprofit  Suburb       23018.\n 8 Private, nonprofit  Town         21785.\n 9 Private, nonprofit  Rural        22533.\n10 Private, for-profit City         28005.\n11 Private, for-profit Suburb       25778.\n12 Private, for-profit Town         13370.\n```\n:::\n:::\n\n\n### Plot\n\n\n::: {.cell layout-align=\"center\" hash='04-geoms_cache/revealjs/unnamed-chunk-60_ae1c309395a4aca2bacdb5f4626b2e64'}\n\n```{.r .cell-code}\nggplot(mean_netcost_type_locale, aes(x = type, y = locale)) +\n  geom_point(aes(color = mean_netcost), size = 30, pch = \"square\")\n```\n\n::: {.cell-output-display}\n![](04-geoms_files/figure-revealjs/unnamed-chunk-60-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n:::\n\n## Activity: Pick a geom\n\n::: appex\nFor each of the following problems, suggest a useful geom:\n\n1. Display how the value of variable has changed over time\n1. Show the detailed distribution of a single continuous variable\n1. Focus attention on the overall relationship between two variables in a large dataset\n1. Label outlying points in a single variable\n:::\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_a481ca89\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">03</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n# Homework 1\n\n## Homework 1\n\n- Locate your Homework 1 repo, clone it in RStudio Workbench\n- Put your name in the YAML of `homework-01.qmd`, render, commit (with a meaningful message), push\n- Skim the instructions to get a sense of the exercises and use the remaining time to ask any clarifying questions and to get started on the first question\n- Make sure you know how to ask a question on the course discussion forum, and set up notifications\n\n## Homework 1 tips\n\n- You can go in order or jump around between exercises. If you get stuck on a specific exercise, feel free to switch to a different one.\n- But, of course, do what feels right for you in terms of pace, ordering, etc.!\n- And ask questions on the course discussion forum\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/countdown/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/countdown/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}