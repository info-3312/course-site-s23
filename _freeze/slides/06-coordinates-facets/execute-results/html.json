{
  "hash": "eaa839f01fe80aebb6acf96e9995dc80",
  "result": {
    "markdown": "---\ntitle: \"Deep dive: coordinates + facets\"\nsubtitle: \"Lecture 6\"\ndate: \"February 9, 2023\"\nformat: revealjs\n---\n\n\n\n\n# Announcements\n\n## Announcements\n\n- Homework 1 collected\n- Team projects begin tomorrow -- look for team assignments in Canvas\n\n## Agenda for today\n\n- Coordinate systems\n\n- Facets\n\n- Group collaboration\n\n# Setup\n\n## Packages + figures\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# load packages\nlibrary(tidyverse)\nlibrary(knitr)\nlibrary(openintro)\nlibrary(palmerpenguins)\nlibrary(ggrepel)\nlibrary(waffle)\nlibrary(broom)\n\n# set default theme for ggplot2\nggplot2::theme_set(ggplot2::theme_minimal(base_size = 14))\n\n# dplyr print min and max\noptions(dplyr.print_max = 6, dplyr.print_min = 6)\n```\n:::\n\n\n### YAML options\n\n```yaml\nknitr:\n  opts_chunk:\n    fig.width: 7\n    fig.asp: 0.618\n    fig.retina: 2\n    dpi: 150\n    out.width: \"80%\"\n```\n\n# Coordinate systems\n\n## Coordinate systems: purpose\n\n- Combine the two position aesthetics (`x` and `y`) to produce a 2d position on the plot:\n  - linear coordinate system: horizontal and vertical coordinates \n  - polar coordinate system: angle and radius\n  - maps: latitude and longitude\n\n- Draw axes and panel backgrounds in coordination with the coordinate systems\n\n## Coordinate systems: types\n\n1. **Linear coordinate systems:** preserve the shape of geoms\n\n  - `coord_cartesian()`: the default Cartesian coordinate system, where the 2d position of an element is given by the combination of the x and y positions.\n  - `coord_flip()`: Cartesian coordinate system with x and y axes flipped *(won't be using much now that geoms can take aesthetic mappings in x and y axes)*\n  - `coord_fixed()`: Cartesian coordinate system with a fixed aspect ratio. *(useful only in limited circumstances)*\n\n. . .\n\n2. **Non-linear coordinate systems:** can change the shapes -- a straight line may no longer be straight. The closest distance between two points may no longer be a straight line.\n\n  - `coord_trans()`: Apply arbitrary transformations to x and y positions, after the data has been processed by the stat\n  - `coord_polar()`: Polar coordinates\n  - `coord_map()` / `coord_quickmap()` / `coord_sf()`: Map projections\n\n## Setting limits: what the plots say\n\n::: appex\nIdentify the differences between each plot. Focus on the range of the `x` and `y` axes<br>as well as the contents of the plots.\n:::\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_8f0fb0f7\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;right:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">04</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n:::: columns\n\n::: column\n\n\n::: {.cell layout-align=\"center\" hash='06-coordinates-facets_cache/revealjs/set-limits_4e359b0836e3c654959b86a746605d2b'}\n\n```{.r .cell-code  code-line-numbers=\"7,8,13,18\"}\nggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g, color = species)) +\n  geom_point() + geom_smooth() +\n  labs(title = \"Plot 1\")\n```\n\n```{.r .cell-code  code-line-numbers=\"7,8,13,18\"}\nggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g, color = species)) +\n  geom_point() + geom_smooth() +\n  scale_x_continuous(limits = c(190, 220)) +\n  scale_y_continuous(limits = c(4000, 5000)) +\n  labs(title = \"Plot 2\")\n```\n\n```{.r .cell-code  code-line-numbers=\"7,8,13,18\"}\nggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g, color = species)) +\n  geom_point() + geom_smooth() +\n  xlim(190, 220) + ylim(4000, 5000) +\n  labs(title = \"Plot 3\")\n```\n\n```{.r .cell-code  code-line-numbers=\"7,8,13,18\"}\nggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g, color = species)) +\n  geom_point() + geom_smooth() +\n  coord_cartesian(xlim = c(190,220), ylim = c(4000, 5000)) +\n  labs(title = \"Plot 4\")\n```\n:::\n\n\n:::\n\n::: column\n\n\n::: {.cell layout-align=\"center\" hash='06-coordinates-facets_cache/revealjs/set-limits-patchwork_b5be96694140364d28cee9398ad723cd'}\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/set-limits-patchwork-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n:::\n\n::::\n\n## Setting limits: what the warnings say\n\n\n::: {.cell layout-align=\"center\" hash='06-coordinates-facets_cache/revealjs/unnamed-chunk-6_54f52dec076ec365fc5d492e10ad4cac'}\n\n```{.r .cell-code}\nggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g, color = species)) +\n  geom_point() + geom_smooth() +\n  labs(title = \"Plot 1\")\n## `geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n## Warning: Removed 2 rows containing non-finite values (`stat_smooth()`).\n## Warning: Removed 2 rows containing missing values (`geom_point()`).\n\nggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g, color = species)) +\n  geom_point() + geom_smooth() +\n  scale_x_continuous(limits = c(190, 220)) +\n  scale_y_continuous(limits = c(4000, 5000)) +\n  labs(title = \"Plot 2\")\n## `geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n## Warning: Removed 235 rows containing non-finite values (`stat_smooth()`).\n## Warning: Removed 235 rows containing missing values (`geom_point()`).\n\nggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g, color = species)) +\n  geom_point() + geom_smooth() +\n  xlim(190, 220) + ylim(4000, 5000) +\n  labs(title = \"Plot 3\")\n## `geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n## Warning: Removed 235 rows containing non-finite values (`stat_smooth()`).\n## Removed 235 rows containing missing values (`geom_point()`).\n\nggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g, color = species)) +\n  geom_point() + geom_smooth() +\n  coord_cartesian(xlim = c(190,220), ylim = c(4000, 5000)) +\n  labs(title = \"Plot 4\")\n## `geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n## Warning: Removed 2 rows containing non-finite values (`stat_smooth()`).\n## Warning: Removed 2 rows containing missing values (`geom_point()`).\n```\n:::\n\n\n## Setting limits\n\n- Setting scale limits: Any data outside the limits is thrown away\n  - `scale_*_continuous()`, `xlim` and `ylim` arguments\n  - `xlim()` and `ylim()`\n\n- Setting coordinate system limits: Use all the data, but only display a small region of the plot (zooming in)\n  - `coord_cartesian()`, `xlim` and `ylim` arguments\n\n## Fixing aspect ratio with `coord_fixed()`\n\nUseful when having an aspect ratio of 1 makes sense, e.g. scores on two tests (reading and writing) on the same scale (0 to 100 points)\n\n\n::: {.cell layout-align=\"center\" output-location='column' hash='06-coordinates-facets_cache/revealjs/unnamed-chunk-7_88cf9b53b2d0957c5dcb2ccaaa17801a'}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot(hsb2, aes(x = read, y = write)) +\n  geom_point() + geom_smooth(method = \"lm\") +\n  geom_abline(intercept = 0, slope = 1, linetype = \"dashed\", color = \"gray\") +\n  labs(title = \"Not fixed\")\n\nggplot(hsb2, aes(x = read, y = write)) +\n  geom_point() + geom_smooth(method = \"lm\") +\n  geom_abline(intercept = 0, slope = 1, linetype = \"dashed\", color = \"gray\") +\n  coord_fixed() +\n  labs(title = \"Fixed\")\n```\n\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/unnamed-chunk-7-1.png){fig-align='center' width=75%}\n:::\n\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/unnamed-chunk-7-2.png){fig-align='center' width=75%}\n:::\n:::\n\n\n## Fixing aspect ratio with `tune::coord_obs_pred()`\n\n::: {.panel-tabset}\n\n### Code\n\n\n::: {.cell layout-align=\"center\" hash='06-coordinates-facets_cache/revealjs/pred-data_db9286855589576bc15ed6f288cf4ec0'}\n\n```{.r .cell-code}\ndata(solubility_test, package = \"modeldata\")\n\np <- ggplot(solubility_test, aes(x = solubility, y = prediction)) +\n  geom_abline(lty = 2) +\n  geom_point(alpha = 0.5)\n```\n:::\n\n\n### `coord_cartesian()`\n\n\n::: {.cell layout-align=\"center\" hash='06-coordinates-facets_cache/revealjs/pred-default_c92e987d1d20a56e4425cf3b5a7ff005'}\n\n```{.r .cell-code}\np + coord_cartesian()\n```\n\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/pred-default-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n### `coord_fixed()`\n\n\n::: {.cell layout-align=\"center\" hash='06-coordinates-facets_cache/revealjs/pred-fixed_b6e831ceaec08bcbee15300d1e7df134'}\n\n```{.r .cell-code}\np + coord_fixed()\n```\n\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/pred-fixed-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n### `coord_obs_pred()`\n\n\n::: {.cell layout-align=\"center\" hash='06-coordinates-facets_cache/revealjs/pred-tune_ec767faafb200e9740ff74cc44fc1563'}\n\n```{.r .cell-code}\np + tune::coord_obs_pred()\n```\n\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/pred-tune-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n:::\n\n## Transformations\n\n::: {.panel-tabset}\n\n### Raw axes\n\n\n::: {.cell layout-align=\"center\" output-location='column' hash='06-coordinates-facets_cache/revealjs/unnamed-chunk-12_97e6fc7a18bd377e91a7b820423b17cb'}\n\n```{.r .cell-code}\nggplot(penguins, aes(x = bill_depth_mm, y = body_mass_g)) +\n  geom_point() + geom_smooth(method = \"lm\") +\n  labs(title = \"Plot 1\")\n```\n\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/unnamed-chunk-12-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n### `scale_*_log10()`\n\n\n::: {.cell layout-align=\"center\" output-location='column' hash='06-coordinates-facets_cache/revealjs/unnamed-chunk-13_73e2eb82ceb1712b1cd1bd1e4b85f708'}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(penguins, aes(x = bill_depth_mm, y = body_mass_g)) +\n  geom_point() + geom_smooth(method = \"lm\") +\n  scale_x_log10() + scale_y_log10() +\n  labs(title = \"Plot 2\")\n```\n\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/unnamed-chunk-13-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n### `coord_trans()`\n\n\n::: {.cell layout-align=\"center\" output-location='column' hash='06-coordinates-facets_cache/revealjs/unnamed-chunk-14_da4d569f20554a7b3e168250b46924dc'}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(penguins, aes(x = bill_depth_mm, y = body_mass_g)) +\n  geom_point() + geom_smooth(method = \"lm\") +\n  coord_trans(x = \"log10\", y = \"log10\") +\n  labs(title = \"Plot 3\")\n```\n\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/unnamed-chunk-14-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n### `log()`\n\n\n::: {.cell layout-align=\"center\" output-location='column' hash='06-coordinates-facets_cache/revealjs/unnamed-chunk-15_100f0b5774128d945b732ba6eea5e699'}\n\n```{.r .cell-code  code-line-numbers=\"4-5\"}\nggplot(\n  penguins,\n  aes(\n    x = log(bill_depth_mm, base = 10),\n    y = log(body_mass_g, base = 10)\n  )\n) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  labs(title = \"Plot 4\")\n```\n\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/unnamed-chunk-15-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n:::\n\n## Pie charts and bullseye charts with `coord_polar()`\n\n\n::: {.cell layout-align=\"center\" output-location='column' hash='06-coordinates-facets_cache/revealjs/unnamed-chunk-16_540edfa30299f1990e292e739a812f5f'}\n\n```{.r .cell-code  code-line-numbers=\"7,12\"}\nggplot(penguins, aes(x = 1, fill = species)) +\n  geom_bar() +\n  labs(title = \"Stacked bar chart\")\n\nggplot(penguins, aes(x = 1, fill = species)) +\n  geom_bar() +\n  coord_polar(theta = \"y\") +\n  labs(title = \"Pie chart\")\n\nggplot(penguins, aes(x = 1, fill = species)) +\n  geom_bar() +\n  coord_polar(theta = \"x\") +\n  labs(title = \"Bullseye chart\")\n```\n\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/unnamed-chunk-16-1.png){fig-align='center' width=50%}\n:::\n\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/unnamed-chunk-16-2.png){fig-align='center' width=50%}\n:::\n\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/unnamed-chunk-16-3.png){fig-align='center' width=50%}\n:::\n:::\n\n\n---\n\n[aside: about pie charts...]{.large .hand}\n\n## Pie charts\n\n::: appex\nWhat do you know about pie charts and data visualization best practices? Love 'em or lose 'em?\n:::\n\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\" hash='06-coordinates-facets_cache/revealjs/unnamed-chunk-17_a6183f1e84b07804e57b6e0f1d6e9091'}\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/unnamed-chunk-17-1.png){fig-align='center' width=80%}\n:::\n\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/unnamed-chunk-17-2.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## Pie charts: when to love 'em, when to lose 'em\n\n:::: columns\n\n::: {.column width=\"30%\"}\n\n❤️ For categorical variables with few levels, pie charts can work well\n\n<br><br><br><br>\n\n💔 For categorical variables with many levels, pie charts are difficult to read\n\n:::\n\n::: {.column width=\"70%\"}\n\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\" hash='06-coordinates-facets_cache/revealjs/unnamed-chunk-18_a71ce152df5baa91743f80c0b639b52e'}\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/unnamed-chunk-18-1.png){fig-align='center' width=80%}\n:::\n\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/unnamed-chunk-18-2.png){fig-align='center' width=80%}\n:::\n\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/unnamed-chunk-18-3.png){fig-align='center' width=80%}\n:::\n\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/unnamed-chunk-18-4.png){fig-align='center' width=80%}\n:::\n:::\n\n\n:::\n\n::::\n\n## Waffle charts\n\n- Like with pie charts, work best when the number of levels represented is low\n- Unlike pie charts, easier to compare proportions that represent non-simple fractions\n\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\" hash='06-coordinates-facets_cache/revealjs/unnamed-chunk-19_cd0f7213f24155ea10d78bec6d84de8b'}\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/unnamed-chunk-19-1.png){fig-align='center' width=100%}\n:::\n\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/unnamed-chunk-19-2.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Waffle charts: making of\n\n\n::: {.cell layout-align=\"center\" output-location='column' hash='06-coordinates-facets_cache/revealjs/waffle-penguin_a45a6619cdd6d56f36c5a4e7ba21cc3d'}\n\n```{.r .cell-code  code-line-numbers=\"1,6-8\"}\nlibrary(waffle)\n\npenguins |>\n  count(species) |>\n  ggplot(aes(fill = species, values = n)) +\n  geom_waffle(color = \"white\",\n              flip = TRUE,\n              make_proportional = TRUE) +\n  labs(fill = NULL,\n       title = \"Penguin species\")\n```\n\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/waffle-penguin-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Waffle charts: enhanced theme\n\n\n::: {.cell layout-align=\"center\" output-location='column' hash='06-coordinates-facets_cache/revealjs/waffle-penguin-theme_5886989b9b433c10e757a27149713d83'}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\npenguins |>\n  count(species) |>\n  ggplot(aes(fill = species, values = n)) +\n  geom_waffle(color = \"white\", flip = TRUE, make_proportional = TRUE) +\n  labs(fill = NULL, title = \"Penguin species\") +\n  theme_enhance_waffle()\n```\n\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/waffle-penguin-theme-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n# Facets\n\n## `facet_*()`\n\n:::: columns\n\n::: column\n- `facet_wrap()` \n  - \"wraps\" a 1d ribbon of panels into 2d\n  - generally for faceting by a single variable\n- `facet_grid()` for faceting \n  - produces a 2d grid of panels defined by variables which form the rows and columns\n  - generally for faceting by two variables\n- `facet_null()`: a single plot, the default\n\n:::\n\n::: column\n\n![](images/06/grammar-of-graphics.png)\n\n:::\n\n::::\n\n## Free the scales!\n\n\n::: {.cell layout-align=\"center\" output-location='column' hash='06-coordinates-facets_cache/revealjs/free-all-scales_35305eb452f8102df710cd78163b95dc'}\n\n```{.r .cell-code  code-line-numbers=\"|10\"}\np <- ggplot(penguins, aes(x = flipper_length_mm,\n                          y = body_mass_g)) +\n  geom_point()\n\np + \n  facet_wrap(vars(species)) + \n  labs(title = \"Same scales\")\np + \n  facet_wrap(vars(species),\n             scales = \"free\") +\n  labs(title = \"Free scales\")\n```\n\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/free-all-scales-1.png){fig-align='center' width=100%}\n:::\n\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/free-all-scales-2.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Free some scales\n\n\n::: {.cell layout-align=\"center\" output-location='column' hash='06-coordinates-facets_cache/revealjs/free-some-scales_4155f9956f6986118501503cfb3d264b'}\n\n```{.r .cell-code  code-line-numbers=\"3,8\"}\np +\n  facet_wrap(vars(species),\n             scales = \"free_x\") +\n  labs(title = \"Free x scale\")\n\np +\n  facet_wrap(vars(species),\n             scales = \"free_y\") +\n  labs(title = \"Free x scale\")\n```\n\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/free-some-scales-1.png){fig-align='center' width=100%}\n:::\n\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/free-some-scales-2.png){fig-align='center' width=100%}\n:::\n:::\n\n\n---\n\n::: appex\nFreeing the y scale improves the display, but it's still not satisfying. What's wrong with it?\n:::\n\n::: smaller\n\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\" hash='06-coordinates-facets_cache/revealjs/free-scales-not-spaces_51d9c70c9948150d3d3475a4795a3fc9'}\n\n```{.r .cell-code}\nggplot(penguins, aes(y = species, x = body_mass_g, fill = species)) +\n  geom_boxplot(show.legend = FALSE) +\n  facet_grid(island ~ .) +\n  labs(title = \"Same scale and spacing\")\n\nggplot(penguins, aes(y = species, x = body_mass_g, fill = species)) +\n  geom_boxplot(show.legend = FALSE) +\n  facet_grid(island ~ ., scales = \"free_y\") +\n  labs(title = \"Free y scale, same spacing\")\n```\n\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/free-scales-not-spaces-1.png){fig-align='center' width=50%}\n:::\n\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/free-scales-not-spaces-2.png){fig-align='center' width=50%}\n:::\n:::\n\n\n:::\n\n## Free spaces\n\n\n::: {.cell layout-align=\"center\" hash='06-coordinates-facets_cache/revealjs/free-spaces_fd123de072dd3bd98c994c57f5278f3d'}\n\n```{.r .cell-code}\nggplot(penguins, aes(y = species, x = body_mass_g, fill = species)) +\n  geom_boxplot(show.legend = FALSE) +\n  facet_grid(island ~ ., scales = \"free_y\", space = \"free\") +\n  labs(title = \"Free y scale and spacing\")\n```\n\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/free-spaces-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## Highlighting across facets\n\n\n::: {.cell layout-align=\"center\" hash='06-coordinates-facets_cache/revealjs/unnamed-chunk-26_3a00a8047bd7b399813a3c0c9e5857eb'}\n\n```{.r .cell-code}\npenguins_sans_species <- penguins |> select(-species)\n\nggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g)) +\n  geom_point(data = penguins_sans_species, color = \"gray\") +\n  geom_point(aes(color = species)) +\n  facet_wrap(vars(species))\n```\n\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/unnamed-chunk-26-1.png){fig-align='center' width=50%}\n:::\n:::\n\n\n# Themes\n\n## Complete themes\n\n\n::: {.cell layout-nrow=\"2\" layout-ncol=\"2\" layout-align=\"center\" hash='06-coordinates-facets_cache/revealjs/unnamed-chunk-27_38250e7105b9ef303a17e61be1369ec1'}\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/unnamed-chunk-27-1.png){fig-align='center' width=80%}\n:::\n\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/unnamed-chunk-27-2.png){fig-align='center' width=80%}\n:::\n\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/unnamed-chunk-27-3.png){fig-align='center' width=80%}\n:::\n\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/unnamed-chunk-27-4.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## Themes from **ggthemes**\n\n\n::: {.cell layout-nrow=\"2\" layout-ncol=\"2\" layout-align=\"center\" hash='06-coordinates-facets_cache/revealjs/unnamed-chunk-28_3f7c98188578d32e69fba7c6560227a9'}\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/unnamed-chunk-28-1.png){fig-align='center' width=80%}\n:::\n\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/unnamed-chunk-28-2.png){fig-align='center' width=80%}\n:::\n\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/unnamed-chunk-28-3.png){fig-align='center' width=80%}\n:::\n\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/unnamed-chunk-28-4.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## Themes and color scales from ggthemes\n\n\n::: {.cell layout-align=\"center\" hash='06-coordinates-facets_cache/revealjs/unnamed-chunk-29_75d08f78c8131498e7ad5e93986ee010'}\n\n```{.r .cell-code}\np + \n  aes(color = species) +\n  scale_color_wsj() +\n  theme_wsj() + \n  labs(title = \"Wall Street Journal\")\n```\n\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/unnamed-chunk-29-1.png){fig-align='center' width=60%}\n:::\n:::\n\n\n## Modifying theme elements\n\n\n::: {.cell layout-align=\"center\" hash='06-coordinates-facets_cache/revealjs/unnamed-chunk-30_ef59184a2bf1223fb75417c34fc43f8a'}\n\n```{.r .cell-code}\np + \n  labs(title = \"Palmer penguins\") +\n  theme(\n    plot.title = element_text(color = \"red\", face = \"bold\", family = \"Comic Sans MS\"),\n    plot.background = element_rect(color = \"red\", fill = \"mistyrose\")\n  )\n```\n\n::: {.cell-output-display}\n![](06-coordinates-facets_files/figure-revealjs/unnamed-chunk-30-1.png){fig-align='center' width=60%}\n:::\n:::\n\n\n# Project #1\n\n## Project #1\n\n:::: columns\n\n::: column\n\n- Initial proposal\n- Develop as a team\n- Take chances, make mistakes, get messy!\n\n:::\n\n::: column\n\n\n::: {.cell layout-align=\"center\" hash='06-coordinates-facets_cache/revealjs/unnamed-chunk-31_485808d35981175beba4463d340583cc'}\n::: {.cell-output-display}\n![](https://media.giphy.com/media/vhpwk2TOw2hq0/giphy.gif){fig-align='center' width=80%}\n:::\n:::\n\n\n:::\n\n::::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/countdown/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/countdown/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}