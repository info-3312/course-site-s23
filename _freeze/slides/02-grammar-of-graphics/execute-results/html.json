{
  "hash": "97a530366634379504b485cbf42d7e9b",
  "result": {
    "markdown": "---\ntitle: \"The grammar of graphics\"\nsubtitle: \"Lecture 2\"\ndate: \"January 26, 2023\"\nformat: revealjs\n---\n\n\n\n\n# Data visualization\n\n## Data visualization\n\n> *\"The simple graph has brought more information to the data analyst's mind than any other device.\"*\n> \n> John Tukey\n\n- Data visualization is the creation and study of the visual representation of data\n- Many tools for visualizing data -- R is one of them\n- Many approaches/systems within R for making data visualizations -- **ggplot2** is one of them, and that's what we're going to use\n\n## ggplot2 $\\in$ tidyverse\n\n:::: columns\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/unnamed-chunk-2_71f31389c351be333f20c0e42495bf12'}\n::: {.cell-output-display}\n![](images/02/ggplot2-part-of-tidyverse.png){fig-align='center' width=80%}\n:::\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n- **ggplot2** is tidyverse's data visualization package \n- `gg` in \"ggplot2\" stands for Grammar of Graphics \n- Inspired by the book **Grammar of Graphics** by Leland Wilkinson\n\n:::\n::::\n\n## Grammar of Graphics\n\n:::: columns\n\n::: {.column width=\"33%\"}\n\nA grammar of graphics is a tool that enables us to concisely describe the components of a graphic\n\n:::\n\n::: {.column width=\"67%\"}\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/unnamed-chunk-3_28ee242789cb4afcefc201d4d99e22dd'}\n::: {.cell-output-display}\n![](images/02/grammar-of-graphics.png){fig-align='center' width=90%}\n:::\n:::\n\n\n:::\n::::\n\n::: aside\nSource: [BloggoType](http://bloggotype.blogspot.com/2016/08/holiday-notes2-grammar-of-graphics.html)\n:::\n\n## Hello ggplot2!\n\n- `ggplot()` is the main function in ggplot2\n- Plots are constructed in layers\n- Structure of the code for plots can be summarized as\n\n```r\nggplot(data = [dataset], \n       mapping = aes(x = [x-variable], y = [y-variable])) +\n   geom_xxx() +\n   other options\n```\n\n- The ggplot2 package comes with the tidyverse\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/unnamed-chunk-4_0cb215606e6bd1b577f1df2303aa0e49'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n- For help with ggplot2, see [ggplot2.tidyverse.org](http://ggplot2.tidyverse.org/)\n\n# Why do we visualize?\n\n## Why do we visualize? \n\n1. Discover patterns that may not be obvious from numerical summaries\n\n## Anscombe's quartet\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/quartet-for-show_aa2d643b18dadb67f1bae36041d2c72c'}\n\n```{.r .cell-code}\nlibrary(Tmisc)\nquartet |> slice_head(n = 15)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   set  x     y\n1    I 10  8.04\n2    I  8  6.95\n3    I 13  7.58\n4    I  9  8.81\n5    I 11  8.33\n6    I 14  9.96\n7    I  6  7.24\n8    I  4  4.26\n9    I 12 10.84\n10   I  7  4.82\n11   I  5  5.68\n12  II 10  9.14\n13  II  8  8.14\n14  II 13  8.74\n15  II  9  8.77\n```\n:::\n:::\n\n\n## Summary statistics for Anscombe's quartet\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/quartet-summary_159069fa0ee9a2d66c31ad6ab9b71338'}\n\n```{.r .cell-code}\nquartet |>\n  group_by(set) |>\n  summarise(\n    mean_x = mean(x), \n    mean_y = mean(y),\n    sd_x = sd(x),\n    sd_y = sd(y),\n    r = cor(x, y)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 √ó 6\n  set   mean_x mean_y  sd_x  sd_y     r\n  <fct>  <dbl>  <dbl> <dbl> <dbl> <dbl>\n1 I          9   7.50  3.32  2.03 0.816\n2 II         9   7.50  3.32  2.03 0.816\n3 III        9   7.5   3.32  2.03 0.816\n4 IV         9   7.50  3.32  2.03 0.817\n```\n:::\n:::\n\n\n## Scatterplots for Anscombe's quartet\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/quartet-plot_4eb43889901910c98bad30bd84ae179c'}\n::: {.cell-output-display}\n![](02-grammar-of-graphics_files/figure-revealjs/quartet-plot-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Why do we visualize? \n\n1. Discover patterns that may not be obvious from numerical summaries\n\n2. Convey information in a way that is otherwise difficult/impossible to convey\n\n## [Impact of Omicron variant on unvaccinated populations]{.small}\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/unnamed-chunk-8_09e587fa190f68eab387b9fcd4870014'}\n::: {.cell-output-display}\n![](images/02/covid-hong-kong.jpeg){fig-align='center' width=70%}\n:::\n:::\n\n\n::: aside\nSource: [John Burn-Murdoch](https://twitter.com/jburnmurdoch/status/1503420660869214213)\n:::\n\n## [COVID-19 vaccination in US Counties]{.small}\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/unnamed-chunk-9_073d6268dcce86855080832fbfd53f40'}\n::: {.cell-output-display}\n![](images/02/nytimes-us-covid-vaccine.png){fig-align='center' width=70%}\n:::\n:::\n\n\n::: aside\nSource: [New York Times](https://www.nytimes.com/interactive/2020/us/covid-19-vaccine-doses.html), March 28, 2022.\n:::\n\n# ggplot2 ‚ù§Ô∏è üêß\n\n## ggplot2 $\\in$ tidyverse\n\n:::: columns\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/unnamed-chunk-10_1659d161bf199bba7482c74e17a8ec7d'}\n::: {.cell-output-display}\n![](images/02/ggplot2-part-of-tidyverse.png){fig-align='center' width=80%}\n:::\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n- **ggplot2** is tidyverse's data visualization package \n- Structure of the code for plots can be summarized as\n\n```r\nggplot(data = [dataset], \n       mapping = aes(x = [x-variable], \n                     y = [y-variable])) +\n   geom_xxx() +\n   other options\n```\n\n:::\n::::\n\n## Data: Palmer Penguins\n\nMeasurements for penguin species, island in Palmer Archipelago, size (flipper length, body mass, bill dimensions), and sex.\n\n:::: columns\n\n::: {.column width=\"33%\"}\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/unnamed-chunk-11_c5cfb7b29a09775fa073d02b92e5a41b'}\n::: {.cell-output-display}\n![](images/02/penguins.png){fig-align='center' width=80%}\n:::\n:::\n\n\n:::\n\n::: {.column width=\"67%\"}\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/unnamed-chunk-12_c3b18bb2626081649a4664af6b0d189b'}\n\n```{.r .cell-code}\nlibrary(palmerpenguins)\nglimpse(penguins)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel‚Ä¶\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse‚Ä¶\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, ‚Ä¶\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, ‚Ä¶\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186‚Ä¶\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, ‚Ä¶\n$ sex               <fct> male, female, female, NA, female, male, female, male‚Ä¶\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007‚Ä¶\n```\n:::\n:::\n\n\n:::\n::::\n\n---\n\n::: {.panel-tabset}\n\n### Plot\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/unnamed-chunk-13_75f80a33fd30dd12a6a17f7c907dbbf0'}\n::: {.cell-output-display}\n![](02-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-13-1.png){fig-align='center' width=70%}\n:::\n:::\n\n\n### Code\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/penguins_8a13728b57f1392bc22f1077ac1a76d8'}\n\n```{.r .cell-code}\nggplot(data = penguins, \n       mapping = aes(x = bill_depth_mm, y = bill_length_mm,\n                     color = species)) +\n  geom_point() +\n  labs(title = \"Bill depth and length\",\n       subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n       x = \"Bill depth (mm)\", y = \"Bill length (mm)\",\n       color = \"Species\")\n```\n:::\n\n\n:::\n\n# Coding out loud\n\n---\n\n::: {.small}\n> **Start with the `penguins` data frame**\n\n\n::: {.cell layout-align=\"center\" output-location='column' hash='02-grammar-of-graphics_cache/revealjs/penguins-0_418cbb57611955fa71ef3c89d518f032'}\n\n```{.r .cell-code  code-line-numbers=\"1\"}\nggplot(data = penguins)\n```\n\n::: {.cell-output-display}\n![](02-grammar-of-graphics_files/figure-revealjs/penguins-0-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n:::\n\n---\n\n::: {.small}\n> Start with the `penguins` data frame,\n> **map bill depth to the x-axis**\n\n\n::: {.cell layout-align=\"center\" output-location='column' hash='02-grammar-of-graphics_cache/revealjs/penguins-1_073861f26a346393f8eacadcf59ff302'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nggplot(data = penguins,\n       mapping = aes(x = bill_depth_mm))\n```\n\n::: {.cell-output-display}\n![](02-grammar-of-graphics_files/figure-revealjs/penguins-1-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n:::\n\n---\n\n::: {.small}\n> Start with the `penguins` data frame,\n> map bill depth to the x-axis\n> **and map bill length to the y-axis.**\n\n\n::: {.cell layout-align=\"center\" output-location='column' hash='02-grammar-of-graphics_cache/revealjs/penguins-2_ae6f434d05c5ae31d60bef195d79cfce'}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(data = penguins,\n       mapping = aes(x = bill_depth_mm,\n                     y = bill_length_mm))\n```\n\n::: {.cell-output-display}\n![](02-grammar-of-graphics_files/figure-revealjs/penguins-2-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n:::\n\n---\n\n::: {.small}\n> Start with the `penguins` data frame,\n> map bill depth to the x-axis\n> and map bill length to the y-axis. \n> **Represent each observation with a point**\n\n\n::: {.cell layout-align=\"center\" output-location='column' hash='02-grammar-of-graphics_cache/revealjs/penguins-3_672b2af62d7fbd2f1983c9c672318e5c'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(data = penguins,\n       mapping = aes(x = bill_depth_mm,\n                     y = bill_length_mm)) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](02-grammar-of-graphics_files/figure-revealjs/penguins-3-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n:::\n\n---\n\n::: {.small}\n> Start with the `penguins` data frame,\n> map bill depth to the x-axis\n> and map bill length to the y-axis. \n> Represent each observation with a point\n> **and map species to the color of each point.**\n\n\n::: {.cell layout-align=\"center\" output-location='column' hash='02-grammar-of-graphics_cache/revealjs/penguins-4_0423a689db0bf8cb3d6b05f5bb572df4'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(data = penguins,\n       mapping = aes(x = bill_depth_mm,\n                     y = bill_length_mm,\n                     color = species)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](02-grammar-of-graphics_files/figure-revealjs/penguins-4-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n:::\n\n---\n\n::: {.small}\n> Start with the `penguins` data frame,\n> map bill depth to the x-axis\n> and map bill length to the y-axis. \n> Represent each observation with a point\n> and map species to the color of each point.\n> **Title the plot \"Bill depth and length\"**\n\n\n::: {.cell layout-align=\"center\" output-location='column' hash='02-grammar-of-graphics_cache/revealjs/penguins-5_ee82a5b2f5eb87ef518165336ecfc5f8'}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(data = penguins,\n       mapping = aes(x = bill_depth_mm,\n                     y = bill_length_mm,\n                     color = species)) +\n  geom_point() +\n  labs(title = \"Bill depth and length\")\n```\n\n::: {.cell-output-display}\n![](02-grammar-of-graphics_files/figure-revealjs/penguins-5-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n:::\n\n---\n\n::: {.small}\n> Start with the `penguins` data frame,\n> map bill depth to the x-axis\n> and map bill length to the y-axis. \n> Represent each observation with a point\n> and map species to the color of each point.\n> Title the plot \"Bill depth and length\", \n> **add the subtitle \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\"**\n\n\n::: {.cell layout-align=\"center\" output-location='column' hash='02-grammar-of-graphics_cache/revealjs/penguins-6_cb4512d69ab42c6509792b604bd508a4'}\n\n```{.r .cell-code  code-line-numbers=\"7\"}\nggplot(data = penguins,\n       mapping = aes(x = bill_depth_mm,\n                     y = bill_length_mm,\n                     color = species)) +\n  geom_point() +\n  labs(title = \"Bill depth and length\",\n       subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\")\n```\n\n::: {.cell-output-display}\n![](02-grammar-of-graphics_files/figure-revealjs/penguins-6-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n:::\n\n---\n\n::: {.small}\n> Start with the `penguins` data frame,\n> map bill depth to the x-axis\n> and map bill length to the y-axis. \n> Represent each observation with a point\n> and map species to the color of each point.\n> Title the plot \"Bill depth and length\", \n> add the subtitle \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\", \n> **label the x and y axes as \"Bill depth (mm)\" and \"Bill length (mm)\", respectively**\n\n\n::: {.cell layout-align=\"center\" output-location='column' hash='02-grammar-of-graphics_cache/revealjs/penguins-7_03dfc1480472b18feeaf3c8e262f9600'}\n\n```{.r .cell-code  code-line-numbers=\"8\"}\nggplot(data = penguins,\n       mapping = aes(x = bill_depth_mm,\n                     y = bill_length_mm,\n                     color = species)) +\n  geom_point() +\n  labs(title = \"Bill depth and length\",\n       subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n       x = \"Bill depth (mm)\", y = \"Bill length (mm)\")\n```\n\n::: {.cell-output-display}\n![](02-grammar-of-graphics_files/figure-revealjs/penguins-7-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n:::\n\n---\n\n::: {.small}\n> Start with the `penguins` data frame,\n> map bill depth to the x-axis\n> and map bill length to the y-axis. \n> Represent each observation with a point\n> and map species to the color of each point.\n> Title the plot \"Bill depth and length\", \n> add the subtitle \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\", \n> label the x and y axes as \"Bill depth (mm)\" and \"Bill length (mm)\", respectively,\n> **label the legend \"Species\"**\n\n\n::: {.cell layout-align=\"center\" output-location='column' hash='02-grammar-of-graphics_cache/revealjs/penguins-8_892d3bcd6a0ff3aaa97313e1eae37093'}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot(data = penguins,\n       mapping = aes(x = bill_depth_mm,\n                     y = bill_length_mm,\n                     color = species)) +\n  geom_point() +\n  labs(title = \"Bill depth and length\",\n       subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n       x = \"Bill depth (mm)\", y = \"Bill length (mm)\",\n       color = \"Species\")\n```\n\n::: {.cell-output-display}\n![](02-grammar-of-graphics_files/figure-revealjs/penguins-8-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n:::\n\n---\n\n::: {.small}\n> Start with the `penguins` data frame,\n> map bill depth to the x-axis\n> and map bill length to the y-axis. \n> Represent each observation with a point\n> and map species to the color of each point.\n> Title the plot \"Bill depth and length\", \n> add the subtitle \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\", \n> label the x and y axes as \"Bill depth (mm)\" and \"Bill length (mm)\", respectively,\n> label the legend \"Species\", \n> **and add a caption for the data source.**\n\n\n::: {.cell layout-align=\"center\" output-location='column' hash='02-grammar-of-graphics_cache/revealjs/penguins-9_ff1dda356a865cf6f2742b392b5cf192'}\n\n```{.r .cell-code  code-line-numbers=\"10\"}\nggplot(data = penguins,\n       mapping = aes(x = bill_depth_mm,\n                     y = bill_length_mm,\n                     color = species)) +\n  geom_point() +\n  labs(title = \"Bill depth and length\",\n       subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n       x = \"Bill depth (mm)\", y = \"Bill length (mm)\",\n       color = \"Species\",\n       caption = \"Source: Palmer Station LTER / palmerpenguins package\")\n```\n\n::: {.cell-output-display}\n![](02-grammar-of-graphics_files/figure-revealjs/penguins-9-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n:::\n\n---\n\n::: {.small}\n> Start with the `penguins` data frame,\n> map bill depth to the x-axis\n> and map bill length to the y-axis. \n> Represent each observation with a point\n> and map species to the color of each point.\n> Title the plot \"Bill depth and length\", \n> add the subtitle \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\", \n> label the x and y axes as \"Bill depth (mm)\" and \"Bill length (mm)\", respectively,\n> label the legend \"Species\", \n> and add a caption for the data source.\n> **Finally, use a discrete color scale that is designed to be perceived by viewers with common forms of color blindness.**\n\n\n::: {.cell layout-align=\"center\" output-location='column' hash='02-grammar-of-graphics_cache/revealjs/penguins-10_8f4897ed668fc9dc3cd16a74c545e10e'}\n\n```{.r .cell-code  code-line-numbers=\"11\"}\nggplot(data = penguins,\n       mapping = aes(x = bill_depth_mm,\n                     y = bill_length_mm,\n                     color = species)) +\n  geom_point() +\n  labs(title = \"Bill depth and length\",\n       subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n       x = \"Bill depth (mm)\", y = \"Bill length (mm)\",\n       color = \"Species\",\n       caption = \"Source: Palmer Station LTER / palmerpenguins package\") +\n  scale_color_viridis_d()\n```\n\n::: {.cell-output-display}\n![](02-grammar-of-graphics_files/figure-revealjs/penguins-10-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n:::\n\n---\n\n::: {.panel-tabset}\n\n### Plot\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/unnamed-chunk-26_eb147be2b1ef533d323e29dc1abc71b9'}\n::: {.cell-output-display}\n![](02-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-26-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n### Code\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/penguins-10-nohighlight_f69e5dc03ec48b0975ff7da1c211f363'}\n\n```{.r .cell-code}\nggplot(data = penguins,\n       mapping = aes(x = bill_depth_mm,\n                     y = bill_length_mm,\n                     color = species)) +\n  geom_point() +\n  labs(title = \"Bill depth and length\",\n       subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n       x = \"Bill depth (mm)\", y = \"Bill length (mm)\",\n       color = \"Species\",\n       caption = \"Source: Palmer Station LTER / palmerpenguins package\") +\n  scale_color_viridis_d()\n```\n:::\n\n\n### Narrative\n\nStart with the `penguins` data frame,\nmap bill depth to the x-axis\nand map bill length to the y-axis. \n\nRepresent each observation with a point\nand map species to the color of each point.\n\nTitle the plot \"Bill depth and length\", \nadd the subtitle \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\", \nlabel the x and y axes as \"Bill depth (mm)\" and \"Bill length (mm)\", respectively,\nlabel the legend \"Species\", \nand add a caption for the data source.\n\nFinally, use a discrete color scale that is designed to be perceived by viewers with common forms of color blindness.\n\n:::\n\n---\n\n## Argument names\n\n::: appex\nYou can omit the names of first two arguments when building plots with `ggplot()`.\n:::\n\n:::: columns\n\n::: {.column .small width=\"50%\"}\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/named-args_43318bffa336bba226760d99846e92e5'}\n\n```{.r .cell-code}\nggplot(data = penguins,\n       mapping = aes(x = bill_depth_mm,\n                     y = bill_length_mm,\n                     color = species)) +\n  geom_point() +\n  scale_color_viridis_d()\n```\n:::\n\n\n:::\n\n::: {.column .small width=\"50%\"}\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/not-named-args_ebab8a9a2d0e917d428ce540cb3c071d'}\n\n```{.r .cell-code}\nggplot(penguins,\n       aes(x = bill_depth_mm,\n           y = bill_length_mm,\n           color = species)) +\n  geom_point() +\n  scale_color_viridis_d()\n```\n:::\n\n\n:::\n\n::::\n\n# Aesthetics\n\n\n## Aesthetics options\n\nCommonly used characteristics of plotting characters that can be **mapped to a specific variable** in the data are\n\n- `color`\n- `shape`\n- `size`\n- `alpha` (transparency)\n\n## Color\n\n\n::: {.cell layout-align=\"center\" output-location='column' hash='02-grammar-of-graphics_cache/revealjs/color_665942f493807827f34e348c74ca8995'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(penguins,\n       aes(x = bill_depth_mm, \n           y = bill_length_mm,\n           color = species)) +\n  geom_point() +\n  scale_color_viridis_d()\n```\n\n::: {.cell-output-display}\n![](02-grammar-of-graphics_files/figure-revealjs/color-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Shape\n\nMapped to a different variable than `color`\n\n\n::: {.cell layout-align=\"center\" output-location='column' hash='02-grammar-of-graphics_cache/revealjs/shape-island_5ae72295514b3515108f61e60ab3d243'}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nggplot(penguins,\n       aes(x = bill_depth_mm, \n           y = bill_length_mm,\n           color = species,\n           shape = island)) +\n  geom_point() +\n  scale_color_viridis_d()\n```\n\n::: {.cell-output-display}\n![](02-grammar-of-graphics_files/figure-revealjs/shape-island-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Shape\n\nMapped to same variable as `color`\n\n\n::: {.cell layout-align=\"center\" output-location='column' hash='02-grammar-of-graphics_cache/revealjs/shape-species_93e19f78d128704533091a15fe64cd76'}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nggplot(penguins,\n       aes(x = bill_depth_mm, \n           y = bill_length_mm,\n           color = species,\n           shape = species)) +\n  geom_point() +\n  scale_color_viridis_d()\n```\n\n::: {.cell-output-display}\n![](02-grammar-of-graphics_files/figure-revealjs/shape-species-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Size\n\n\n::: {.cell layout-align=\"center\" output-location='column' hash='02-grammar-of-graphics_cache/revealjs/size_4ff1ff50c0556a906be574c1af57e5b0'}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(penguins,\n       aes(x = bill_depth_mm, \n           y = bill_length_mm,\n           color = species,\n           shape = species,\n           size = body_mass_g)) +\n  geom_point() +\n  scale_color_viridis_d()\n```\n\n::: {.cell-output-display}\n![](02-grammar-of-graphics_files/figure-revealjs/size-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Alpha\n\n\n::: {.cell layout-align=\"center\" output-location='column' hash='02-grammar-of-graphics_cache/revealjs/alpha_d597eb4b155c11ee7105cd960599af00'}\n\n```{.r .cell-code  code-line-numbers=\"7\"}\nggplot(penguins,\n       aes(x = bill_depth_mm, \n           y = bill_length_mm,\n           color = species,\n           shape = species,\n           size = body_mass_g,\n           alpha = flipper_length_mm)) +\n  geom_point() +\n  scale_color_viridis_d()\n```\n\n::: {.cell-output-display}\n![](02-grammar-of-graphics_files/figure-revealjs/alpha-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n---\n\n:::: columns\n\n::: {.column width=\"50%\"}\n\n### Mapping\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/unnamed-chunk-35_2f29e7c850c8f0255cff6fb61fecb7c3'}\n\n```{.r .cell-code  code-line-numbers=\"4,5\"}\nggplot(penguins,\n       aes(x = bill_depth_mm,\n           y = bill_length_mm,\n           size = body_mass_g,\n           alpha = flipper_length_mm)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](02-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-35-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n### Setting\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/unnamed-chunk-36_2eb1dfbf6299f18985f6d70fcab9309b'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(penguins,\n       aes(x = bill_depth_mm,\n           y = bill_length_mm)) + \n  geom_point(size = 2, alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](02-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-36-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n:::\n\n::::\n\n## Mapping vs. setting\n\n- **Mapping:** Determine the size, alpha, etc. of points based on the values of a variable in the data\n  - goes into `aes()`\n\n- **Setting:** Determine the size, alpha, etc. of points **not** based on the values of a variable in the data\n  - goes into `geom_*()` (this was `geom_point()` in the previous example, but we'll learn about other geoms soon!)\n  \n# Faceting\n\n## Faceting\n\n- Smaller plots that display different subsets of the data\n- Useful for exploring conditional relationships and large data\n\n---\n\n::: {.panel-tabset}\n\n### Plot\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/unnamed-chunk-37_760b78d2e8d52a88dd5f77fc6b36f69c'}\n::: {.cell-output-display}\n![](02-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-37-1.png){fig-align='center' width=70%}\n:::\n:::\n\n\n### Code\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/facet_e45c309b38d03efb49052cea7fe0a1ee'}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + \n  geom_point() +\n  facet_grid(rows = vars(species), cols = vars(island))\n```\n:::\n\n\n:::\n\n## Various ways to facet\n\n::: appex\nIn the next few slides describe what each plot displays. Think about how the code relates to the output.\n\n**Note:** The plots in the next few slides do not have proper titles, axis labels, etc. because we want you to figure out what's happening in the plots. But you should always label your plots!\n:::\n\n---\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/unnamed-chunk-39_dc740ce3a962ee249049d72c56146741'}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + \n  geom_point() +\n  facet_grid(rows = vars(species), cols = vars(sex))\n```\n\n::: {.cell-output-display}\n![](02-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-39-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n---\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/unnamed-chunk-40_d38a62f156ad25edaac2df1a94f5db8a'}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + \n  geom_point() +\n  facet_grid(rows = vars(sex), cols = vars(species))\n```\n\n::: {.cell-output-display}\n![](02-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-40-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n---\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/unnamed-chunk-41_c374b18b4c3bf8668412f6820ef486f7'}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + \n  geom_point() +\n  facet_wrap(facets = vars(species))\n```\n\n::: {.cell-output-display}\n![](02-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-41-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n---\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/unnamed-chunk-42_4804ee7ae084c66ddb4a9c1d63a13dfe'}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + \n  geom_point() +\n  facet_grid(rows = NULL, cols = vars(species))\n```\n\n::: {.cell-output-display}\n![](02-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-42-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n---\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/unnamed-chunk-43_0131017cdac9ac210f7db3a675b4b306'}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + \n  geom_point() +\n  facet_wrap(facets = vars(species), ncol = 2)\n```\n\n::: {.cell-output-display}\n![](02-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-43-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## Faceting summary\n\n- `facet_grid()`:\n    - 2 dimensional grid\n    - `rows = vars(<VARIABLE>), cols = vars(<VARIABLE>)`\n    - Alternative: `rows ~ cols`\n- `facet_wrap()`: 1 dimensional ribbon wrapped according to number of rows and columns specified or available plotting area\n\n## Facet and color\n\n::: {.panel-tabset}\n\n### Plot\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/unnamed-chunk-44_688b8ecbea7381a8b206cae4bae48608'}\n::: {.cell-output-display}\n![](02-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-44-1.png){fig-align='center' width=70%}\n:::\n:::\n\n\n### Code\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/facet-color-legend_95bfd71b7b6ff81321e864c77dacdf98'}\n\n```{.r .cell-code  code-line-numbers=\"5,8\"}\nggplot(\n  penguins, \n  aes(x = bill_depth_mm, \n      y = bill_length_mm, \n      color = species)) +\n  geom_point() +\n  facet_grid(species ~ sex) +\n  scale_color_viridis_d()\n```\n:::\n\n\n:::\n\n## Facet and color, no legend\n\n::: {.panel-tabset}\n\n### Plot\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/unnamed-chunk-46_2003baeaf66e507a9918e3bcc610e18f'}\n::: {.cell-output-display}\n![](02-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-46-1.png){fig-align='center' width=70%}\n:::\n:::\n\n\n### Code\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/facet-color-no-legend_fda156413c0cb185204a4c3345780d1b'}\n\n```{.r .cell-code  code-line-numbers=\"8\"}\nggplot(\n  penguins, \n  aes(x = bill_depth_mm, \n      y = bill_length_mm, \n      color = species)) +\n  geom_point() +\n  facet_grid(species ~ sex) +\n  scale_color_viridis_d(guide = \"none\")\n```\n:::\n\n\n:::\n\n# Take a sad plot, and make it better\n\n---\n\n::: {.appex .small}\nThe American Association of \nUniversity Professors (AAUP) is a nonprofit membership association of faculty \nand other academic professionals. \n[This report](https://www.aaup.org/sites/default/files/files/AAUP_Report_InstrStaff-75-11_apr2013.pdf) \nby the AAUP shows trends in instructional staff employees between 1975 \nand 2011, and contains an image very similar to the one given below.\n:::\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/unnamed-chunk-48_d25f83dfd2e059dd4a582317622d222f'}\n::: {.cell-output-display}\n![](images/02/staff-employment.png){fig-align='center' width=80%}\n:::\n:::\n\n\n---\n\n::: small\nEach row in this dataset represents a faculty type, and the columns are the years for which we have data. \nThe values are percentage of hires of that type of faculty for each year.\n\n:::\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/load-data-staff_6ccdecb9ac79c2aa7665a1beed33641e'}\n\n```{.r .cell-code}\nstaff <- read_csv(\"data/instructional-staff.csv\")\nstaff\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 √ó 12\n  facult‚Ä¶¬π `1975` `1989` `1993` `1995` `1999` `2001` `2003` `2005` `2007` `2009`\n  <chr>     <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>\n1 Full-Ti‚Ä¶   29     27.6   25     24.8   21.8   20.3   19.3   17.8   17.2   16.8\n2 Full-Ti‚Ä¶   16.1   11.4   10.2    9.6    8.9    9.2    8.8    8.2    8      7.6\n3 Full-Ti‚Ä¶   10.3   14.1   13.6   13.6   15.2   15.5   15     14.8   14.9   15.1\n4 Part-Ti‚Ä¶   24     30.4   33.1   33.2   35.5   36     37     39.3   40.5   41.1\n5 Graduat‚Ä¶   20.5   16.5   18.1   18.8   18.7   19     20     19.9   19.5   19.4\n# ‚Ä¶ with 1 more variable: `2011` <dbl>, and abbreviated variable name\n#   ¬π‚Äãfaculty_type\n```\n:::\n:::\n\n\n## Recreate the visualization\n\nIn order to recreate this visualization we need to first reshape the data to have one variable for faculty type and one variable for year. In other words, we will convert the data from the long format to wide format. \n\nBut before we do so... \n\n::: appex\nIf the long data will have a row for each year/faculty type combination, and there are 5 faculty types and 11 years of data, how many rows will the data have?\n:::\n\n---\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/unnamed-chunk-50_11ea3ab8c3f11e539b181557426d17dc'}\n::: {.cell-output-display}\n![](images/02/pivot.gif){fig-align='center' width=80%}\n:::\n:::\n\n\n## `pivot_*()` function\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/unnamed-chunk-51_9e7179a2ea9a0606336e575dcc4ca126'}\n::: {.cell-output-display}\n![](https://raw.githubusercontent.com/gadenbuie/tidyexplain/main/images/tidyr-pivoting.gif){fig-align='center' width=50%}\n:::\n:::\n\n\n## `pivot_longer()`\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/unnamed-chunk-52_e9e8bd432b87196b69c6111cc3320f76'}\n\n```{.r .cell-code}\npivot_longer(data, cols, names_to = \"name\", values_to = \"value\")\n```\n:::\n\n\n- The first argument is `data` as usual.\n- The second argument, `cols`, is where you specify which columns to pivot \ninto longer format -- in this case all columns except for the `faculty_type` \n- The third argument, `names_to`, is a string specifying the name of the column to create from the data stored in the column names of data -- in this case `year`\n- The fourth argument, `values_to`, is a string specifying the name of the column to create from the data stored in cell values, in this case `percentage`\n\n## Pivot instructor data\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/unnamed-chunk-53_8e1f414d512afc4c2ba0a43bc2f55f48'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nstaff_long <- staff |>\n  pivot_longer(cols = -faculty_type, names_to = \"year\", \n               values_to = \"percentage\") |>\n  mutate(percentage = as.numeric(percentage))\n\nstaff_long\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 55 √ó 3\n   faculty_type              year  percentage\n   <chr>                     <chr>      <dbl>\n 1 Full-Time Tenured Faculty 1975        29  \n 2 Full-Time Tenured Faculty 1989        27.6\n 3 Full-Time Tenured Faculty 1993        25  \n 4 Full-Time Tenured Faculty 1995        24.8\n 5 Full-Time Tenured Faculty 1999        21.8\n 6 Full-Time Tenured Faculty 2001        20.3\n 7 Full-Time Tenured Faculty 2003        19.3\n 8 Full-Time Tenured Faculty 2005        17.8\n 9 Full-Time Tenured Faculty 2007        17.2\n10 Full-Time Tenured Faculty 2009        16.8\n# ‚Ä¶ with 45 more rows\n```\n:::\n:::\n\n\n---\n\n::: {.appex .small}\nThis doesn't look quite right, how would you fix it?\n:::\n\n::: {.small}\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/unnamed-chunk-54_32bdcc3f08aaf986e52a3a638aac7db5'}\n\n```{.r .cell-code}\nstaff_long |>\n  ggplot(aes(x = percentage, y = year, color = faculty_type)) +\n  geom_col(position = \"dodge\")\n```\n\n::: {.cell-output-display}\n![](02-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-54-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n:::\n\n---\n\n::: {.small}\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/unnamed-chunk-55_2a0f78d2b93418118df09bf311d72c56'}\n\n```{.r .cell-code}\nstaff_long |>\n  ggplot(aes(x = percentage, y = year, fill = faculty_type)) +\n  geom_col(position = \"dodge\")\n```\n\n::: {.cell-output-display}\n![](02-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-55-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n:::\n\n## Some improvement...\n\n::: {.small}\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/unnamed-chunk-56_976b8c4ecca6a91978a5c31fa89a15a6'}\n\n```{.r .cell-code}\nstaff_long |>\n  ggplot(aes(x = percentage, y = year, fill = faculty_type)) +\n  geom_col()\n```\n\n::: {.cell-output-display}\n![](02-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-56-1.png){fig-align='center' width=60%}\n:::\n:::\n\n\n:::\n\n## More improvement\n\n::: {.small}\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/unnamed-chunk-57_722fc997bf70775f4c3ef4b730cd8c59'}\n\n```{.r .cell-code}\nstaff_long |>\n  ggplot(aes(x = year, y = percentage, group = faculty_type, \n             color = faculty_type)) +\n  geom_line() +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](02-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-57-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n:::\n\n\n## Goal: even more improvement!\n\n::: appex\nI want to achieve the following look but I have no idea how!\n:::\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/instructor-lines-for-show_8e10d6d93819b864c340f23b6fa320db'}\n::: {.cell-output-display}\n![](images/02/sketch.png){fig-align='center' width=60%}\n:::\n:::\n\n\n## Asking good questions\n\n- Describe what you want\n- Describe where you are\n- Create a minimal **repr**oducible **ex**ample: `reprex::reprex()`\n\n---\n\n::: {.panel-tabset}\n\n### Plot\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/unnamed-chunk-59_f818460ecbadebb79f764cc70ddfcca0'}\n::: {.cell-output-display}\n![](02-grammar-of-graphics_files/figure-revealjs/unnamed-chunk-59-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n### Code\n\n::: small\n\n\n::: {.cell layout-align=\"center\" hash='02-grammar-of-graphics_cache/revealjs/instructor-lines_3928b26b4e77d98352bc688f61b68708'}\n\n```{.r .cell-code  code-line-numbers=\"4-8,12-13,19\"}\nlibrary(scales)\n\nstaff_long |>\n  mutate(\n    part_time = if_else(faculty_type == \"Part-Time Faculty\",\n                        \"Part-Time Faculty\", \"Other Faculty\"),\n    year = as.numeric(year)\n    ) |>\n  ggplot(aes(x = year, y = percentage/100, group = faculty_type, \n             color = part_time)) +\n  geom_line() +\n  scale_color_manual(values = c(\"gray\", \"red\")) +\n  scale_y_continuous(labels = label_percent(accuracy = 1)) +\n  theme_minimal() +\n  labs(\n    title = \"Instructional staff employment trends\",\n    x = \"Year\", y = \"Percentage\", color = NULL\n  ) +\n  theme(legend.position = \"bottom\")\n```\n:::\n\n\n:::\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}