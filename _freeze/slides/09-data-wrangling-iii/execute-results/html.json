{
  "hash": "99f686b94d20a51938c6cc084cced9b2",
  "result": {
    "markdown": "---\ntitle: \"Data wrangling (III)\"\nsubtitle: \"Lecture 9\"\ndate: \"February 16, 2023\"\nformat: revealjs\nresources:\n  - \"data/cornell-degrees.csv\"\n---\n\n\n\n\n# Announcements\n\n## Announcements\n\n- Revised proposals submitted last night\n- I will leave written feedback on each proposal tomorrow(?)\n- Homework 2 due by 11:59pm on Friday\n\n## Agenda for today\n\n- Tidying data frames\n\n# Setup\n\n## Packages + figures\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# load packages\nlibrary(tidyverse)\nlibrary(scales)\nlibrary(ggthemes)\n\n# set default theme for ggplot2\ntheme_set(theme_minimal(base_size = 12))\n```\n:::\n\n\n### YAML options\n\n```yaml\nknitr:\n  opts_chunk:\n    fig.width: 7\n    fig.asp: 0.618\n    fig.retina: 2\n    dpi: 150\n    out.width: \"80%\"\n```\n\n# Tidy data\n\n## Tidy data\n\n\n::: {.cell layout-align=\"center\" hash='09-data-wrangling-iii_cache/revealjs/unnamed-chunk-3_638d3d4dadb19261bc171cb8b9e3e2ab'}\n::: {.cell-output-display}\n![](images/09/tidydata_1.jpg){fig-align='center' fig-alt='Stylized text providing an overview of Tidy Data. The top reads \\'Tidy data is a standard way of mapping the meaning of a dataset to its structure. - Hadley Wickham.\\' On the left reads \\'In tidy data: each variable forms a column; each observation forms a row; each cell is a single measurement.\\' There is an example table on the lower right with columns ‘id’, ‘name’ and ‘color’ with observations for different cats, illustrating tidy data structure.' width=70%}\n:::\n:::\n\n\n::: footnote\nIllustrations from the [Openscapes](https://www.openscapes.org/) blog [*Tidy Data for reproducibility, efficiency, and collaboration*](https://www.openscapes.org/blog/2020/10/12/tidy-data/) by Julia Lowndes and Allison Horst)\n:::\n\n## Tidy data\n\n\n::: {.cell layout-align=\"center\" hash='09-data-wrangling-iii_cache/revealjs/unnamed-chunk-4_3970ebcb70adf6c73e268ef352b4259b'}\n::: {.cell-output-display}\n![](images/09/tidydata_2.jpg){fig-align='center' fig-alt='There are two sets of anthropomorphized data tables. The top group of three tables are all rectangular and smiling, with a shared speech bubble reading \\'our columns are variables and our rows are observations!\\'. Text to the left of that group reads \\'The standard structure of tidy data means that \\'tidy datasets are all alike…\\' The lower group of four tables are all different shapes, look ragged and concerned, and have different speech bubbles reading (from left to right) \\'my column are values and my rows are variables\\', \\'I have variables in columns AND in rows\\', \\'I have multiple variables in a single column\\', and \\'I don’t even KNOW what my deal is.\\' Next to the frazzled data tables is text \\'...but every messy dataset is messy in its own way. -Hadley Wickham.\\'' width=70%}\n:::\n:::\n\n\n::: footnote\nIllustrations from the [Openscapes](https://www.openscapes.org/) blog [*Tidy Data for reproducibility, efficiency, and collaboration*](https://www.openscapes.org/blog/2020/10/12/tidy-data/) by Julia Lowndes and Allison Horst)\n:::\n\n## Tidy data\n\n\n::: {.cell layout-align=\"center\" hash='09-data-wrangling-iii_cache/revealjs/unnamed-chunk-5_30a2ee3684c6c934adb9837740dea27f'}\n::: {.cell-output-display}\n![](images/09/tidydata_3.jpg){fig-align='center' fig-alt='On the left is a happy cute fuzzy monster holding a rectangular data frame with a tool that fits the data frame shape. On the workbench behind the monster are other data frames of similar rectangular shape, and neatly arranged tools that also look like they would fit those data frames. The workbench looks uncluttered and tidy. The text above the tidy workbench reads \\'When working with tidy data, we can use the same tools in similar ways for different datasets…\\' On the right is a cute monster looking very frustrated, using duct tape and other tools to haphazardly tie data tables together, each in a different way. The monster is in front of a messy, cluttered workbench. The text above the frustrated monster reads \\'...but working with untidy data often means reinventing the wheel with one-time approaches that are hard to iterate or reuse.\\'' width=70%}\n:::\n:::\n\n\n::: footnote\nIllustrations from the [Openscapes](https://www.openscapes.org/) blog [*Tidy Data for reproducibility, efficiency, and collaboration*](https://www.openscapes.org/blog/2020/10/12/tidy-data/) by Julia Lowndes and Allison Horst)\n:::\n\n## Tidy data\n\n\n::: {.cell layout-align=\"center\" hash='09-data-wrangling-iii_cache/revealjs/unnamed-chunk-6_e2a2a12ba70d27307c54ee515d488ed5'}\n::: {.cell-output-display}\n![](images/09/tidydata_6.jpg){fig-align='center' fig-alt='Digital illustration of a cute fuzzy monster holding a brief case that says \\'tidy data,\\' standing beside a friendly looking data table character, being welcomed with cheers by many other data tables and another cute monster jumping with joy.' width=70%}\n:::\n:::\n\n\n::: footnote\nIllustrations from the [Openscapes](https://www.openscapes.org/) blog [*Tidy Data for reproducibility, efficiency, and collaboration*](https://www.openscapes.org/blog/2020/10/12/tidy-data/) by Julia Lowndes and Allison Horst)\n:::\n\n## Tidy data\n\n\n::: {.cell layout-align=\"center\" hash='09-data-wrangling-iii_cache/revealjs/unnamed-chunk-7_b42c3282738ca99ee5e26a98916264ce'}\n::: {.cell-output-display}\n![](images/09/tidydata_7.jpg){fig-align='center' fig-alt='Digital illustration of two cute fuzzy monsters sitting on a park bench with a smiling data table between them, all eating ice cream together. In text above the illustration are the hand drawn words \\'make friends with tidy data.\\'' width=70%}\n:::\n:::\n\n\n::: footnote\nIllustrations from the [Openscapes](https://www.openscapes.org/) blog [*Tidy Data for reproducibility, efficiency, and collaboration*](https://www.openscapes.org/blog/2020/10/12/tidy-data/) by Julia Lowndes and Allison Horst)\n:::\n\n## Common tidying tasks\n\n* Pivoting\n    * Longer\n    * Wider\n* Separating\n* Uniting\n\n## Pivot longer\n\n:::: columns\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell layout-align=\"center\" hash='09-data-wrangling-iii_cache/revealjs/spread-columns_85c4e01d103180cff08670222e3fb8f7'}\n\n```{.r .cell-code}\ntable4a\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 3\n  country     `1999` `2000`\n* <chr>        <int>  <int>\n1 Afghanistan    745   2666\n2 Brazil       37737  80488\n3 China       212258 213766\n```\n:::\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell layout-align=\"center\" hash='09-data-wrangling-iii_cache/revealjs/pivot-longer_2e8ac9c67452053164d1da296bfbc802'}\n\n```{.r .cell-code}\npivot_longer(\n  data = table4a,\n  cols = c(`1999`, `2000`),\n  names_to = \"year\",\n  values_to = \"cases\"\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  country     year   cases\n  <chr>       <chr>  <int>\n1 Afghanistan 1999     745\n2 Afghanistan 2000    2666\n3 Brazil      1999   37737\n4 Brazil      2000   80488\n5 China       1999  212258\n6 China       2000  213766\n```\n:::\n:::\n\n\n:::\n\n::::\n\n## Pivot wider\n\n:::: columns\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell layout-align=\"center\" hash='09-data-wrangling-iii_cache/revealjs/spread-rows_5b7013728f95e946f7ee7a2e60a5538c'}\n\n```{.r .cell-code}\ntable2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 12 × 4\n   country      year type            count\n   <chr>       <int> <chr>           <int>\n 1 Afghanistan  1999 cases             745\n 2 Afghanistan  1999 population   19987071\n 3 Afghanistan  2000 cases            2666\n 4 Afghanistan  2000 population   20595360\n 5 Brazil       1999 cases           37737\n 6 Brazil       1999 population  172006362\n 7 Brazil       2000 cases           80488\n 8 Brazil       2000 population  174504898\n 9 China        1999 cases          212258\n10 China        1999 population 1272915272\n11 China        2000 cases          213766\n12 China        2000 population 1280428583\n```\n:::\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell layout-align=\"center\" hash='09-data-wrangling-iii_cache/revealjs/pivot-wider_96fd926bb3b7c9020e614a2abf34df62'}\n\n```{.r .cell-code}\npivot_wider(\n  data = table2,\n  names_from = type,\n  values_from = count\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n  country      year  cases population\n  <chr>       <int>  <int>      <int>\n1 Afghanistan  1999    745   19987071\n2 Afghanistan  2000   2666   20595360\n3 Brazil       1999  37737  172006362\n4 Brazil       2000  80488  174504898\n5 China        1999 212258 1272915272\n6 China        2000 213766 1280428583\n```\n:::\n:::\n\n\n:::\n\n::::\n\n## Separating\n\n:::: columns\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell layout-align=\"center\" hash='09-data-wrangling-iii_cache/revealjs/merged-columns_70dfbf0644337577beb5d3c8c6b15a41'}\n\n```{.r .cell-code}\ntable3\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  country      year rate             \n* <chr>       <int> <chr>            \n1 Afghanistan  1999 745/19987071     \n2 Afghanistan  2000 2666/20595360    \n3 Brazil       1999 37737/172006362  \n4 Brazil       2000 80488/174504898  \n5 China        1999 212258/1272915272\n6 China        2000 213766/1280428583\n```\n:::\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell layout-align=\"center\" hash='09-data-wrangling-iii_cache/revealjs/separate_b8e4cf2b727445aa6200e04cb95cba7c'}\n\n```{.r .cell-code}\nseparate(\n  data = table3,\n  col = rate,\n  into = c(\n    \"cases\",\n    \"population\"\n  ),\n  convert = TRUE\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n  country      year  cases population\n  <chr>       <int>  <int>      <int>\n1 Afghanistan  1999    745   19987071\n2 Afghanistan  2000   2666   20595360\n3 Brazil       1999  37737  172006362\n4 Brazil       2000  80488  174504898\n5 China        1999 212258 1272915272\n6 China        2000 213766 1280428583\n```\n:::\n:::\n\n\n:::\n\n::::\n\n## Uniting\n\n:::: columns\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell layout-align=\"center\" hash='09-data-wrangling-iii_cache/revealjs/merged-rows_a6c4b1eafba0142361166138157cb747'}\n\n```{.r .cell-code}\ntable5\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n  country     century year  rate             \n* <chr>       <chr>   <chr> <chr>            \n1 Afghanistan 19      99    745/19987071     \n2 Afghanistan 20      00    2666/20595360    \n3 Brazil      19      99    37737/172006362  \n4 Brazil      20      00    80488/174504898  \n5 China       19      99    212258/1272915272\n6 China       20      00    213766/1280428583\n```\n:::\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell layout-align=\"center\" hash='09-data-wrangling-iii_cache/revealjs/unite_88c75e5c7044132beecf81f83ab08a83'}\n\n```{.r .cell-code}\nunite(\n  data = table5,\n  col = \"year\",\n  century, year\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  country     year  rate             \n  <chr>       <chr> <chr>            \n1 Afghanistan 19_99 745/19987071     \n2 Afghanistan 20_00 2666/20595360    \n3 Brazil      19_99 37737/172006362  \n4 Brazil      20_00 80488/174504898  \n5 China       19_99 212258/1272915272\n6 China       20_00 213766/1280428583\n```\n:::\n:::\n\n\n:::\n\n::::\n\n## Uniting\n\n:::: columns\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell layout-align=\"center\" hash='09-data-wrangling-iii_cache/revealjs/unnamed-chunk-16_62ededb8f244c23a13ba4640fcdc9fd1'}\n\n```{.r .cell-code}\ntable5\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n  country     century year  rate             \n* <chr>       <chr>   <chr> <chr>            \n1 Afghanistan 19      99    745/19987071     \n2 Afghanistan 20      00    2666/20595360    \n3 Brazil      19      99    37737/172006362  \n4 Brazil      20      00    80488/174504898  \n5 China       19      99    212258/1272915272\n6 China       20      00    213766/1280428583\n```\n:::\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell layout-align=\"center\" hash='09-data-wrangling-iii_cache/revealjs/unite-underscore_bc0179644371af6309b9be56c93f1d9b'}\n\n```{.r .cell-code}\nunite(\n  data = table5,\n  col = \"year\",\n  century, year,\n  # remove underscore\n  sep = \"\"\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  country     year  rate             \n  <chr>       <chr> <chr>            \n1 Afghanistan 1999  745/19987071     \n2 Afghanistan 2000  2666/20595360    \n3 Brazil      1999  37737/172006362  \n4 Brazil      2000  80488/174504898  \n5 China       1999  212258/1272915272\n6 China       2000  213766/1280428583\n```\n:::\n:::\n\n\n:::\n\n::::\n\n## Uniting\n\n:::: columns\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell layout-align=\"center\" hash='09-data-wrangling-iii_cache/revealjs/unnamed-chunk-18_7ec7e3624552edc6c1d4ed4403a29312'}\n\n```{.r .cell-code}\ntable5\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n  country     century year  rate             \n* <chr>       <chr>   <chr> <chr>            \n1 Afghanistan 19      99    745/19987071     \n2 Afghanistan 20      00    2666/20595360    \n3 Brazil      19      99    37737/172006362  \n4 Brazil      20      00    80488/174504898  \n5 China       19      99    212258/1272915272\n6 China       20      00    213766/1280428583\n```\n:::\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell layout-align=\"center\" hash='09-data-wrangling-iii_cache/revealjs/unite-parse_3a5c05e33c1520e9e8fc5040e790e349'}\n\n```{.r .cell-code}\nunite(\n  data = table5,\n  col = \"year\",\n  century, year,\n  # remove underscore\n  sep = \"\"\n) |>\n  # store as numeric\n  mutate(year = parse_number(year))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  country      year rate             \n  <chr>       <dbl> <chr>            \n1 Afghanistan  1999 745/19987071     \n2 Afghanistan  2000 2666/20595360    \n3 Brazil       1999 37737/172006362  \n4 Brazil       2000 80488/174504898  \n5 China        1999 212258/1272915272\n6 China        2000 213766/1280428583\n```\n:::\n:::\n\n\n:::\n\n::::\n\n# Pivoting Cornell degrees\n\n## Pivoting Cornell degrees\n\n\n::: {.cell layout-align=\"center\" hash='09-data-wrangling-iii_cache/revealjs/unnamed-chunk-20_b5468db845fff0162fcb8a6d686bd2b8'}\n\n```{.r .cell-code}\ncornell_deg <- read_csv(\"https://info3312.infosci.cornell.edu/slides/data/cornell-degrees.csv\")\n```\n:::\n\n\n\n::: {.cell layout-align=\"center\" hash='09-data-wrangling-iii_cache/revealjs/unnamed-chunk-22_905719a424f5ad5752b91e167aa9b9b6'}\n\n```{.r .cell-code}\ncornell_deg\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 21\n  field_…¹ `2001` `2002` `2003` `2004` `2005` `2006` `2007` `2008` `2009` `2010`\n  <chr>     <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>\n1 academi… 0.239  0.290  0.173  0.161   0.168 0.170  0.181  0.183  0.181  0.179 \n2 academi… 0.112  0.0979 0.110  0.198   0.157 0.168  0.151  0.136  0.148  0.129 \n3 academi… 0.0859 0.0745 0.0463 0.0327  0.032 0.0221 0.0263 0.0262 0.0264 0.0297\n4 academi… 0.071  0.0709 0.112  0.100   0.109 0.107  0.116  0.122  0.117  0.12  \n5 academi… 0      0      0.122  0.112   0.109 0.110  0.126  0.134  0.128  0.12  \n6 academi… 0.161  0.160  0.105  0.0973  0.113 0.099  0.102  0.0975 0.0983 0.0994\n# … with 10 more variables: `2011` <dbl>, `2012` <dbl>, `2013` <dbl>,\n#   `2014` <dbl>, `2015` <dbl>, `2016` <dbl>, `2017` <dbl>, `2018` <dbl>,\n#   `2019` <dbl>, `2020` <dbl>, and abbreviated variable name ¹​field_of_study\n```\n:::\n:::\n\n\n## Pivoting Cornell degrees\n\n::: task\nLet's recreate this visualization!\n:::\n\n\n::: {.cell layout-align=\"center\" hash='09-data-wrangling-iii_cache/revealjs/cornell-degrees_ba94c8d5cf50f8c6d92fa8d4adabd8fd'}\n::: {.cell-output-display}\n![](09-data-wrangling-iii_files/figure-revealjs/cornell-degrees-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## Livecoding\n\nReveal below for code developed during live coding session.\n\n\n::: {.cell layout-align=\"center\" hash='09-data-wrangling-iii_cache/revealjs/unnamed-chunk-24_13e72441bf95ea4725f3390b932c3dc5'}\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}