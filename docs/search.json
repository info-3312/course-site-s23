[
  {
    "objectID": "labs/lab-00.html",
    "href": "labs/lab-00.html",
    "title": "Lab 00 - Hello R!",
    "section": "",
    "text": "This lab will introduce you to the course computing workflow. The main goal is to reinforce our demo of R and RStudio, which we will be using throughout the course both to learn the statistical concepts discussed in the course and to analyze real data and come to informed conclusions.\nAn additional goal is to reinforce Git and GitHub, the collaboration and version control system that we will be using throughout the course.\nAs the labs progress, you are encouraged to explore beyond what the labs dictate; a willingness to experiment will make you a much better programmer. Before we get to that stage, however, you need to build some basic fluency in R. Today we begin with the fundamental building blocks of R and RStudio: the interface, reading in data, and basic commands.\nTo make versioning simpler, this and the next lab are solo labs. In the future, you’ll learn about collaborating on GitHub and producing a single lab report for your lab team, but for now, concentrate on getting the basics down.\nBy the end of the lab, you will…"
  },
  {
    "objectID": "labs/lab-00.html#log-in-to-rstudio",
    "href": "labs/lab-00.html#log-in-to-rstudio",
    "title": "Lab 00 - Hello R!",
    "section": "Log in to RStudio",
    "text": "Log in to RStudio\n\nGo to https://rstudio-workbench.infosci.cornell.edu and log in with your Cornell NetID and Password.\nClick the “New Session” button on the top of the page. Leave all the settings on their default state and click “Start Session”. You should now see an RStudio session.\n\n\n\n\n\n\n\nWarning\n\n\n\nIf this is your first time accessing RStudio Workbench for the course, it will take a couple of minutes to prepare your session. Please be patient. When you start a session in the future, your container will already be prepared and it should start within 15 seconds."
  },
  {
    "objectID": "labs/lab-00.html#set-up-your-ssh-key",
    "href": "labs/lab-00.html#set-up-your-ssh-key",
    "title": "Lab 00 - Hello R!",
    "section": "Set up your SSH key",
    "text": "Set up your SSH key\nYou will authenticate GitHub using SSH. Below are an outline of the authentication steps; you are encouraged to follow along as your TA demonstrates the steps.\n\n\n\n\n\n\nNote\n\n\n\nYou only need to do this authentication process one time on a single system.\n\n\n\nType credentials::ssh_keygen() into your console.\nR will ask “No SSH key found. Generate one now?” You should click 1 for yes.\nYou will generate a key. It will begin with “ssh-rsa….” and look something like this:\n$key\n[1] \"/home/bcs88/.ssh/id_rsa\"\n\n$pubkey\n[1] \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDJYmJeave083exQwYcIqZJk/Y1mgPxdcTYCTWLL+6mlhN9MM3enjDqb2eZvVJ0JK29NYL1++DTqY/saP08IlswNIMntwaWFDNx42yLsuFrWiPqzm9hWWnRcor/d+4zTrcSIEvfAAnLsYkagNqurrCf2taO62YRepTgxErLvLOG10qn4LKhNfT+PTqdPq2Mr88jXQYYrRxGnOV6oVYf6PurKkiooTsKYxVtJWai8Ek9fhK2y5vaQd5yP0H/3Hbw8Mn+rB+O8Yj6/oQKGBCgxkDB4Aw7T91DkIXlHppneO683Y54WvUftJYvSVsnyt/XuNjvXNAir0+kHETLM32uzH6L\"\nCopy the entire string of characters (not including the quotation marks) and paste them into the settings page on GitHub. Give the key an informative title such as “INFO 3312 RStudio Workbench”. Click “Add SSH key.”"
  },
  {
    "objectID": "labs/lab-00.html#configure-git",
    "href": "labs/lab-00.html#configure-git",
    "title": "Lab 00 - Hello R!",
    "section": "Configure Git",
    "text": "Configure Git\nThere is one more thing we need to do before getting started on the assignment. Specifically, we need to configure your git so that RStudio can communicate with GitHub. This requires two pieces of information: your name and email address.\nTo do so, you will use the use_git_config() function from the usethis package. Type the following lines of code in the console in RStudio filling in your name and the email address associated with your GitHub account.\n\nusethis::use_git_config(\n  user.name = \"Your name\", \n  user.email = \"Email associated with your GitHub account\"\n  )\n\nFor example, mine would be\n\nusethis::use_git_config(\n  user.name = \"Benjamin Soltoff\", \n  user.email = \"soltoffbc@cornell.edu\"\n  )\n\n\n\n\n\n\n\nNote\n\n\n\nuser.email does not have to match your Cornell email address, though it would be conventional.\n\n\nYou are now ready interact with GitHub via RStudio!"
  },
  {
    "objectID": "labs/lab-00.html#clone-the-repo-start-new-rstudio-project",
    "href": "labs/lab-00.html#clone-the-repo-start-new-rstudio-project",
    "title": "Lab 00 - Hello R!",
    "section": "Clone the repo & start new RStudio project",
    "text": "Clone the repo & start new RStudio project\n\nGo to the course organization at https://github.coecis.cornell.edu/info3312-s23 organization on GitHub. Click on the repo with the prefix lab-00. It contains the starter documents you need to complete the lab.\nClick on the green CODE button, select Use SSH (this might already be selected by default, and if it is, you’ll see the text Clone with SSH). Click on the clipboard icon to copy the repo URL.\nIn RStudio, go to File ➛ New Project ➛ Version Control ➛ Git.\nCopy and paste the URL of your assignment repo into the dialog box Repository URL. Again, please make sure to have SSH highlighted under Clone when you copy the address.\nClick Create Project, and the files from your GitHub repo will be displayed in the Files pane in RStudio.\nClick lab-0-datasaurus.qmd to open the template Quarto file. This is where you will write up your code and narrative for the lab."
  },
  {
    "objectID": "labs/lab-00.html#r-and-r-studio",
    "href": "labs/lab-00.html#r-and-r-studio",
    "title": "Lab 00 - Hello R!",
    "section": "R and R Studio",
    "text": "R and R Studio\nBelow are the components of the RStudio IDE.\n\nBelow are the components of a Quarto (.qmd) file."
  },
  {
    "objectID": "labs/lab-00.html#yaml",
    "href": "labs/lab-00.html#yaml",
    "title": "Lab 00 - Hello R!",
    "section": "YAML",
    "text": "YAML\nThe top portion of your R Markdown file (between the three dashed lines) is called YAML. It stands for “YAML Ain’t Markup Language”. It is a human friendly data serialization standard for all programming languages. All you need to know is that this area is called the YAML (we will refer to it as such) and that it contains meta information about your document.\n\n\n\n\n\n\nImportant\n\n\n\nOpen the Quarto (.qmd) file in your project, change the author name to your name, and render the document. Examine the rendered document."
  },
  {
    "objectID": "labs/lab-00.html#committing-changes",
    "href": "labs/lab-00.html#committing-changes",
    "title": "Lab 00 - Hello R!",
    "section": "Committing changes",
    "text": "Committing changes\nNow, go to the Git pane in your RStudio instance. This will be in the top right hand corner in a separate tab.\nIf you have made changes to your Quarto (.qmd) file, you should see it listed here. Click on it to select it in this list and then click on Diff. This shows you the difference between the last committed state of the document and its current state including changes. You should see deletions in red and additions in green.\nIf you’re happy with these changes, we’ll prepare the changes to be pushed to your remote repository. First, stage your changes by checking the appropriate box on the files you want to prepare. Next, write a meaningful commit message (for instance, “updated author name”) in the Commit message box. Finally, click Commit. Note that every commit needs to have a commit message associated with it.\nYou don’t have to commit after every change, as this would get quite tedious. You should commit states that are meaningful to you for inspection, comparison, or restoration.\nIn the first few assignments we will tell you exactly when to commit and in some cases, what commit message to use. As the semester progresses we will let you make these decisions.\nNow let’s make sure all the changes went to GitHub. Go to your GitHub repo and refresh the page. You should see your commit message next to the updated files. If you see this, all your changes are on GitHub and you’re good to go!"
  },
  {
    "objectID": "labs/lab-00.html#push-changes",
    "href": "labs/lab-00.html#push-changes",
    "title": "Lab 00 - Hello R!",
    "section": "Push changes",
    "text": "Push changes\nNow that you have made an update and committed this change, it’s time to push these changes to your repo on GitHub.\nIn order to push your changes to GitHub, you must have staged your commit to be pushed. Click on Push."
  },
  {
    "objectID": "labs/lab-00.html#data-visualization-and-summary",
    "href": "labs/lab-00.html#data-visualization-and-summary",
    "title": "Lab 00 - Hello R!",
    "section": "Data visualization and summary",
    "text": "Data visualization and summary\n\nPlot x vs. y for the dino dataset. Then, calculate the correlation coefficient between x and y for this dataset.\n\nBelow is the code you will need to complete this exercise. Basically, the answer is already given, but you need to include relevant bits in your document and successfully render it and view the results.\nStart with the datasaurus_dozen and pipe it into the filter function to filter for observations where dataset == \"dino\". Store the resulting filtered data frame as a new data frame called dino_data.\n\ndino_data <- datasaurus_dozen |>\n  filter(dataset == \"dino\")\n\nThere is a lot going on here, so let’s slow down and unpack it a bit.\nFirst, the pipe operator: |>, takes what comes before it and sends it as the first argument to what comes after it. So here, we’re saying filter the datasaurus_dozen data frame for observations where dataset == \"dino\".\nSecond, the assignment operator: <-, assigns the name dino_data to the filtered data frame.\nNext, we need to visualize these data. We will use the ggplot function for this. Its first argument is the data you’re visualizing. Next we define the aesthetic mappings. In other words, the columns of the data that get mapped to certain aesthetic features of the plot, e.g. the x axis will represent the variable called x and the y axis will represent the variable called y. Then, we add another layer to this plot where we define which geometric shapes we want to use to represent each observation in the data. In this case we want these to be points, hence geom_point.\n\nggplot(data = dino_data, mapping = aes(x = x, y = y)) +\n  geom_point()\n\nFor the second part of this exercise, we need to calculate a summary statistic: the correlation coefficient. Correlation coefficient, often referred to as \\(r\\) in statistics, measures the linear association between two variables. You will see that some of the pairs of variables we plot do not have a linear relationship between them. This is exactly why we want to visualize first: visualize to assess the form of the relationship, and calculate \\(r\\) only if relevant. In this case, calculating a correlation coefficient really doesn’t make sense since the relationship between x and y is definitely not linear (it’s dinosaurial)!\nFor illustrative purposes only, let’s calculate the correlation coefficient between x and y.\n\n\n\n\n\n\nNote\n\n\n\nStart with `dino_data` and calculate a summary statistic that we will call `r` as the `cor`relation between `x` and `y`.\n\n\n\ndino_data |>\n  summarize(r = cor(x, y))\n\n\nThis is a good place to pause, render, and commit changes with the commit message “Added answer for Ex 2.”\nThen, push these changes when you’re done.\n\n\nPlot x vs. y for the circle dataset. You can (and should) reuse code we introduced above, just replace the dataset name with the desired dataset. Then, calculate the correlation coefficient between x and y for this dataset. How does this value compare to the r of dino?\n\n\nThis is another good place to pause, render, and commit changes with the commit message “Added answer for Ex 3.”\nThen, push these changes when you’re done.\n\n\nPlot x vs. y for the star dataset. You can (and should) reuse code we introduced above, just replace the dataset name with the desired dataset. Then, calculate the correlation coefficient between x and y for this dataset. How does this value compare to the r of dino?\n\n\nYou should pause again, render, commit changes with the commit message “Added answer for Ex 4”.\nThen, push.\n\n\nFinally, let’s plot all datasets at once. In order to do this we will make use of faceting, given by the code below:\n\n\n\n\n\n\n\nNote\n\n\n\nFacet by the dataset variable, placing the plots in a 3 column grid, and don’t add a legend.\n\n\n\nggplot(datasaurus_dozen, aes(x = x, y = y, color = dataset))+\n  geom_point()+\n  facet_wrap(facets = vars(dataset), ncol = 3) +\n  theme(legend.position = \"none\")\n\nAnd we can use the group_by function to generate all the summary correlation coefficients. We’ll go through these functions in a couple of weeks when we learn about data wrangling.\n\ndatasaurus_dozen |>\n  group_by(dataset) |>\n  summarize(r = cor(x, y)) \n\nInclude the faceted plot and the summary of the correlation coefficients in your lab write-up by including relevant code in R chunks (and give them appropriate labels). In the narrative below the code chunks, briefly comment on what you notice about the plots and the correlations between x and y values within each of them (one or two sentences is fine!).\n\nYou should pause again, render, commit changes with the commit message “Added answer for Ex 5”.\nThen, push.\n\nYou’re done with the data analysis exercises, but we’d like to do one more thing to customize the look of the report."
  },
  {
    "objectID": "labs/lab-00.html#resize-your-figures",
    "href": "labs/lab-00.html#resize-your-figures",
    "title": "Lab 00 - Hello R!",
    "section": "Resize your figures",
    "text": "Resize your figures\nWe can customize the output from a particular R chunk by including options in the header that will override any global settings.\n\nIn the R chunks you wrote for Exercises 2-5, customize the settings by modifying the options in the R chunks used to create those figures.\n\nFor Exercises 2, 3, and 4, we want square figures. We can use fig-height and fig-width in the options to adjust the height and width of figures. Modify the chunks in Exercises 2-4 to be as follows:\n\n```{r}\n#| label: ex2-chunk-label\n#| fig-height: 5\n#| fig-width: 5\n\n# Your code that created the figure\n```\n\n\n\n\n\n\n\nNote\n\n\n\nCode chunk labels need to be unique or you will get an error when you render the document. Make sure to fix the label in each chunk to be unique to the specific exercise. Even better, choose something substantive yet simple that describes the chunk rather than ex2-chunk-label.\n\n\nFor Exercise 5, modify your figure to have fig-height of 10 and fig-width of 6.\nNow, save and render.\nOnce you’ve created this PDF file, you’re done!\n\nCommit all remaining changes with the commit message “Done with Lab 0!”.\nThen push."
  },
  {
    "objectID": "course-links.html",
    "href": "course-links.html",
    "title": "Useful links",
    "section": "",
    "text": "RStudio Workbench\nCourse GitHub organization\n🔗 on RStudio Workbench\n🔗 on GitHub\n\n\n\n\n\n\n\n\nGradescope\n🔗 on Gradescope |\n\n\n\nGradebook\n🔗 Canvas\n\n\n\nOffice hours\n🔗 on Google Calendar\n\n\n\nTextbooks\n🔗 ggplot2: Elegant Graphics for Data Analysis\n🔗 Fundamentals of Data Visualization\n\n\n\nPackage documentation\n🔗 ggplot2: ggplot2.tidyverse.org\n🔗 dplyr: dplyr.tidyverse.org\n🔗 tidyr: tidyr.tidyverse.org\n🔗 forcats: forcats.tidyverse.org\n🔗 stringr: stringr.tidyverse.org\n🔗 lubridate: lubridate.tidyverse.org\n🔗 readr: readr.tidyverse.org\n🔗 readxl: readxl.tidyverse.org"
  },
  {
    "objectID": "hw/hw-01.html",
    "href": "hw/hw-01.html",
    "title": "Homework 1",
    "section": "",
    "text": "Important\n\n\n\nThis homework is due Wednesday, February 8 at 11:59pm ET."
  },
  {
    "objectID": "hw/hw-01.html#packages",
    "href": "hw/hw-01.html#packages",
    "title": "Homework 1",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(dsbox)\nlibrary(openintro)"
  },
  {
    "objectID": "hw/hw-01.html#guidelines-tips",
    "href": "hw/hw-01.html#guidelines-tips",
    "title": "Homework 1",
    "section": "Guidelines + tips",
    "text": "Guidelines + tips\nAs we’ve discussed in lecture, your plots should include an informative title, axes should be labeled, and careful consideration should be given to aesthetic choices.\nRemember that continuing to develop a sound workflow for reproducible data analysis is important as you complete this homework and other assignments in this course. There will be periodic reminders in this assignment to remind you to render, commit, and push your changes to GitHub. You should have at least 3 commits with meaningful commit messages by the end of the assignment.\n\n\n\n\n\n\nNote\n\n\n\nNote: Do not let R output answer the question for you unless the question specifically asks for just a plot. For example, if the question asks for the number of columns in the data set, please type out the number of columns. You are subject to lose points if you do not."
  },
  {
    "objectID": "hw/hw-01.html#workflow-formatting",
    "href": "hw/hw-01.html#workflow-formatting",
    "title": "Homework 1",
    "section": "Workflow + formatting",
    "text": "Workflow + formatting\nMake sure to\n\nUpdate author name on your document.\nLabel all code chunks informatively and concisely.\nFollow the Tidyverse code style guidelines.\nMake at least 3 commits.\nResize figures where needed, avoid tiny or huge plots.\nTurn in an organized, well formatted document."
  },
  {
    "objectID": "hw/hw-01.html#exercise-1",
    "href": "hw/hw-01.html#exercise-1",
    "title": "Homework 1",
    "section": "Exercise 1",
    "text": "Exercise 1\nReverse-engineering the grammar of graphics. COVID-19 has been a thing for the past 2+ years. Data visualizations have proven extremely valuable for communicating trends regarding the pandemic to the public. For the main plot in this article, write down the components of its grammar of graphic. Don’t worry about identifying the correct functions in ggplot2 used to generate the graph. Instead, focus on recording the key elements of a plot so you could communicate it to someone else.\n\nNow is a good time to render, commit, and push. Make sure that you commit and push all changed documents and your Git pane is completely empty before proceeding."
  },
  {
    "objectID": "hw/hw-01.html#exercise-2",
    "href": "hw/hw-01.html#exercise-2",
    "title": "Homework 1",
    "section": "Exercise 2",
    "text": "Exercise 2\nRoad traffic accidents in Edinburgh. Next we’ll look at traffic accidents in Edinburgh. The data are made available online by the UK Government. It covers all recorded accidents in Edinburgh in 2018 and some of the variables were modified for the purposes of this assignment. The data can be found in the dsbox package, and it’s called accidents. You can find out more about the dataset by inspecting its documentation with ?accidents and you can also find this information here.\nRecreate the following plot, and interpret in context of the data.\n\n\n\n\n\n\nNow is a good time to render, commit, and push. Make sure that you commit and push all changed documents and your Git pane is completely empty before proceeding."
  },
  {
    "objectID": "hw/hw-01.html#exercise-3",
    "href": "hw/hw-01.html#exercise-3",
    "title": "Homework 1",
    "section": "Exercise 3",
    "text": "Exercise 3\nNYC marathon winners. The New York City Marathon is an annual marathon that courses through the five boroughs of New York City. Marathon times of runners in the Men and Women divisions of the New York City Marathon between 1970 and 2020 can be found in the nyc_marathon dataset in the openintro package. You can find out more about the dataset by inspecting its documentation with ?nyc_marathon and you can also find this information here.\n\nCreate a histogram and a box plot of the distribution of marathon times of all runners in the dataset. What features of the distribution are apparent in the histogram and not the box plot? What features are apparent in the box plot but not in the histogram?\nCreate a side-by-side box plots of marathon times for men and women. Use different colors for the each of the box plots – do not use the default colors, but instead manually define them (you can choose any two colors you want). Based on the plots you made, compare the distribution of marathon times for men and women.\nWhat information in the above plot is redundant? Redo the plot avoiding this redundancy. How does this update change the data-to-ink ratio?\nVisualize the marathon times of men and women over the years. As is usual with time series plot, year should go on the x-axis. Use different colors and patterns to represent the times for men and women. Make sure your colors match those in the previous part. Once you have your plot, describe what is visible in this plot but not in the others.\n\n\nNow is a good time to render, commit, and push. Make sure that you commit and push all changed documents and your Git pane is completely empty before proceeding."
  },
  {
    "objectID": "hw/hw-01.html#exercise-4",
    "href": "hw/hw-01.html#exercise-4",
    "title": "Homework 1",
    "section": "Exercise 4",
    "text": "Exercise 4\nUS counties. The following questions use the county dataset in the openintro package. You can find out more about the dataset by inspecting its documentation with ?county and you can also find this information here.\n\nWhat does the following code do? Does it work? Does it make sense? Why/why not?\nggplot(county) +\n  geom_point(aes(x = median_edu, y = median_hh_income)) +\n  geom_boxplot(aes(x = smoking_ban, y = pop2017))\nRecreate the R code necessary to generate the following graphs. You will need to create 8 separate plots for this exercise. Note that wherever a categorical variable is used in the plot, it’s metro.\n\n\n\n\n\n\n\nNow is a good time to render, commit, and push. Make sure that you commit and push all changed documents and your Git pane is completely empty before proceeding."
  },
  {
    "objectID": "hw/hw-01.html#exercise-5",
    "href": "hw/hw-01.html#exercise-5",
    "title": "Homework 1",
    "section": "Exercise 5",
    "text": "Exercise 5\nNapoleon’s march. The instructions for this exercise are simple: recreate the Napoleon’s march plot by Charles John Minard in ggplot2. The data is provided as a list, saved as napoleon.rds.\nRead it in using read_rds(). This object has three elements: cities, temperatures, and troops. Each of these is a data frame, and the three of them combined contain all of the data you need to recreate the visualization. Your goal isn’t to create an exact replica of the original plot, but to get as close to it as you can using code you understand and can describe articulately in your response.\nI’ll be the first to say that if you Google “Napoleon’s march in ggplot2”, you’ll find a bunch of blog posts, tutorials, etc. that walk you through how to recreate this visualization with ggplot2. So you might be thinking, “why am I being asked to copy something off the internet for my homework?” Well, this is an exercise in (1) working with web resources and citing them properly, (2) understanding someone else’s ggplot2 code and reproducing their work, (3) describing what that code does in your own words, and finally (4) putting some final touches to make the final product your own. Some more guidelines below:\n\nYou should make sure your response properly cites all of the resources you use. I’m defining “use” to include “browse, read, get inspired by, or directly borrow snippets of code from”. You don’t need to worry about formal citations, it’s okay to make a list with links to your resources and provide a brief summary of how you used each one.\nFor this exercise, you’re asked to describe what your code does (instead of interpreting the visualization, since we already did that in class). If you write the code, it should be straightforward for you to describe it. If you borrow any code from outside resources, you need to understand what that code does, and describe it, in your own words. (This is important, you’re allowed to use found code, but you are not allowed to copy someone’s blog post or tutorial as your description of their code.)\nFinally, you should personalize the visualization with your own touch. You can do this in a myriad of ways, e.g., change colors, annotations, labels, etc. This change should be made to make the plot more like the original in some way. You need to explicitly call out what change you made and why you made it.\n\n\n Render, commit, and push one last time.\nMake sure that you commit and push all changed documents and your Git pane is completely empty before proceding."
  },
  {
    "objectID": "hw/hw-01.html#submission",
    "href": "hw/hw-01.html#submission",
    "title": "Homework 1",
    "section": "Submission",
    "text": "Submission\n\nGo to http://www.gradescope.com and click Log in in the top right corner.\nClick School Credentials \\(\\rightarrow\\) Cornell University NetID and log in using your NetID credentials.\nClick on your INFO 3312 course.\nClick on the assignment, and you’ll be prompted to submit it.\nMark all the pages associated with exercise. All the pages of your homework should be associated with at least one question (i.e., should be “checked”)."
  },
  {
    "objectID": "hw/hw-01.html#grading",
    "href": "hw/hw-01.html#grading",
    "title": "Homework 1",
    "section": "Grading",
    "text": "Grading\n\nExercise 1: 10 points\nExercise 2: 10 points\nExercise 3: 10 points\nExercise 4: 10 points\nExercise 5: 10 points\nTotal: 50 points"
  },
  {
    "objectID": "prepare/02-09.html",
    "href": "prepare/02-09.html",
    "title": "Prepare",
    "section": "",
    "text": "📖 Read:\n\nWickham et. al., chapter 16 + chapter 17"
  },
  {
    "objectID": "prepare/01-31.html",
    "href": "prepare/01-31.html",
    "title": "Prepare",
    "section": "",
    "text": "📖 Read:\n\nHealy, chapter 1\n\nOptional 📖 Read:\n\nStudy: Charts change hearts and minds better than words do\nWilke chapter 2"
  },
  {
    "objectID": "prepare/01-24.html",
    "href": "prepare/01-24.html",
    "title": "Prepare",
    "section": "",
    "text": "Log in to Cornell’s GitHub at https://github.coecis.cornell.edu/."
  },
  {
    "objectID": "prepare/01-26.html",
    "href": "prepare/01-26.html",
    "title": "Prepare",
    "section": "",
    "text": "📖 Read:\n\nChapter 13 in ggplot2: Elegant Graphics for Data Analysis\n\n⌨️ Do:\n\nLog in to Cornell’s GitHub at https://github.coecis.cornell.edu/. You already have an accounted created based on your Cornell NetID.\nAccess RStudio Workbench using your Cornell NetID and password.\nClick the “New Session” button on the top of the page. Leave all the settings on their default state and click “Start Session”. If this is your first time accessing RStudio Workbench for the course, it will take a couple of minutes to prepare your session. Please be patient. When you start a session in the future, your container will already be prepared and it should start within 15 seconds."
  },
  {
    "objectID": "prepare/01-27.html",
    "href": "prepare/01-27.html",
    "title": "Prepare",
    "section": "",
    "text": "If you haven’t yet done so:\n\nRead the syllabus!\nLog in to Cornell’s GitHub at https://github.coecis.cornell.edu/. You already have an account created based on your Cornell NetID.\nAccess RStudio Workbench using your Cornell NetID and password. You will need access to complete the first lab assignment.\nClick the “New Session” button on the top of the page. Leave all the settings on their default state and click “Start Session”. If this is your first time accessing RStudio Workbench for the course, it will take a couple of minutes to prepare your session. Please be patient. When you start a session in the future, your container will already be prepared and it should start within 15 seconds."
  },
  {
    "objectID": "prepare/02-07.html",
    "href": "prepare/02-07.html",
    "title": "Prepare",
    "section": "",
    "text": "📖 Read:\n\nWickham et. al., chapter 15"
  },
  {
    "objectID": "prepare/02-02.html",
    "href": "prepare/02-02.html",
    "title": "Prepare",
    "section": "",
    "text": "📖 Read:\n\nWickham et. al., chapter 14"
  },
  {
    "objectID": "project-tips-resources.html",
    "href": "project-tips-resources.html",
    "title": "Project tips + resources",
    "section": "",
    "text": "The projects are open ended. For instance, in creating a compelling visualization(s) of your data in R, there is no limit on what tools or packages you may use. You do not need to visualize all of the data at once. A single high quality visualization will receive a much higher grade than a large number of poor quality visualizations.\nPay attention to details in your write-up and presentation. Neatness, coherency, and clarity will count."
  },
  {
    "objectID": "project-tips-resources.html#suppress-code-and-warnings",
    "href": "project-tips-resources.html#suppress-code-and-warnings",
    "title": "Project tips + resources",
    "section": "Suppress code and warnings",
    "text": "Suppress code and warnings\n\nInclude the following in the YAML of your report.qmd to suppress all code, warnings, and other messages.\n\nexecute:\n  echo: false\n  warning: false"
  },
  {
    "objectID": "project-tips-resources.html#headers",
    "href": "project-tips-resources.html#headers",
    "title": "Project tips + resources",
    "section": "Headers",
    "text": "Headers\nUse headers to clearly label each section. Make sure there is a space between the previous line and the header. Use appropriate header levels."
  },
  {
    "objectID": "project-tips-resources.html#references",
    "href": "project-tips-resources.html#references",
    "title": "Project tips + resources",
    "section": "References",
    "text": "References\nInclude all references in a section called “References” at the end of the report. This course does not have specific requirements for formatting citations and references. Optional: Use Quarto’s citation support for generating your reference. See Citations & Footnotes on the Quarto documentation for more on that."
  },
  {
    "objectID": "project-tips-resources.html#appendix",
    "href": "project-tips-resources.html#appendix",
    "title": "Project tips + resources",
    "section": "Appendix",
    "text": "Appendix\nIf you have additional work that does not fit or does not belong in the body of the report, you may put it at the end of the document in section called “Appendix”. The items in the appendix should be properly labeled. The appendix should only be for additional material. The reader should be able to fully understand your report without viewing content in the appendix. We will not grade your appendix."
  },
  {
    "objectID": "project-tips-resources.html#resize-figures",
    "href": "project-tips-resources.html#resize-figures",
    "title": "Project tips + resources",
    "section": "Resize figures",
    "text": "Resize figures\nResize plots and figures, so you have more space for the narrative. Resize individual figures: Set fig-width and fig-height in chunk options, e.g.,\n#| echo: fenced\n#| label: plot1\n#| fig-height: 3\n#| fig-width: 5\nreplacing plot1 with a meaningful label and the height and width with values appropriate for your write up.\nResize all figures: Include the fig-height and fig-width options in the YAML header as shown below:\nexecute:\n  fig-height: 3\n  fig-width: 5\nReplace the height and width values with values appropriate for your write up."
  },
  {
    "objectID": "project-tips-resources.html#arranging-plots",
    "href": "project-tips-resources.html#arranging-plots",
    "title": "Project tips + resources",
    "section": "Arranging plots",
    "text": "Arranging plots\nArrange plots in a grid, instead of one after the other. This is especially useful when displaying plots for exploratory data analysis and to check assumptions.\nIf you’re using ggplot2 functions, the patchwork package makes it easy to arrange plots in a grid."
  },
  {
    "objectID": "computing-access.html",
    "href": "computing-access.html",
    "title": "Computing access",
    "section": "",
    "text": "To access computing resources for INFO 3312/5312, go to the RStudio Workbench website and login using your Cornell NetID and password.\nClick the “New Session” button on the top of the page. Leave all the settings on their default state and click “Start Session”. If this is your first time accessing RStudio Workbench for the course, it will take a couple of minutes to prepare your session. Please be patient. When you start a session in the future, your container will already be prepared and it should start within 15 seconds."
  },
  {
    "objectID": "project-2.html",
    "href": "project-2.html",
    "title": "Project 2",
    "section": "",
    "text": "Your task for this project is to create something related to data visualization.\nThis is intentionally vague – part of the challenge is to design a project that showcases best your interests and strengths.\nOne requirement is that your project should feature some element that you had to learn on your own. This could be a package you use that we didn’t teach in class (e.g., a package for building 3D visualizations) or a workflow (e.g., making a package) or anything else.\nIf you’re not sure if your “new” thing counts, just ask!"
  },
  {
    "objectID": "project-2.html#ideas",
    "href": "project-2.html#ideas",
    "title": "Project 2",
    "section": "Ideas",
    "text": "Ideas\nYour first task is to come up with a goal for your project. Here are a few ideas to help you get started thinking:\n\nBuild a Shiny app that that has an Instagram-like user interface for applying filters, except not filters but themes for ggplots.\nCreate an R package that provides functionality for a set of ggplot2 themes and/or color palettes.1\nBuild a generative art system.\nDo a deep dive into accessibility for data visualization and build a lesson plan for creating accessible visualizations with ggplot2, Quarto, and generally within the R ecosystem.\nCreate an interactive and/or animated spatio-temporal visualization on a topic of interest to you, e.g., redistricting, COVID-19, voter suppression, etc.\nRecreate art pieces with ggplot2.\nMake a data visualization telling a story and convert it to an illustration, presenting both the computational and artistic piece side by side.\nBuild a dashboard.\n\nAnd, of course, your project can be about visualizing a dataset of interest to you (similar to your first project). The only rule about this dataset is that it can’t be from TidyTuesday. Beyond that, it should be something truly of interest to your team, and a dataset that allows for a deep exploration.\nMost importantly, be prepared to brainstorm a bunch of ideas and discard them until you settle on a topic that everyone in the team is happy with and feels like a good choice for showcasing what you’ve learned in the class and how you can use that to learn something new and implement for your project."
  },
  {
    "objectID": "project-2.html#workflow",
    "href": "project-2.html#workflow",
    "title": "Project 2",
    "section": "Workflow",
    "text": "Workflow\n\nWeek 1 of project (week of TODO): Pick a focus for your project.\nWeek 2 of project (week of TODO): Work on developing your project proposal and setting up the structure for your repository.\nWeek 3 of project (week of TODO): Finalize your project proposal.\nWeek 4 of project (week of TODO): Conduct peer review on project proposals, and optionally, submit in an updated version of your proposal.\nWeek 5 of project (week of TODO): Continue working on your project.\nWeek 6 of project (week of TODO): Continue working on your project.\nWeek 7 of project (week of TODO): Conduct another round of peer review."
  },
  {
    "objectID": "project-2.html#due-dates",
    "href": "project-2.html#due-dates",
    "title": "Project 2",
    "section": "Due dates",
    "text": "Due dates\n\nProposals for peer review: due TODO at 11:59pm.\nRevised proposals for instructor review: due TODO at 11:59pm.\nProject drafts for peer review: due TODO at 11:59pm.\nWrite-up and presentation: due TBD."
  },
  {
    "objectID": "project-2.html#deliverables",
    "href": "project-2.html#deliverables",
    "title": "Project 2",
    "section": "Deliverables",
    "text": "Deliverables\n\nProposal\nYour proposal should include:\n\nA one sentence description of your high-level goal (such as the ones listed under Ideas above.\nA one to two paragraph description of your goals, including your motivation. Depending on the focus of your project, the following might go in here.\n\nIf using particular dataset(s), a brief description of each dataset including the reason why you chose the particular dataset, its dataset, its dimensions and any other relevant metadata. (Make sure to load the data and use inline code for some of this information.)\nIf answering a particular research question, the question itself and the reason why you chose this question.\n\nA weekly “plan of attack” outlining your steps to complete your project and including the team member(s) assigned to that task.\nThe final organization of your project repository. This means describing the project organization in your proposal as well as implementing that organization in your repo. Create any folders needed and place a README.md in each folder explaining what goes in there.\n\n\n\nPeer review\n\nReviewer tasks\nEach team will review the proposals of two other teams twice during the project. The peer reviews will be completed on TODO and TODO. On those days teams will have access to the project repos of the two teams whose work they’re reviewing.\nThe peer review assignments are as follows:\nTODO\nTeams will develop the review together, with discussion among all team members, but only one team member will submit it as an issue on the project repo. To do so, go to the Issues tab, click on the green New issue button on the top right, and then click on the green Get started button for the issue template titled Peer review.\nThis will start a new issue with a peer review form that you can fill out. Make sure to update the introductory paragraph with your team name and the names of the team members participating in the review. Then, answer each of the questions in the spaces provided underneath them. You’re expected to be thorough in your review, but this doesn’t necessarily require lengthy responses.\nRemember, your goal is to help the team whose project you’re reviewing. The team will not lose points because of issues you point out, as long as they address them before I review their work. You should be critical, but respectful in your review. Also remember that you will be evaluated on the quality of your review. So that’s an additional incentive to do a good job.\n\n\nReviewee tasks\nOnce you receive feedback from your peers, you should address them. You should do this by directly updating your proposal or making any other updates to your repo as needed. You can do these updates all in one commit or you can spread it across multiple commits.\nRegardless, in the last commit that addresses the peer review comments, you should use a keyword in your commit message that will close the peer review issues. These words are close, closes, closed, fix, fixes, fixed, resolve, resolves, and resolved and they need to be followed by the issue number (which you can find next to the issue title). So, your commit message can say something like “Finished updates based on peer review, fixes #1”.\n\n\n\nWrite-up\nYour have a lot more freedom in how you structure your write-up for this project compared to Project 1. This also comes with responsibility. You should make sure you have a clear introduction and a clear conclusion. You should also have other interim section headings that help the reader. Your write-up should be somewhere between 1000 and 2000 words. There is no expectation that you get close to the upper limit, anywhere in that range is fine as long as you have clearly explained yourself. The limits are provided to help you, not to set stressful expectations.\n\n\nPresentation\nYour presentation should generally follow the same structure as your write-up. Each team will have 5 minutes for their presentation, and each team member must speak (roughly equally) during this time.\nYou should create your presentation in a reproducible way, e.g., using Quarto. However you don’t have to use a package that is designed specifically for slides. If you prefer to build a dashboard or a Shiny app or a website, that’s fine too. The only rule is that it’s built reproducibly in R.\nYour evaluation will be based on your content, professionalism (including sticking to time), and your performance during the Q&A (question and answer). We don’t care how many slides you use to do this.\n\n\nWebsite\nEach of your projects will have a website. You can use the same workflow as for your first project or create something different. For example, if your project is building a dashboard, you might consider making your write-up a tab on that dashboard. Or if it’s building a package, you might consider making your website using the pkgdown package. Feel free to google your way around it or ask on the discussion forum or in office hours!"
  },
  {
    "objectID": "project-2.html#repo-organization",
    "href": "project-2.html#repo-organization",
    "title": "Project 2",
    "section": "Repo organization",
    "text": "Repo organization\nSince you have complete freedom on the focus of your project, you also have complete freedom on the organization of your repository. But… it should be organized in a logical way!\nAt a minimum each project should have a README. This can be a README.md that you edit directly or a README.qmd that you edit and render to README.md. If your project is analyzing a dataset, you’ll probably want to structure your repo similar to your Project 1 repo. If you’re building a package, it should be structured like a package."
  },
  {
    "objectID": "project-2.html#grading",
    "href": "project-2.html#grading",
    "title": "Project 2",
    "section": "Grading",
    "text": "Grading\n\n\n\n\n\n\n\nTotal\n100 pts\n\n\n\n\nProposal2\n10 pts\n\n\nPresentation\n30 pts\n(25 pts from course staff, 5 pts from audience)\n\n\nWrite-up\n30 pts\n\n\nReproducibility, style, and organization3\n10 pts\n\n\nWithin team peer evaluation4\n10 pts\n\n\nBetween team peer evaluation5\n10 pts\n\n\n\nSome of the components are further detailed below.\nNote that there will be points allocated to commits from each team member for the proposal, presentation, and write-up.\n\nProposal (10 points)\n\nHigh level goal\nExpanded description\nPlan\nRepo organization\nWorkflow - Peer review issues closed via commits. (1 point)\nTeamwork - All team members must contribute to the repo via commits. (1 point)\n\n\n\nPresentation (30 points)\n\nTeaching team (25 points)\n\nTime management: Did the team divide the time well among themselves or got cut off going over time? (2 points)\nProfessionalism: How well did the team present? Does the presentation appear to be well practiced? Did everyone get a chance to say something meaningful about the project? (2 points)\nTeamwork: Did the team present a unified story, or did it seem like independent pieces of work patched together? (3 points)\nSlides: Are the slides well organized, readable, not full of text, featuring figures with legible labels, legends, etc.? (3 points)\nCreativity / Critical Thought: Is the project carefully thought out? Does it appear that time and effort went into the planning and implementation of the project? (5 points)\nContent: Including, but not limited to the following: (10 points)\n\nIs the question well articulated in the presentation?\nCan the question be answered with the data?\nDo(es) the data visualization(s) answer the question?\nDo(es) the data visualization(s) follow good visualization practices?\nIs/are the conclusion(s) made based on the visualization(s) justifiable?\nAre the limitations carefully considered and articulated?\n\n\n\n\nPeers (5 points)\n\nContent: Is the project well designed and is the data being used relevant to the focus of the project? (1 point)\nContent: Did the team use appropriate visualizations and did they interpret them accurately? (1 point)\nCreativity and Critical Thought: Is the project carefully thought out? Are the limitations carefully considered? Does it appear that time and effort went into the planning and implementation of the project? (1 point)\nSlides: Are the slides (or other presentation medium) well organized, readable, not full of text, featuring figures with legible labels, legends, etc.? (1 point)\nProfessionalism: How well did the team present? Does the presentation appear to be well practiced? Are they reading off of a script? Did everyone get a chance to say something meaningful about the project? (1 point)\n\n\n\n\nWrite-up (30 points)\n\nIntroduction: The introduction provides a clear explanation of the question and the dataset used to answer the question, including a description of all relevant variables in the dataset. (3 points)\nJustification of approach: The chosen approach and visualizations are clearly explained and justified. (3 points)\nCode: Code is correct, easy to read, properly formatted, and properly documented. (10 points)\nVisualization: The visualizations are appropriate, easy to read, and properly labeled. (10 points)\nDiscussion: Discussion of results is clear and correct, and it has some depth without begin excessively long. (4 points)\n\n\n\nReproducibility, style, and organization (10 points)\n\nAll required files are provided. Quarto files render without issues and reproduce the necessary outputs. If building a package, the checks pass. (3 points)\nIf there’s a dataset, it’s provided in a data folder, a codebook is provided, and a local copy of the data file is used where needed. (3 points)\nDocuments are well structured and easy to follow. No extraneous materials. (2 points)\nAll issues are closed, mostly with specific commits addressing them. (2 points)"
  },
  {
    "objectID": "project-2.html#guidelines",
    "href": "project-2.html#guidelines",
    "title": "Project 2",
    "section": "Guidelines",
    "text": "Guidelines\nPlease use the project repository that has been created for your team to complete your project. Everything should be done reproducibly. This means that I should be able to clone your repo and reproduce everything you’ve submitted as part of your project.\nAll results presented must have corresponding code. If you do calculations by hand instead of using R and then report the results from the calculations, you will not receive credit for those calculations. Any answers/results given without the corresponding R code that generated the result will not be considered. For example, if you’re reporting the number of observations in your dataset, don’t just write the number manually, use inline R code to calculate the number.\nAll code reported in your final project document should work properly. Please do not include any extraneous code or code which produces error messages. Code which produces certain warnings and messages is acceptable, as long as you understand what the warnings mean. In such cases you can add warning: false and message: false in the relevant R chunks. Warnings that signal lifecycle changes (e.g., a function is deprecated and there’s a newer/better function out there) should generally be addressed by updating your code, not just by hiding the warning."
  },
  {
    "objectID": "project-2.html#tips",
    "href": "project-2.html#tips",
    "title": "Project 2",
    "section": "Tips",
    "text": "Tips\n\nWe hope some of you will take the challenge to be adventurous and learn some new skills as part of this project. We’re happy to support you along the way, so don’t hesitate to ask as many questions as needed!\nYou’re working in the same repo as your teammates now, so merge conflicts will happen, issues will arise, and that’s fine! Commit and push often, and ask questions when stuck.\nReview the marking guidelines below and ask questions if any of the expectations are unclear.\nMake sure each team member is contributing, both in terms of quality and quantity of contribution (we will be reviewing commits from different team members).\nSet aside time to work together and apart (physically).\nCode:\n\nIn your presentation your code should be hidden (echo: false) so that your slides are neat and easy to read. However your document should include all your code such that if I re-render your Quarto file I should be able to obtain the results you presented. Exception: If you want to highlight something specific about a piece of code, you’re welcome to show that portion.\n\nTeamwork: You are to complete the assignment as a team. All team members are expected to contribute equally to the completion of this assignment and team evaluations will be given at its completion - anyone judged to not have sufficient contributed to the final product will have their grade reduced. While different teams members may have different backgrounds and abilities, it is the responsibility of every team member to understand how and why all code and approaches in the assignment works.\nWhen you’re done, review the documents on GitHub to make sure you’re happy with the final state of your work. Then go get some rest!"
  },
  {
    "objectID": "course-overview.html",
    "href": "course-overview.html",
    "title": "Course overview",
    "section": "",
    "text": "Data scientists often present information to disseminate their findings. This course introduces theories and applications of communicating with data, with an emphasis on visualizations. To support this approach, we will focus on the what, why, and how of data visualization. “What” focuses on specific types of visualizations for a particular purpose, as well as tools for constructing these plots. In “how” we will focus on the process of generating a data visualization from pre-processing the raw data, mapping attributes of the data to plot aesthetics, strategically determining how to define the visual encoding of the data for maximal accessibility, and finalizing the visualization to consider the importance of visual appeal. In “why” we discuss the theory tying together the “how” and the “what”, and consider empirical evidence of best-practices in data communication."
  },
  {
    "objectID": "course-overview.html#class-meetings",
    "href": "course-overview.html#class-meetings",
    "title": "Course overview",
    "section": "Class meetings",
    "text": "Class meetings\n\n\n\nMeeting\nLocation\nTime\n\n\n\n\nLecture\nThurston Hall 203\nTue & Thur 1:00 - 2:15 pm\n\n\nLab 01\nUpson Hall 216\nFri 10:10 - 11:00 am\n\n\nLab 02\nUpson Hall 216\nFri 11:20 - 12:10 pm"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "INFO 3312/5312: Data Communication",
    "section": "",
    "text": "This page contains an outline of the topics, content, and assignments for the semester. Note that this schedule will be updated as the semester progresses and the timeline of topics and assignments might be updated throughout the semester.\n\n\n\n\n\n\n\n\n\n\n  \n  \n    \n      week\n      dow\n      date\n      what\n      topic\n      prepare\n      slides\n      hw\n      project\n      notes\n    \n  \n  \n    1\nTu\nJan 24\nLec 1\nWelcome to the course\n\n\n\n\n\n    \nTh\nJan 26\nLec 2\nGrammar of Graphics\n\n\n\n\n\n    \nF\nJan 27\nLab\nMeet the toolkit\n\n\n\n\n\n    2\nTu\nJan 31\nLec 3\nLooking at data\n\n\n\n\n\n    \nTh\nFeb 2\nLec 4\nDeep dive: geoms\n\n\n\n\n\n    \nF\nFeb 3\nLab\n\n\n\n\n\nHW 1 released\n    3\nTu\nFeb 7\nLec 5\nDeep dive: stats + scales + guides\n\n\n\n\n\n    \nW\nFeb 8\n\n\n\n\n\n\nHW 1 due\n    \nTh\nFeb 9\nLec 6\nDeep dive: coordinate systems + faceting\n\n\n\n\n\n    \nF\nFeb 10\nLab\nStart project 1 proposals\n\n\n\n\n\n    4\nTu\nFeb 14\nLec 7\nData wrangling I\n\n\n\n\n\n    \nTh\nFeb 16\nLec 8\nData wrangling II\n\n\n\n\n\n    \nF\nFeb 17\nLab\nPeer review project 1 proposals\n\n\n\n\n\n    5\nTu\nFeb 21\nLec 9\nOptimizing color spaces\n\n\n\n\n\n    \nTh\nFeb 23\nLec 10\nDeep dive: themes + axes + annotation\n\n\n\n\n\n    \nF\nFeb 24\nLab\n\n\n\n\n\n\n    6\nTu\nFeb 28\nLecture\nNo class (February Break)\n\n\n\n\n\n    \nTh\nMar 2\nLec 11\nPresentation ready plots\n\n\n\n\n\n    \nF\nMar 3\nLab\nProject 1 presentations\n\n\n\n\n\n    7\nTu\nMar 7\nLec 12\nCalling bullshit I\n\n\n\n\n\n    \nTh\nMar 9\nLec 13\nCalling bullshit II\n\n\n\n\n\n    \nF\nMar 10\nLab\n\n\n\n\n\n\n    8\nTu\nMar 14\nLec 14\nCalling bullshit III\n\n\n\n\n\n    \nTh\nMar 16\nLec 15\nCalling bullshit IV\n\n\n\n\n\n    \nF\nMar 17\nLab\n\n\n\n\n\n\n    9\nTu\nMar 21\nLec 16\nScience, art, or somewhere in-between?\n\n\n\n\n\n    \nTh\nMar 23\nLec 17\nGraphical perception and cognition\n\n\n\n\n\n    \nF\nMar 24\nLab\n\n\n\n\n\n\n    10\nTu\nMar 28\nLec 18\nData feminism I\n\n\n\n\n\n    \nTh\nMar 30\nLec 19\nData feminism II\n\n\n\n\n\n    \nF\nMar 31\nLab\n\n\n\n\n\n\n    11\nTu\nApr 4\nLecture\nNo class (Spring Break)\n\n\n\n\n\n    \nTh\nApr 6\nLecture\nNo class (Spring Break)\n\n\n\n\n\n    \nF\nApr 7\nLab\nNo class (Spring Break)\n\n\n\n\n\n    12\nTu\nApr 11\nLec 20\nVisualizing spatial data I\n\n\n\n\n\n    \nTh\nApr 13\nLec 21\nVisualizing spatial data II\n\n\n\n\n\n    \nF\nApr 14\nLab\n\n\n\n\n\n\n    13\nTu\nApr 18\nLec 22\nVisualizing text + network data\n\n\n\n\n\n    \nTh\nApr 20\nLec 23\nAnimation\n\n\n\n\n\n    \nF\nApr 21\nLab\n\n\n\n\n\n\n    14\nTu\nApr 25\nLec 24\nInteractive reporting\n\n\n\n\n\n    \nTh\nApr 27\nLec 25\nInteractive visualization\n\n\n\n\n\n    \nF\nApr 28\nLab\n\n\n\n\n\n\n    15\nTu\nMay 2\nLec 26\nTables\n\n\n\n\n\n    \nTh\nMay 4\nLec 27\nImplementing accessibility\n\n\n\n\n\n    \nF\nMay 5\nLab\nProject 2 presentations\n\n\n\n\n\n    16\nTu\nMay 9\nLec 28\n???"
  },
  {
    "objectID": "project-1.html",
    "href": "project-1.html",
    "title": "Project 1",
    "section": "",
    "text": "For this project, you will be using a dataset from the TidyTuesday project. You can choose any dataset released in 2022 as part of this project.\nYour task for the project is to come up with two questions to answer, answer them with data visualizations, and write-up and present your method and findings. You will also get to peer review others’ projects."
  },
  {
    "objectID": "project-1.html#dataset",
    "href": "project-1.html#dataset",
    "title": "Project 1",
    "section": "Dataset",
    "text": "Dataset\nChoosing a dataset is something you should do carefully but also relatively quickly in the quarter.\nThe dataset you choose should have some numerical and some categorical variables or you should be able to recode some of the existing variables so that you can ultimately have both numerical and categorical variables to work with.\nIt is also very important that the dataset you choose allows for two distinct questions to be asked and answered using a not-completely-overlapping set of variables, i.e., Question 1 requires the use of variables x, y, and z and Question 2 requires the use of variables a, b, c, and d or x, a, and b. Some shared variables are ok, but the set of variables should not be completely overlapping, i.e., Question 2 can’t also require the use of variables x, y, and z."
  },
  {
    "objectID": "project-1.html#questions",
    "href": "project-1.html#questions",
    "title": "Project 1",
    "section": "Questions",
    "text": "Questions\nEach of the two questions you come up with should involve more than two variables in order to answer. You should phrase them in a way that is within the scope of inference of your data. For example, if you have an observational dataset, you shouldn’t phrase your question in a causal way."
  },
  {
    "objectID": "project-1.html#workflow",
    "href": "project-1.html#workflow",
    "title": "Project 1",
    "section": "Workflow",
    "text": "Workflow\n\nWeek 1 of project (week of Mon, Feb 6): Choose a dataset and write up your proposal in proposal.qmd.\nWeek 2 of project (week of Mon, Feb 13): Provide peer review to two other teams in the form of issues in their GitHub repos, address the issues left on your team’s project repo by closing them with explicit commits. Feel free to get started on your presentation as well.\nWeek 3 of project (week of Mon, Feb 20): Review feedback from me on your proposal and close any remaining issues. Work on your presentation in presentation.qmd and write-up in index.qmd.\nWeek 4 of project (week of Mon, Feb 27): Finish and present your project. Finalize your write-up, presentation, and your project website. Present in class on the Thursday of this week."
  },
  {
    "objectID": "project-1.html#due-dates",
    "href": "project-1.html#due-dates",
    "title": "Project 1",
    "section": "Due dates",
    "text": "Due dates\n\nProposals for peer review: due Thu Feb 16 at 11:59pm.\nRevised proposals for instructor review: due Mon, Feb 20 at 11:59pm.\nWrite-up and presentation: due Fri, Mar 3 at 10am (beginning of lab section)."
  },
  {
    "objectID": "project-1.html#deliverables",
    "href": "project-1.html#deliverables",
    "title": "Project 1",
    "section": "Deliverables",
    "text": "Deliverables\n\nProposal\nYour proposal should include:\n\nA brief description of your dataset including its provenance, dimensions, etc. (Make sure to load the data and use inline code for some of this information.)\nThe reason why you chose this dataset.\nThe two questions you want to answer.\nA plan for answering each of the questions including the variables involved, variables to be created (if any), external data to be merged in (if any).\n\n\n\nPeer review\n\nReviewer tasks\nEach team will review the proposals of two other teams. The peer review will be completed by Tue, Apr 19.\nThe peer review assignments are as follows:\nTODO\nTeams will develop the review together, with discussion among all team members, but only one team member will submit it as an issue on the project repo. To do so, go to the Issues tab, click on the green New issue button on the top right, and then click on the green Get started button for the issue template titled Peer review.\nThis will start a new issue with a peer review form that you can fill out. Make sure to update the introductory paragraph with your team name and the names of the team members participating in the review. Then, answer each of the questions in the spaces provided underneath them. You’re expected to be thorough in your review, but this doesn’t necessarily require lengthy responses.\nRemember, your goal is to help the team whose project proposal you’re reviewing. The team will not lose points because of issues you point out, as long as they address them before I review their proposals. You should be critical, but respectful in your review. Also remember that you will be evaluated on the quality of your review. So that’s an additional incentive to do a good job.\n\n\nReviewee tasks\nOnce you receive feedback from your peers, you should address them. You should do this by directly updating your proposal or making any other updates to your repo as needed. You can do these updates all in one commit or you can spread it across multiple commits.\nRegardless, in the last commit that addresses the peer review comments, you should use a keyword in your commit message that will close the peer review issues. These words are close, closes, closed, fix, fixes, fixed, resolve, resolves, and resolved and they need to be followed by the issue number (which you can find next to the issue title). So, your commit message can say something like “Finished updates based on peer review, fixes #1”.\n\n\n\nWrite-up\nYour write-up should consist of three parts:\n\nIntroduction (1-2 paragraphs): Brief introduction to the dataset. You may repeat some of the information about the dataset provided in the introduction to the dataset on the TidyTuesday repository, paraphrasing on your own terms. Imagine that your project is a standalone document and the grader has no prior knowledge of the dataset.\nQuestion 1: The title should relate to the question you’re answering.\n\nIntroduction (1-2 paragraphs): Introduction to the question and what parts of the dataset are necessary to answer the question. Also discuss why you’re interested in this question.\nApproach (1-2 paragraphs): Describe what types of plots you are going to make to address your question. For each plot, provide a clear explanation as to why this plot (e.g. boxplot, barplot, histogram, etc.) is best for providing the information you are asking about. The two plots should be of different types, and at least one of the two plots needs to use either color mapping or facets.\nAnalysis (2-3 code blocks, 2 figures, text/code comments as needed): In this section, provide the code that generates your plots. Use scale functions to provide nice axis labels and guides. You are welcome to use theme functions to customize the appearance of your plot, but you are not required to do so. All plots must be made with ggplot2. Do not use base R or lattice plotting functions.\nDiscussion (1-3 paragraphs): In the Discussion section, interpret the results of your analysis. Identify any trends revealed (or not revealed) by the plots. Speculate about why the data looks the way it does.\n\nQuestion 2: Same structure outlined for Question 1, but for your new question. And the title should relate to the question you’re answering.\n\nWe encourage you to be concise. A paragraph should typically not be longer than 5 sentences.\nYou are not required to perform any statistical tests in this project, but you may do so if you find it helpful to answer your question.\n\n\nPresentation\nYour presentation should generally follow the same structure as your write-up. Each team will have 5 minutes for their presentation, and each team member must speak (roughly equally) during this time. Your presentation will be created using Quarto, which allows you to write slides using the same reproducible document structure you’re used to.\nRoughly I recommend 1 slide for introduction, 2 slides for Question 1, and 2 slides for Question 2. You can imagine spending roughly one minute on each slide. You should feel free to have more (or fewer) slides. Your evaluation will be based on your content, professionalism (including sticking to time), and your performance during the Q&A (question and answer).\nWe don’t care how many slides you use to do this.\n\n\nWebsite\nEach of your projects will have a website that looks like this. You are not expected to change the styling of the website, but if you want to, you’ll need to edit the _quarto.yml file in your repo. Feel free to Google your way around it or ask on the discussion forum / office hours!"
  },
  {
    "objectID": "project-1.html#repo-organization",
    "href": "project-1.html#repo-organization",
    "title": "Project 1",
    "section": "Repo organization",
    "text": "Repo organization\nThe following folders and files in your project repository:\n\n/data/*: Your dataset\n\n/data/*.csv: Your dataset in CSV format\n/data/README.md: Metadata about your dataset including information on provenance, codebook, etc.1\n\nindex.qmd: Your project write-up\nproposal.qmd - Your project proposal\npresentation.qmd - Your project presentation\n_quarto.yml: Setup file for project website"
  },
  {
    "objectID": "project-1.html#grading",
    "href": "project-1.html#grading",
    "title": "Project 1",
    "section": "Grading",
    "text": "Grading\n\n\n\n\n\n\n\nTotal\n100 pts\n\n\n\n\nProposal2\n10 pts\n\n\nPresentation3\n30 pts\n(25 pts from course staff, 5 pts from audience)\n\n\nWrite-up4\n30 pts\n\n\nReproducibility, style, and organization5\n10 pts\n\n\nWithin team peer evaluation6\n10 pts\n\n\nBetween team peer evaluation7\n10 pts\n\n\n\nSome of the components are further detailed below.\n\nProposal (10 points)\n\nData - Dataset is in the data folder, along with a codebook in the README of that folder. (3 points)\nWrite-up - All required components included. (5 points)\nWorkflow - Peer review issues closed via commits. (1 point)\nTeamwork - All team members must contribute to the repo via commits. (1 point)\n\n\n\nPresentation (30 points)\n\nTeaching team (25 points)\n\nTime management: Did the team divide the time well amongst themselves or got cut off going over time? (2 points)\nProfessionalism: How well did the team present? Does the presentation appear to be well practiced? Did everyone get a chance to say something meaningful about the project? (2 points)\nTeamwork: Did the team present a unified story, or did it seem like independent pieces of work patched together? (3 points)\nSlides: Are the slides well organized, readable, not full of text, featuring figures with legible labels, legends, etc.? (3 points)\nCreativity Critical Thought: Is the project carefully thought out? Does it appear that time and effort went into the planning and implementation of the project? (3 points)\nContent: Both Question 1 and Question 2 will each be scored by the following criteria. Point values apply per part.\n\nIs the question well articulated in the presentation? (1 point)\nCan the question be answered with the data? (1 point)\nDo(es) the data visualization(s) answer the question? (1 point)\nDo(es) the data visualization(s) follow good visualization practices? (1 point)\nIs/are the conclusion(s) made based on the visualization(s) justifiable? (1 point)\nAre the limitations carefully considered and articulated? (1 point)\n\n\n\n\nPeers (5 points)\n\nContent: Is the research question well designed and is the data being used relevant to the research question? (1 point)\nContent: Did the team use appropriate visualizations and did they interpret them accurately? (1 point)\nCreativity and Critical Thought: Is the project carefully thought out? Are the limitations carefully considered? Does it appear that time and effort went into the planning and implementation of the project? (1 point)\nSlides: Are the slides well organized, readable, not full of text, featuring figures with legible labels, legends, etc.? (1 point)\nProfessionalism: How well did the team present? Does the presentation appear to be well practiced? Are they reading off of a script? Did everyone get a chance to say something meaningful about the project? (1 point)\n\n\n\n\nWrite-up (30 points)\n\nIntroduction: The introduction provides a clear explanation of the question and the dataset used to answer the question, including a description of all relevant variables in the dataset. (2 points)\n\nBoth Question 1 and Question 2 will each be scored by the following criteria. Point values apply per part.\n\nJustification of approach: The chosen analysis approach and visualizations are clearly explained and justified. (3 points)\nCode: Code is correct, easy to read, properly formatted, and properly documented. (3 points)\nVisualization: The visualizations are appropriate, easy to read, and properly labeled. (4 points)\nDiscussion: Discussion of results is clear and correct, and it has some depth without begin excessively long. (4 points)\n\n\n\nReproducibility, style, and organization (10 points)\n\nAll required files are provided. Quarto files render without issues and reproduce the necessary outputs. (3 points)\nData is in the data folder, with a codebook in the README, and is loaded from this folder in presentation and writeup. (3 points)\nDocuments are well structured and easy to follow. No extraneous materials. (2 points)\nAll issues are closed, mostly with specific commits addressing them. (2 points)"
  },
  {
    "objectID": "project-1.html#guidelines",
    "href": "project-1.html#guidelines",
    "title": "Project 1",
    "section": "Guidelines",
    "text": "Guidelines\nPlease use the project repository that has been created for your team to complete your project. This means putting all of the content in the Quarto files provided, rendering them to obtain the output, and committing and pushing all files to your repository by the indicated deadlines. Your Quarto files (.qmd) and the resulting markdown files (.md) will be graded jointly, so they must be consistent (as in, don’t change the Quarto file without also updating the rendered document!).\nAll results presented must have corresponding code. If you do calculations by hand instead of using R and then report the results from the calculations, you will not receive credit for those calculations. Any answers/results given without the corresponding R code that generated the result will not be considered. For example, if you’re reporting the number of observations in your dataset, don’t just write the number manually, use inline R code to calculate the number.\nAll code reported in your final project document should work properly. Please do not include any extraneous code or code which produces error messages. Code which produces certain warnings and messages is acceptable, as long as you understand what the warnings mean. In such cases you can add warning: false and message: false in the relevant R chunks. Warnings that signal lifecycle changes (e.g., a function is deprecated and there’s a newer/better function out there) should generally be addressed by updating your code, not just by hiding the warning."
  },
  {
    "objectID": "project-1.html#tips",
    "href": "project-1.html#tips",
    "title": "Project 1",
    "section": "Tips",
    "text": "Tips\n\nYou’re working in the same repo as your teammates now, so merge conflicts will happen, issues will arise, and that’s fine! Commit and push often, and ask questions when stuck.\nReview the marking guidelines above and ask questions if any of the expectations are unclear.\nMake sure each team member is contributing, both in terms of quality and quantity of contribution (we will be reviewing commits from different team members).\nSet aside time to work together and apart (physically).\nCode:\n\nIn your presentation your code should be hidden (echo: false) so that your slides are neat and easy to read. However your document should include all your code such that if I re-render your Quarto file I should be able to obtain the results you presented. Exception: If you want to highlight something specific about a piece of code, you’re welcomed to show that portion.\n\nTeamwork: You are to complete the assignment as a team. All team members are expected to contribute equally to the completion of this assignment and team evaluations will be given at its completion - anyone judged to not have sufficient contributed to the final product will have their grade reduced. While different teams members may have different backgrounds and abilities, it is the responsibility of every team member to understand how and why all code and approaches in the assignment works.\nWhen you’re done, review the documents on GitHub to make sure you’re happy with the final state of your work. Then go get some rest!"
  },
  {
    "objectID": "course-team.html",
    "href": "course-team.html",
    "title": "Course staff",
    "section": "",
    "text": "Dr. Benjamin Soltoff is Lecturer in Information Science at Cornell University. He is a political scientist with concentrations in American government, political methodology, and law and courts. Additionally, he has training and experience in data science, big data analytics, and policy evaluation. He currently teaches courses in data science, research design, data communication, and web design.\n\n\n\nOffice hours\nLocation\n\n\n\n\nWed 9:00 - 11:00 am\nGates Hall 216"
  },
  {
    "objectID": "course-team.html#teaching-assistants",
    "href": "course-team.html#teaching-assistants",
    "title": "Course staff",
    "section": "Teaching assistants",
    "text": "Teaching assistants\n\n\n\nName\nRole\n\n\n\n\nChuanrui L\nGrad TA\n\n\nLincy C\nUndergrad TA\n\n\nMichelle P\nUndergrad TA\n\n\nKevin S\nUndergrad TA\n\n\nJessica Z\nUndergrad TA\n\n\n\nFor office hours, please see this Google calendar."
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#data-visualization-1",
    "href": "slides/02-grammar-of-graphics.html#data-visualization-1",
    "title": "The grammar of graphics",
    "section": "Data visualization",
    "text": "Data visualization\n\n“The simple graph has brought more information to the data analyst’s mind than any other device.”\nJohn Tukey\n\n\nData visualization is the creation and study of the visual representation of data\nMany tools for visualizing data – R is one of them\nMany approaches/systems within R for making data visualizations – ggplot2 is one of them, and that’s what we’re going to use"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#ggplot2-in-tidyverse",
    "href": "slides/02-grammar-of-graphics.html#ggplot2-in-tidyverse",
    "title": "The grammar of graphics",
    "section": "ggplot2 \\(\\in\\) tidyverse",
    "text": "ggplot2 \\(\\in\\) tidyverse\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot2 is tidyverse’s data visualization package\ngg in “ggplot2” stands for Grammar of Graphics\nInspired by the book Grammar of Graphics by Leland Wilkinson"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#grammar-of-graphics",
    "href": "slides/02-grammar-of-graphics.html#grammar-of-graphics",
    "title": "The grammar of graphics",
    "section": "Grammar of Graphics",
    "text": "Grammar of Graphics\n\n\nA grammar of graphics is a tool that enables us to concisely describe the components of a graphic\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSource: BloggoType"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#hello-ggplot2",
    "href": "slides/02-grammar-of-graphics.html#hello-ggplot2",
    "title": "The grammar of graphics",
    "section": "Hello ggplot2!",
    "text": "Hello ggplot2!\n\nggplot() is the main function in ggplot2\nPlots are constructed in layers\nStructure of the code for plots can be summarized as\n\nggplot(data = [dataset], \n       mapping = aes(x = [x-variable], y = [y-variable])) +\n   geom_xxx() +\n   other options\n\nThe ggplot2 package comes with the tidyverse\n\n\nlibrary(tidyverse)\n\n\nFor help with ggplot2, see ggplot2.tidyverse.org"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#why-do-we-visualize-1",
    "href": "slides/02-grammar-of-graphics.html#why-do-we-visualize-1",
    "title": "The grammar of graphics",
    "section": "Why do we visualize?",
    "text": "Why do we visualize?\n\nDiscover patterns that may not be obvious from numerical summaries"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#anscombes-quartet",
    "href": "slides/02-grammar-of-graphics.html#anscombes-quartet",
    "title": "The grammar of graphics",
    "section": "Anscombe’s quartet",
    "text": "Anscombe’s quartet\n\nlibrary(Tmisc)\nquartet |> slice_head(n = 15)\n\n   set  x     y\n1    I 10  8.04\n2    I  8  6.95\n3    I 13  7.58\n4    I  9  8.81\n5    I 11  8.33\n6    I 14  9.96\n7    I  6  7.24\n8    I  4  4.26\n9    I 12 10.84\n10   I  7  4.82\n11   I  5  5.68\n12  II 10  9.14\n13  II  8  8.14\n14  II 13  8.74\n15  II  9  8.77"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#summary-statistics-for-anscombes-quartet",
    "href": "slides/02-grammar-of-graphics.html#summary-statistics-for-anscombes-quartet",
    "title": "The grammar of graphics",
    "section": "Summary statistics for Anscombe’s quartet",
    "text": "Summary statistics for Anscombe’s quartet\n\nquartet |>\n  group_by(set) |>\n  summarise(\n    mean_x = mean(x), \n    mean_y = mean(y),\n    sd_x = sd(x),\n    sd_y = sd(y),\n    r = cor(x, y)\n  )\n\n# A tibble: 4 × 6\n  set   mean_x mean_y  sd_x  sd_y     r\n  <fct>  <dbl>  <dbl> <dbl> <dbl> <dbl>\n1 I          9   7.50  3.32  2.03 0.816\n2 II         9   7.50  3.32  2.03 0.816\n3 III        9   7.5   3.32  2.03 0.816\n4 IV         9   7.50  3.32  2.03 0.817"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#scatterplots-for-anscombes-quartet",
    "href": "slides/02-grammar-of-graphics.html#scatterplots-for-anscombes-quartet",
    "title": "The grammar of graphics",
    "section": "Scatterplots for Anscombe’s quartet",
    "text": "Scatterplots for Anscombe’s quartet"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#why-do-we-visualize-2",
    "href": "slides/02-grammar-of-graphics.html#why-do-we-visualize-2",
    "title": "The grammar of graphics",
    "section": "Why do we visualize?",
    "text": "Why do we visualize?\n\nDiscover patterns that may not be obvious from numerical summaries\nConvey information in a way that is otherwise difficult/impossible to convey"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#impact-of-omicron-variant-on-unvaccinated-populations",
    "href": "slides/02-grammar-of-graphics.html#impact-of-omicron-variant-on-unvaccinated-populations",
    "title": "The grammar of graphics",
    "section": "Impact of Omicron variant on unvaccinated populations",
    "text": "Impact of Omicron variant on unvaccinated populations\n\n\n\n\n\n\n\n\n\n\n\nSource: John Burn-Murdoch"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#covid-19-vaccination-in-us-counties",
    "href": "slides/02-grammar-of-graphics.html#covid-19-vaccination-in-us-counties",
    "title": "The grammar of graphics",
    "section": "COVID-19 vaccination in US Counties",
    "text": "COVID-19 vaccination in US Counties\n\n\n\n\n\n\n\n\n\n\n\nSource: New York Times, March 28, 2022."
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#ggplot2-in-tidyverse-1",
    "href": "slides/02-grammar-of-graphics.html#ggplot2-in-tidyverse-1",
    "title": "The grammar of graphics",
    "section": "ggplot2 \\(\\in\\) tidyverse",
    "text": "ggplot2 \\(\\in\\) tidyverse\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot2 is tidyverse’s data visualization package\nStructure of the code for plots can be summarized as\n\nggplot(data = [dataset], \n       mapping = aes(x = [x-variable], \n                     y = [y-variable])) +\n   geom_xxx() +\n   other options"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#data-palmer-penguins",
    "href": "slides/02-grammar-of-graphics.html#data-palmer-penguins",
    "title": "The grammar of graphics",
    "section": "Data: Palmer Penguins",
    "text": "Data: Palmer Penguins\nMeasurements for penguin species, island in Palmer Archipelago, size (flipper length, body mass, bill dimensions), and sex.\n\n\n\n\n\n\n\n\n\n\n\n\n\nlibrary(palmerpenguins)\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               <fct> male, female, female, NA, female, male, female, male…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#argument-names",
    "href": "slides/02-grammar-of-graphics.html#argument-names",
    "title": "The grammar of graphics",
    "section": "Argument names",
    "text": "Argument names\n\nYou can omit the names of first two arguments when building plots with ggplot().\n\n\n\n\nggplot(data = penguins,\n       mapping = aes(x = bill_depth_mm,\n                     y = bill_length_mm,\n                     color = species)) +\n  geom_point() +\n  scale_color_viridis_d()\n\n\n\nggplot(penguins,\n       aes(x = bill_depth_mm,\n           y = bill_length_mm,\n           color = species)) +\n  geom_point() +\n  scale_color_viridis_d()"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#aesthetics-options",
    "href": "slides/02-grammar-of-graphics.html#aesthetics-options",
    "title": "The grammar of graphics",
    "section": "Aesthetics options",
    "text": "Aesthetics options\nCommonly used characteristics of plotting characters that can be mapped to a specific variable in the data are\n\ncolor\nshape\nsize\nalpha (transparency)"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#color",
    "href": "slides/02-grammar-of-graphics.html#color",
    "title": "The grammar of graphics",
    "section": "Color",
    "text": "Color\n\n\nggplot(penguins,\n       aes(x = bill_depth_mm, \n           y = bill_length_mm,\n           color = species)) +\n  geom_point() +\n  scale_color_viridis_d()"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#shape",
    "href": "slides/02-grammar-of-graphics.html#shape",
    "title": "The grammar of graphics",
    "section": "Shape",
    "text": "Shape\nMapped to a different variable than color\n\n\nggplot(penguins,\n       aes(x = bill_depth_mm, \n           y = bill_length_mm,\n           color = species,\n           shape = island)) +\n  geom_point() +\n  scale_color_viridis_d()"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#shape-1",
    "href": "slides/02-grammar-of-graphics.html#shape-1",
    "title": "The grammar of graphics",
    "section": "Shape",
    "text": "Shape\nMapped to same variable as color\n\n\nggplot(penguins,\n       aes(x = bill_depth_mm, \n           y = bill_length_mm,\n           color = species,\n           shape = species)) +\n  geom_point() +\n  scale_color_viridis_d()"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#size",
    "href": "slides/02-grammar-of-graphics.html#size",
    "title": "The grammar of graphics",
    "section": "Size",
    "text": "Size\n\n\nggplot(penguins,\n       aes(x = bill_depth_mm, \n           y = bill_length_mm,\n           color = species,\n           shape = species,\n           size = body_mass_g)) +\n  geom_point() +\n  scale_color_viridis_d()"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#alpha",
    "href": "slides/02-grammar-of-graphics.html#alpha",
    "title": "The grammar of graphics",
    "section": "Alpha",
    "text": "Alpha\n\n\nggplot(penguins,\n       aes(x = bill_depth_mm, \n           y = bill_length_mm,\n           color = species,\n           shape = species,\n           size = body_mass_g,\n           alpha = flipper_length_mm)) +\n  geom_point() +\n  scale_color_viridis_d()"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#mapping-vs.-setting",
    "href": "slides/02-grammar-of-graphics.html#mapping-vs.-setting",
    "title": "The grammar of graphics",
    "section": "Mapping vs. setting",
    "text": "Mapping vs. setting\n\nMapping: Determine the size, alpha, etc. of points based on the values of a variable in the data\n\ngoes into aes()\n\nSetting: Determine the size, alpha, etc. of points not based on the values of a variable in the data\n\ngoes into geom_*() (this was geom_point() in the previous example, but we’ll learn about other geoms soon!)"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#faceting-1",
    "href": "slides/02-grammar-of-graphics.html#faceting-1",
    "title": "The grammar of graphics",
    "section": "Faceting",
    "text": "Faceting\n\nSmaller plots that display different subsets of the data\nUseful for exploring conditional relationships and large data"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#various-ways-to-facet",
    "href": "slides/02-grammar-of-graphics.html#various-ways-to-facet",
    "title": "The grammar of graphics",
    "section": "Various ways to facet",
    "text": "Various ways to facet\n\nIn the next few slides describe what each plot displays. Think about how the code relates to the output.\nNote: The plots in the next few slides do not have proper titles, axis labels, etc. because we want you to figure out what’s happening in the plots. But you should always label your plots!"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#faceting-summary",
    "href": "slides/02-grammar-of-graphics.html#faceting-summary",
    "title": "The grammar of graphics",
    "section": "Faceting summary",
    "text": "Faceting summary\n\nfacet_grid():\n\n2 dimensional grid\nrows = vars(<VARIABLE>), cols = vars(<VARIABLE>)\nAlternative: rows ~ cols\n\nfacet_wrap(): 1 dimensional ribbon wrapped according to number of rows and columns specified or available plotting area"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#facet-and-color",
    "href": "slides/02-grammar-of-graphics.html#facet-and-color",
    "title": "The grammar of graphics",
    "section": "Facet and color",
    "text": "Facet and color\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(\n  penguins, \n  aes(x = bill_depth_mm, \n      y = bill_length_mm, \n      color = species)) +\n  geom_point() +\n  facet_grid(species ~ sex) +\n  scale_color_viridis_d()"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#facet-and-color-no-legend",
    "href": "slides/02-grammar-of-graphics.html#facet-and-color-no-legend",
    "title": "The grammar of graphics",
    "section": "Facet and color, no legend",
    "text": "Facet and color, no legend\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(\n  penguins, \n  aes(x = bill_depth_mm, \n      y = bill_length_mm, \n      color = species)) +\n  geom_point() +\n  facet_grid(species ~ sex) +\n  scale_color_viridis_d(guide = \"none\")"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#recreate-the-visualization",
    "href": "slides/02-grammar-of-graphics.html#recreate-the-visualization",
    "title": "The grammar of graphics",
    "section": "Recreate the visualization",
    "text": "Recreate the visualization\nIn order to recreate this visualization we need to first reshape the data to have one variable for faculty type and one variable for year. In other words, we will convert the data from the long format to wide format.\nBut before we do so…\n\nIf the long data will have a row for each year/faculty type combination, and there are 5 faculty types and 11 years of data, how many rows will the data have?"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#pivot_-function",
    "href": "slides/02-grammar-of-graphics.html#pivot_-function",
    "title": "The grammar of graphics",
    "section": "pivot_*() function",
    "text": "pivot_*() function"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#pivot_longer",
    "href": "slides/02-grammar-of-graphics.html#pivot_longer",
    "title": "The grammar of graphics",
    "section": "pivot_longer()",
    "text": "pivot_longer()\n\npivot_longer(data, cols, names_to = \"name\", values_to = \"value\")\n\n\nThe first argument is data as usual.\nThe second argument, cols, is where you specify which columns to pivot into longer format – in this case all columns except for the faculty_type\nThe third argument, names_to, is a string specifying the name of the column to create from the data stored in the column names of data – in this case year\nThe fourth argument, values_to, is a string specifying the name of the column to create from the data stored in cell values, in this case percentage"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#pivot-instructor-data",
    "href": "slides/02-grammar-of-graphics.html#pivot-instructor-data",
    "title": "The grammar of graphics",
    "section": "Pivot instructor data",
    "text": "Pivot instructor data\n\nlibrary(tidyverse)\n\nstaff_long <- staff |>\n  pivot_longer(cols = -faculty_type, names_to = \"year\", \n               values_to = \"percentage\") |>\n  mutate(percentage = as.numeric(percentage))\n\nstaff_long\n\n# A tibble: 55 × 3\n   faculty_type              year  percentage\n   <chr>                     <chr>      <dbl>\n 1 Full-Time Tenured Faculty 1975        29  \n 2 Full-Time Tenured Faculty 1989        27.6\n 3 Full-Time Tenured Faculty 1993        25  \n 4 Full-Time Tenured Faculty 1995        24.8\n 5 Full-Time Tenured Faculty 1999        21.8\n 6 Full-Time Tenured Faculty 2001        20.3\n 7 Full-Time Tenured Faculty 2003        19.3\n 8 Full-Time Tenured Faculty 2005        17.8\n 9 Full-Time Tenured Faculty 2007        17.2\n10 Full-Time Tenured Faculty 2009        16.8\n# … with 45 more rows"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#some-improvement",
    "href": "slides/02-grammar-of-graphics.html#some-improvement",
    "title": "The grammar of graphics",
    "section": "Some improvement…",
    "text": "Some improvement…\n\n\nstaff_long |>\n  ggplot(aes(x = percentage, y = year, fill = faculty_type)) +\n  geom_col()"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#more-improvement",
    "href": "slides/02-grammar-of-graphics.html#more-improvement",
    "title": "The grammar of graphics",
    "section": "More improvement",
    "text": "More improvement\n\n\nstaff_long |>\n  ggplot(aes(x = year, y = percentage, group = faculty_type, \n             color = faculty_type)) +\n  geom_line() +\n  theme_minimal()"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#goal-even-more-improvement",
    "href": "slides/02-grammar-of-graphics.html#goal-even-more-improvement",
    "title": "The grammar of graphics",
    "section": "Goal: even more improvement!",
    "text": "Goal: even more improvement!\n\nI want to achieve the following look but I have no idea how!"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#asking-good-questions",
    "href": "slides/02-grammar-of-graphics.html#asking-good-questions",
    "title": "The grammar of graphics",
    "section": "Asking good questions",
    "text": "Asking good questions\n\nDescribe what you want\nDescribe where you are\nCreate a minimal reproducible example: reprex::reprex()"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#agenda-1",
    "href": "slides/01-welcome-info3312.html#agenda-1",
    "title": "Welcome to INFO 3312/5312",
    "section": "Agenda",
    "text": "Agenda\n\nStaff intros\nThemes of the course\nFacts, truth, and beauty\nWhat makes a good visualization?\nCourse overview\nThis week’s tasks"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#meet-the-instructor",
    "href": "slides/01-welcome-info3312.html#meet-the-instructor",
    "title": "Welcome to INFO 3312/5312",
    "section": "Meet the instructor",
    "text": "Meet the instructor\n\n\nDr. Benjamin Soltoff\nLecturer in Information Science\nGates Hall 216"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#meet-the-course-team",
    "href": "slides/01-welcome-info3312.html#meet-the-course-team",
    "title": "Welcome to INFO 3312/5312",
    "section": "Meet the course team",
    "text": "Meet the course team\n\nChuanrui L (grad TA)\nJessica Z\nKevin S\nLincy C\nMichelle P"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#meet-each-other",
    "href": "slides/01-welcome-info3312.html#meet-each-other",
    "title": "Welcome to INFO 3312/5312",
    "section": "Meet each other!",
    "text": "Meet each other!\n\n\n\n−+\n02:00"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#themes-what-why-and-how",
    "href": "slides/01-welcome-info3312.html#themes-what-why-and-how",
    "title": "Welcome to INFO 3312/5312",
    "section": "Themes: what, why, and how",
    "text": "Themes: what, why, and how\n\nWhat: the communication (e.g. plot, table, report)\n\nSpecific types of visualizations for a particular purpose (e.g., maps for spatial data, Sankey diagrams for proportions, etc.)\nTooling to produce them (e.g., specific R packages)\n\n\n\n\nHow: the process\n\nStart with a design (sketch + pseudo code)\nPre-process data (e.g., wrangle, reshape, join, etc.)\nMap data to aesthetics\nMake visual encoding decisions (e.g., address accessibility concerns)\nPost-process for visual appeal and annotation\n\n\n\n\n\nWhy: the theory\n\nTie together “how” and “what” through the grammar of graphics\nExtend to underlying theory of cognition and information processing"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#what-is-truth",
    "href": "slides/01-welcome-info3312.html#what-is-truth",
    "title": "Welcome to INFO 3312/5312",
    "section": "What is truth?",
    "text": "What is truth?\n\nCore principles of the universe?\nUnderlying trends in society?\nSomething transcendental?\nReality?"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#how-do-we-find-truth",
    "href": "slides/01-welcome-info3312.html#how-do-we-find-truth",
    "title": "Welcome to INFO 3312/5312",
    "section": "How do we find truth?",
    "text": "How do we find truth?\nScience!"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#but-wait",
    "href": "slides/01-welcome-info3312.html#but-wait",
    "title": "Welcome to INFO 3312/5312",
    "section": "But wait!",
    "text": "But wait!\nBeware of scientism!\n\n“… promotion of science as the best or only objective means by which society should determine normative and epistemological values”\n\n\n\nSource: Wikipedia"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#science-is-not-the-only-way",
    "href": "slides/01-welcome-info3312.html#science-is-not-the-only-way",
    "title": "Welcome to INFO 3312/5312",
    "section": "Science is not the only way",
    "text": "Science is not the only way\n\nArt\nMusic\nLiterature\nReligion\nNature"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#nothing-here-is-factual",
    "href": "slides/01-welcome-info3312.html#nothing-here-is-factual",
    "title": "Welcome to INFO 3312/5312",
    "section": "Nothing here is factual…",
    "text": "Nothing here is factual…\n…but it all reveals truth\n\n\nCosette\n\n\nThe Bible\n\n\nBeethoven’s 9th symphony"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#facts-neq-truth",
    "href": "slides/01-welcome-info3312.html#facts-neq-truth",
    "title": "Welcome to INFO 3312/5312",
    "section": "Facts \\(\\neq\\) truth",
    "text": "Facts \\(\\neq\\) truth\n\nWhere does truth come when there are no facts?\n\n\nBeauty"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#beauty-in-science",
    "href": "slides/01-welcome-info3312.html#beauty-in-science",
    "title": "Welcome to INFO 3312/5312",
    "section": "Beauty in science",
    "text": "Beauty in science\n\n\n\n\n\n\n\n\n\n\n\n\nThis is also true for science and math and other more factual realms"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#content-form",
    "href": "slides/01-welcome-info3312.html#content-form",
    "title": "Welcome to INFO 3312/5312",
    "section": "Content + form",
    "text": "Content + form\nArt is how we translate core, essential content (or truth!) to different forms for specific audiences."
  },
  {
    "objectID": "slides/01-welcome-info3312.html#truth-is-beautiful",
    "href": "slides/01-welcome-info3312.html#truth-is-beautiful",
    "title": "Welcome to INFO 3312/5312",
    "section": "Truth is beautiful",
    "text": "Truth is beautiful\n\nTruth \\(\\neq\\) facts\n\n\nTruth comes from aesthetic combination of content and form\n\n\nFacts require beauty to be true\n\n\nWe want to blend facts with beauty to find truth"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#just-show-me-the-data",
    "href": "slides/01-welcome-info3312.html#just-show-me-the-data",
    "title": "Welcome to INFO 3312/5312",
    "section": "Just show me the data!",
    "text": "Just show me the data!\n\n\n\n\n\n\nhead(my_data, 10)\n\n# A tibble: 10 × 2\n       x     y\n   <dbl> <dbl>\n 1  55.4  97.2\n 2  51.5  96.0\n 3  46.2  94.5\n 4  42.8  91.4\n 5  40.8  88.3\n 6  38.7  84.9\n 7  35.6  79.9\n 8  33.1  77.6\n 9  29.0  74.5\n10  26.2  71.4\n\n\n\n\nmean(my_data$x)\n\n[1] 54.26327\n\nmean(my_data$y)\n\n[1] 47.83225\n\ncor(my_data$x, my_data$y)\n\n[1] -0.06447185"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#oh-no",
    "href": "slides/01-welcome-info3312.html#oh-no",
    "title": "Welcome to INFO 3312/5312",
    "section": "oh no",
    "text": "oh no"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#raw-data-is-not-enough",
    "href": "slides/01-welcome-info3312.html#raw-data-is-not-enough",
    "title": "Welcome to INFO 3312/5312",
    "section": "Raw data is not enough",
    "text": "Raw data is not enough"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#humans-love-patterns",
    "href": "slides/01-welcome-info3312.html#humans-love-patterns",
    "title": "Welcome to INFO 3312/5312",
    "section": "Humans love patterns",
    "text": "Humans love patterns\n\n\n\n\n\n\n\n\n\n\n\nhttps://doi.org/10.3389/fnins.2014.00265"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#sometimes-we-love-them-too-much",
    "href": "slides/01-welcome-info3312.html#sometimes-we-love-them-too-much",
    "title": "Welcome to INFO 3312/5312",
    "section": "(Sometimes we love them too much)",
    "text": "(Sometimes we love them too much)\nPareidolia: seeing patterns that aren’t there"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#beauty-is-necessary-to-see-patterns",
    "href": "slides/01-welcome-info3312.html#beauty-is-necessary-to-see-patterns",
    "title": "Welcome to INFO 3312/5312",
    "section": "Beauty is necessary to see patterns",
    "text": "Beauty is necessary to see patterns"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#what-makes-a-great-visualization",
    "href": "slides/01-welcome-info3312.html#what-makes-a-great-visualization",
    "title": "Welcome to INFO 3312/5312",
    "section": "What makes a great visualization?",
    "text": "What makes a great visualization?\n\nTruthful\nFunctional\nBeautiful\nInsightful\nEnlightening\n\n\n\nSource: Alberto Cairo, The Truthful Art"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#what-makes-a-great-visualization-1",
    "href": "slides/01-welcome-info3312.html#what-makes-a-great-visualization-1",
    "title": "Welcome to INFO 3312/5312",
    "section": "What makes a great visualization?",
    "text": "What makes a great visualization?\n\nGraphical excellence is the well-designed presentation of interesting data—a matter of substance, of statistics, and of design … [It] consists of complex ideas communicated with clarity, precision, and efficiency. … [It] is that which gives to the viewer the greatest number of ideas in the shortest time with the least ink in the smallest space … [It] is nearly always multivariate … And graphical excellence requires telling the truth about the data.\n\n\n\nEdward Tufte, The Visual Display of Quantitative Information, p. 51"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#what-makes-a-great-visualization-2",
    "href": "slides/01-welcome-info3312.html#what-makes-a-great-visualization-2",
    "title": "Welcome to INFO 3312/5312",
    "section": "What makes a great visualization?",
    "text": "What makes a great visualization?\n\nGood aesthetics\nNo substantive issues\nNo perceptual issues\nHonesty + good judgment\n\n\n\nKieran Healy, Data Visualization: A Practical Introduction"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#whats-wrong",
    "href": "slides/01-welcome-info3312.html#whats-wrong",
    "title": "Welcome to INFO 3312/5312",
    "section": "What’s wrong?",
    "text": "What’s wrong?\n\n\n\nAesthetic issues\nSubstantive issues\nPerceptual issues\nHonesty + judgment issues"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#whats-wrong-1",
    "href": "slides/01-welcome-info3312.html#whats-wrong-1",
    "title": "Welcome to INFO 3312/5312",
    "section": "What’s wrong?",
    "text": "What’s wrong?\n\n\n\nAesthetic issues\nSubstantive issues\nPerceptual issues\nHonesty + judgment issues"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#whats-wrong-2",
    "href": "slides/01-welcome-info3312.html#whats-wrong-2",
    "title": "Welcome to INFO 3312/5312",
    "section": "What’s wrong?",
    "text": "What’s wrong?\n\n\n\nAesthetic issues\nSubstantive issues\nPerceptual issues\nHonesty + judgment issues"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#whats-right",
    "href": "slides/01-welcome-info3312.html#whats-right",
    "title": "Welcome to INFO 3312/5312",
    "section": "What’s right?",
    "text": "What’s right?\n\n\n\nAesthetic issues\nSubstantive issues\nPerceptual issues\nHonesty + judgment issues"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#homepage",
    "href": "slides/01-welcome-info3312.html#homepage",
    "title": "Welcome to INFO 3312/5312",
    "section": "Homepage",
    "text": "Homepage\nhttps://info3312.infosci.cornell.edu/\n\nAll course materials\nLinks to Canvas, GitHub, RStudio Workbench, etc.\nLet’s take a tour!"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#course-toolkit",
    "href": "slides/01-welcome-info3312.html#course-toolkit",
    "title": "Welcome to INFO 3312/5312",
    "section": "Course toolkit",
    "text": "Course toolkit\nAll linked from the course website:\n\nGitHub organization: github.coecis.cornell.edu/info3312-s23\nRStudio Workbench: rstudio-workbench.infosci.cornell.edu\nCommunication: GitHub Discussions\nAssignment submission and feedback: Gradescope\n\n\n\n\n\n\n\nImportant\n\n\nMake sure you can access RStudio Workbench before lab on Friday."
  },
  {
    "objectID": "slides/01-welcome-info3312.html#activities-prepare-participate-perform",
    "href": "slides/01-welcome-info3312.html#activities-prepare-participate-perform",
    "title": "Welcome to INFO 3312/5312",
    "section": "Activities: Prepare, Participate, Perform",
    "text": "Activities: Prepare, Participate, Perform\n\n\nPrepare: Introduce new content and prepare for lectures by completing the readings\nParticipate: Attend and actively participate in lectures and labs, office hours, team meetings\nPerform: Put together what you’ve learned to analyze real-world data\n\nHomework assignments x 6(-ish) (individual)\nTwo team projects"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#teams",
    "href": "slides/01-welcome-info3312.html#teams",
    "title": "Welcome to INFO 3312/5312",
    "section": "Teams",
    "text": "Teams\n\nTeam assignments\n\nAssigned by course staff\nPeer evaluation after completion\n\nExpectations and roles\n\nEveryone is expected to contribute equal effort\nEveryone is expected to understand all code turned in\nIndividual contribution evaluated by peer evaluation, commits, etc."
  },
  {
    "objectID": "slides/01-welcome-info3312.html#grading",
    "href": "slides/01-welcome-info3312.html#grading",
    "title": "Welcome to INFO 3312/5312",
    "section": "Grading",
    "text": "Grading\n\n\n\nCategory\nPercentage\n\n\n\n\nHomework\n50%\n\n\nProject 1\n20%\n\n\nProject 2\n30%\n\n\n\nSee course syllabus for how the final letter grade will be determined."
  },
  {
    "objectID": "slides/01-welcome-info3312.html#info-5312",
    "href": "slides/01-welcome-info3312.html#info-5312",
    "title": "Welcome to INFO 3312/5312",
    "section": "INFO 5312",
    "text": "INFO 5312\nAdditional expectations:\n\nINFO 5312 homework will at times be graded against a more stringent rubric\nINFO 5312 students will be grouped together for all projects\nProject rubric line items will have more stringent criteria for INFO 5312 students\nINFO 5312 students will complete an additional individual project during the semester"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#info-5312-1",
    "href": "slides/01-welcome-info3312.html#info-5312-1",
    "title": "Welcome to INFO 3312/5312",
    "section": "INFO 5312",
    "text": "INFO 5312\n\n\n\nCategory\nPercentage\n\n\n\n\nHomework\n40%\n\n\nProject 1\n15%\n\n\nProject 2\n25%\n\n\nIndividual project\n20%"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#minute-rule",
    "href": "slides/01-welcome-info3312.html#minute-rule",
    "title": "Welcome to INFO 3312/5312",
    "section": "15 minute rule",
    "text": "15 minute rule"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#support",
    "href": "slides/01-welcome-info3312.html#support",
    "title": "Welcome to INFO 3312/5312",
    "section": "Support",
    "text": "Support\n\nAttend office hours\nAsk and answer questions on the discussion forum\nReserve email for questions on personal matters and/or grades\nRead the course support page"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#announcements",
    "href": "slides/01-welcome-info3312.html#announcements",
    "title": "Welcome to INFO 3312/5312",
    "section": "Announcements",
    "text": "Announcements\n\nPosted on Canvas (Announcements tool), be sure to check regularly (or forward announcements to your email)\nI’ll assume that you’ve read an announcement by the next “business” day"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#diversity-inclusion",
    "href": "slides/01-welcome-info3312.html#diversity-inclusion",
    "title": "Welcome to INFO 3312/5312",
    "section": "Diversity + inclusion",
    "text": "Diversity + inclusion\n\n\nI want you to feel like you belong in this class and are respected\nWe are committed to full inclusion in education for all persons\nIf you feel that we have failed these goals, please either let us know or report it, and we will address the issue"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#accessibility",
    "href": "slides/01-welcome-info3312.html#accessibility",
    "title": "Welcome to INFO 3312/5312",
    "section": "Accessibility",
    "text": "Accessibility\nI want this course to be accessible to students with all abilities. Please feel free to let me know if there are circumstances affecting your ability to participate in class.\n\nOffice of Student Disability Services\nCornell Health CAPS (Counseling & Psychological Services)\nUndocumented/DACA Student support"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#late-work-waivers-regrades-policy",
    "href": "slides/01-welcome-info3312.html#late-work-waivers-regrades-policy",
    "title": "Welcome to INFO 3312/5312",
    "section": "Late work, waivers, regrades policy",
    "text": "Late work, waivers, regrades policy\n\nWe have policies!\nRead about them on the course syllabus and refer back to them when you need it"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#collaboration-policy",
    "href": "slides/01-welcome-info3312.html#collaboration-policy",
    "title": "Welcome to INFO 3312/5312",
    "section": "Collaboration policy",
    "text": "Collaboration policy\n\nOnly work that is clearly assigned as team work should be completed collaboratively.\nHomeworks must be completed individually. You may not directly share answers / code with others, however you are welcome to discuss the problems in general and ask for advice."
  },
  {
    "objectID": "slides/01-welcome-info3312.html#sharing-reusing-code-policy",
    "href": "slides/01-welcome-info3312.html#sharing-reusing-code-policy",
    "title": "Welcome to INFO 3312/5312",
    "section": "Sharing / reusing code policy",
    "text": "Sharing / reusing code policy\n\nWe are aware that a huge volume of code is available on the web, and many tasks may have solutions posted\nUnless explicitly stated otherwise, this course’s policy is that you may make use of any online resources (e.g. RStudio Community, StackOverflow, etc.) but you must explicitly cite where you obtained any code you directly use or use as inspiration in your solution(s).\nAny recycled code that is discovered and is not explicitly cited will be treated as plagiarism, regardless of source.\nAll code must be written by you, the human being."
  },
  {
    "objectID": "slides/01-welcome-info3312.html#academic-integrity",
    "href": "slides/01-welcome-info3312.html#academic-integrity",
    "title": "Welcome to INFO 3312/5312",
    "section": "Academic integrity",
    "text": "Academic integrity\n\nA student shall in no way misrepresent his or her work.\nA student shall in no way fraudulently or unfairly advance his or her academic position.\nA student shall refuse to be a party to another student’s failure to maintain academic integrity.\nA student shall not in any other manner violate the principle of academic integrity.\n\n\n\nSource: Cornell University Code of Academic Integrity"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#most-importantly",
    "href": "slides/01-welcome-info3312.html#most-importantly",
    "title": "Welcome to INFO 3312/5312",
    "section": "Most importantly!",
    "text": "Most importantly!\nAsk if you’re not sure if something violates a policy!"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#this-weeks-tasks",
    "href": "slides/01-welcome-info3312.html#this-weeks-tasks",
    "title": "Welcome to INFO 3312/5312",
    "section": "This week’s tasks",
    "text": "This week’s tasks\n\nLog in to Cornell’s GitHub - you already have an account!\nRead the syllabus"
  },
  {
    "objectID": "slides/01-welcome-info3312.html#something-personal",
    "href": "slides/01-welcome-info3312.html#something-personal",
    "title": "Welcome to INFO 3312/5312",
    "section": "Something personal",
    "text": "Something personal\n\n\n\n\n\n\n\n\n🔗 info3312.infosci.cornell.edu"
  },
  {
    "objectID": "slides/04-geoms.html#announcements",
    "href": "slides/04-geoms.html#announcements",
    "title": "Deep dive: geoms",
    "section": "Announcements",
    "text": "Announcements\n\nHW 1 will be posted tomorrow\nPost questions on the discussion forum"
  },
  {
    "objectID": "slides/04-geoms.html#packages",
    "href": "slides/04-geoms.html#packages",
    "title": "Deep dive: geoms",
    "section": "Packages",
    "text": "Packages\n\n# load packages\nlibrary(tidyverse)\n# remotes::install_github(\"cis-ds/rcis\")\nlibrary(rcis)"
  },
  {
    "objectID": "slides/04-geoms.html#ggplot2-theme",
    "href": "slides/04-geoms.html#ggplot2-theme",
    "title": "Deep dive: geoms",
    "section": "ggplot2 theme",
    "text": "ggplot2 theme\n\n# set default theme for ggplot2\nggplot2::theme_set(ggplot2::theme_minimal(base_size = 14))"
  },
  {
    "objectID": "slides/04-geoms.html#figure-sizing",
    "href": "slides/04-geoms.html#figure-sizing",
    "title": "Deep dive: geoms",
    "section": "Figure sizing",
    "text": "Figure sizing\nFor more on including figures in Quarto documents with the right size, resolution, etc.\n\nR for Data Science - Figures\nUse the YAML header\n\nknitr:\n  opts_chunk:\n    fig.width: 7\n    fig.asp: 0.618\n    fig.retina: 2\n    dpi: 150\n    out.width: \"80%\""
  },
  {
    "objectID": "slides/04-geoms.html#data-prep-new-variables",
    "href": "slides/04-geoms.html#data-prep-new-variables",
    "title": "Deep dive: geoms",
    "section": "Data prep: new variables",
    "text": "Data prep: new variables\nFrom last class…\n\nscorecard <- scorecard |>\n  mutate(pctpell_cat = cut_interval(x = pctpell, n = 6)) |>\n  drop_na(pctpell_cat)\n\nscorecard |>\n  count(pctpell_cat)\n\n# A tibble: 6 × 2\n  pctpell_cat       n\n  <fct>         <int>\n1 [0,0.167]       169\n2 (0.167,0.333]   630\n3 (0.333,0.5]     609\n4 (0.5,0.667]     205\n5 (0.667,0.833]    73\n6 (0.833,1]        31"
  },
  {
    "objectID": "slides/04-geoms.html#data-prep-summary-table",
    "href": "slides/04-geoms.html#data-prep-summary-table",
    "title": "Deep dive: geoms",
    "section": "Data prep: summary table",
    "text": "Data prep: summary table\nFrom last class…\n\nmean_netcost_pctpell <- scorecard |>\n  group_by(pctpell_cat) |>\n  summarise(mean_netcost = mean(netcost, na.rm = TRUE))\n\nmean_netcost_pctpell\n\n# A tibble: 6 × 2\n  pctpell_cat   mean_netcost\n  <fct>                <dbl>\n1 [0,0.167]           29919.\n2 (0.167,0.333]       22579.\n3 (0.333,0.5]         19171.\n4 (0.5,0.667]         16966.\n5 (0.667,0.833]       15572.\n6 (0.833,1]           10138."
  },
  {
    "objectID": "slides/04-geoms.html#global-vs.-layer-specific-aesthetics",
    "href": "slides/04-geoms.html#global-vs.-layer-specific-aesthetics",
    "title": "Deep dive: geoms",
    "section": "Global vs. layer-specific aesthetics",
    "text": "Global vs. layer-specific aesthetics\n\nAesthetic mappings can be supplied in the initial ggplot() call, in individual layers, or in some combination of both.\nWithin each layer, you can add, override, or remove mappings.\nIf you only have one layer in the plot, the way you specify aesthetics doesn’t make any difference. However, the distinction is important when you start adding additional layers."
  },
  {
    "objectID": "slides/04-geoms.html#activity-spot-the-difference-i",
    "href": "slides/04-geoms.html#activity-spot-the-difference-i",
    "title": "Deep dive: geoms",
    "section": "Activity: Spot the difference I",
    "text": "Activity: Spot the difference I\n\nDo you expect the following plots to be the same or different? If different, how? Discuss in a pair (or group) without running the code and sketch the resulting plots based on what you think the code will produce.\n\n\n# Plot A\nggplot(scorecard, aes(x = avgfacsal, y = netcost, color = pctpell_cat)) +\n  geom_point(alpha = 0.7) +\n  geom_smooth(method = \"lm\", se = FALSE, size = 0.5)\n# Plot B\nggplot(scorecard, aes(x = avgfacsal, y = netcost)) +\n  geom_point(aes(color = pctpell_cat), alpha = 0.7) +\n  geom_smooth(method = \"lm\", se = FALSE, size = 0.5)\n\n\n\n\n−+\n02:00"
  },
  {
    "objectID": "slides/04-geoms.html#activity-spot-the-difference-ii",
    "href": "slides/04-geoms.html#activity-spot-the-difference-ii",
    "title": "Deep dive: geoms",
    "section": "Activity: Spot the difference II",
    "text": "Activity: Spot the difference II\n\nDo you expect the following plots to be the same or different? If different, how? Discuss in a pair (or group) without running the code and sketch the resulting plots based on what you think the code will produce.\n\n\n# Plot A\nggplot(scorecard, aes(x = avgfacsal, y = netcost)) +\n  geom_point(aes(color = pctpell_cat))\n\n\n# Plot B\nggplot(scorecard, aes(x = avgfacsal, y = netcost)) +\n  geom_point(color = \"blue\")\n\n\n# Plot C\nggplot(scorecard, aes(x = avgfacsal, y = netcost)) +\n  geom_point(color = \"#a493ba\")\n\n\n\n\n−+\n03:00"
  },
  {
    "objectID": "slides/04-geoms.html#geoms-1",
    "href": "slides/04-geoms.html#geoms-1",
    "title": "Deep dive: geoms",
    "section": "Geoms",
    "text": "Geoms\n\nGeometric objects, or geoms for short, perform the actual rendering of the layer, controlling the type of plot that you create\nYou can think of them as “the geometric shape used to represent the data”"
  },
  {
    "objectID": "slides/04-geoms.html#one-variable",
    "href": "slides/04-geoms.html#one-variable",
    "title": "Deep dive: geoms",
    "section": "One variable",
    "text": "One variable\n\nDiscrete:\n\ngeom_bar(): display distribution of discrete variable.\n\nContinuous\n\ngeom_histogram(): bin and count continuous variable, display with bars\ngeom_density(): smoothed density estimate\ngeom_dotplot(): stack individual points into a dot plot\ngeom_freqpoly(): bin and count continuous variable, display with lines"
  },
  {
    "objectID": "slides/04-geoms.html#aside",
    "href": "slides/04-geoms.html#aside",
    "title": "Deep dive: geoms",
    "section": "aside…",
    "text": "aside…\nAlways use “typewriter text” (monospace font) when writing function names, and follow with (), e.g.,\n\ngeom_freqpoly()\nmean()\nlm()"
  },
  {
    "objectID": "slides/04-geoms.html#geom_bar",
    "href": "slides/04-geoms.html#geom_bar",
    "title": "Deep dive: geoms",
    "section": "geom_bar()",
    "text": "geom_bar()\n\nggplot(scorecard, aes(x = pctpell_cat)) +\n  geom_bar()"
  },
  {
    "objectID": "slides/04-geoms.html#geom_bar-1",
    "href": "slides/04-geoms.html#geom_bar-1",
    "title": "Deep dive: geoms",
    "section": "geom_bar()",
    "text": "geom_bar()\n\nggplot(scorecard, aes(y = pctpell_cat)) +\n  geom_bar()"
  },
  {
    "objectID": "slides/04-geoms.html#geom_histogram",
    "href": "slides/04-geoms.html#geom_histogram",
    "title": "Deep dive: geoms",
    "section": "geom_histogram()",
    "text": "geom_histogram()\n\nggplot(scorecard, aes(x = netcost)) +\n  geom_histogram()"
  },
  {
    "objectID": "slides/04-geoms.html#geom_histogram-and-binwidth",
    "href": "slides/04-geoms.html#geom_histogram-and-binwidth",
    "title": "Deep dive: geoms",
    "section": "geom_histogram() and binwidth",
    "text": "geom_histogram() and binwidth\n\n2K5K10K20K\n\n\n\nggplot(scorecard, aes(x = netcost)) +\n  geom_histogram(binwidth = 2000)\n\n\n\n\n\n\n\n\n\n\n\nggplot(scorecard, aes(x = netcost)) +\n  geom_histogram(binwidth = 5000)\n\n\n\n\n\n\n\n\n\n\n\nggplot(scorecard, aes(x = netcost)) +\n  geom_histogram(binwidth = 10000)\n\n\n\n\n\n\n\n\n\n\n\nggplot(scorecard, aes(x = netcost)) +\n  geom_histogram(binwidth = 20000)"
  },
  {
    "objectID": "slides/04-geoms.html#geom_density",
    "href": "slides/04-geoms.html#geom_density",
    "title": "Deep dive: geoms",
    "section": "geom_density()",
    "text": "geom_density()\n\nggplot(scorecard, aes(x = netcost)) +\n  geom_density()"
  },
  {
    "objectID": "slides/04-geoms.html#geom_density-and-bandwidth-bw",
    "href": "slides/04-geoms.html#geom_density-and-bandwidth-bw",
    "title": "Deep dive: geoms",
    "section": "geom_density() and bandwidth (bw)",
    "text": "geom_density() and bandwidth (bw)\n\n11001,00010,000\n\n\n\nggplot(scorecard, aes(x = netcost)) +\n  geom_density(bw = 1)\n\n\n\n\n\n\n\n\n\n\n\nggplot(scorecard, aes(x = netcost)) +\n  geom_density(bw = 100)\n\n\n\n\n\n\n\n\n\n\n\nggplot(scorecard, aes(x = netcost)) +\n  geom_density(bw = 1000)\n\n\n\n\n\n\n\n\n\n\n\nggplot(scorecard, aes(x = netcost)) +\n  geom_density(bw = 10000)"
  },
  {
    "objectID": "slides/04-geoms.html#geom_density-outlines",
    "href": "slides/04-geoms.html#geom_density-outlines",
    "title": "Deep dive: geoms",
    "section": "geom_density() outlines",
    "text": "geom_density() outlines\n\nfullbothupperlower\n\n\n\nggplot(scorecard, aes(x = netcost)) +\n  geom_density(outline.type = \"full\")\n\n\n\n\n\n\n\n\n\n\n\nggplot(scorecard, aes(x = netcost)) +\n  geom_density(outline.type = \"both\")\n\n\n\n\n\n\n\n\n\n\n\nggplot(scorecard, aes(x = netcost)) +\n  geom_density(outline.type = \"upper\")\n\n\n\n\n\n\n\n\n\n\n\nggplot(scorecard, aes(x = netcost)) +\n  geom_density(outline.type = \"lower\")"
  },
  {
    "objectID": "slides/04-geoms.html#geom_dotplot",
    "href": "slides/04-geoms.html#geom_dotplot",
    "title": "Deep dive: geoms",
    "section": "geom_dotplot()",
    "text": "geom_dotplot()\n\nWhat does each point represent? How are their locations determined? What do the x and y axes represent?\n\n\nggplot(scorecard, aes(x = netcost)) +\n  geom_dotplot(binwidth = 418)\n\n\n\n\n\n−+\n02:00"
  },
  {
    "objectID": "slides/04-geoms.html#geom_freqpoly",
    "href": "slides/04-geoms.html#geom_freqpoly",
    "title": "Deep dive: geoms",
    "section": "geom_freqpoly()",
    "text": "geom_freqpoly()\n\nggplot(scorecard, aes(x = netcost)) +\n  geom_freqpoly(binwidth = 1000)"
  },
  {
    "objectID": "slides/04-geoms.html#geom_freqpoly-for-comparisons",
    "href": "slides/04-geoms.html#geom_freqpoly-for-comparisons",
    "title": "Deep dive: geoms",
    "section": "geom_freqpoly() for comparisons",
    "text": "geom_freqpoly() for comparisons\n\nHistogramFrequency polygon\n\n\n\nggplot(scorecard, aes(x = netcost, fill = pctpell_cat)) +\n  geom_histogram(binwidth = 5000)\n\n\n\n\n\n\n\n\n\n\n\nggplot(scorecard, aes(x = netcost, color = pctpell_cat)) +\n  geom_freqpoly(binwidth = 5000, size = 1)"
  },
  {
    "objectID": "slides/04-geoms.html#two-variables---both-continuous",
    "href": "slides/04-geoms.html#two-variables---both-continuous",
    "title": "Deep dive: geoms",
    "section": "Two variables - both continuous",
    "text": "Two variables - both continuous\n\ngeom_point(): scatterplot\ngeom_quantile(): smoothed quantile regression\ngeom_rug(): marginal rug plots\ngeom_smooth(): smoothed line of best fit\ngeom_text(): text labels"
  },
  {
    "objectID": "slides/04-geoms.html#geom_rug",
    "href": "slides/04-geoms.html#geom_rug",
    "title": "Deep dive: geoms",
    "section": "geom_rug()",
    "text": "geom_rug()\n\nggplot(scorecard, aes(x = avgfacsal, y = netcost)) +\n  geom_point() +\n  geom_rug(alpha = 0.1)"
  },
  {
    "objectID": "slides/04-geoms.html#geom_rug-on-the-outside",
    "href": "slides/04-geoms.html#geom_rug-on-the-outside",
    "title": "Deep dive: geoms",
    "section": "geom_rug() on the outside",
    "text": "geom_rug() on the outside\n\nggplot(scorecard, aes(x = avgfacsal, y = netcost)) +\n  geom_point() +\n  geom_rug(alpha = 0.1, outside = TRUE) +\n  coord_cartesian(clip = \"off\")"
  },
  {
    "objectID": "slides/04-geoms.html#geom_rug-on-the-outside-but-better",
    "href": "slides/04-geoms.html#geom_rug-on-the-outside-but-better",
    "title": "Deep dive: geoms",
    "section": "geom_rug() on the outside, but better",
    "text": "geom_rug() on the outside, but better\n\nggplot(scorecard, aes(x = avgfacsal, y = netcost)) +\n  geom_point() +\n  geom_rug(alpha = 0.1, outside = TRUE, sides = \"tr\") +\n  coord_cartesian(clip = \"off\") +\n  theme(plot.margin = margin(1, 1, 1, 1, \"cm\"))"
  },
  {
    "objectID": "slides/04-geoms.html#geom_text",
    "href": "slides/04-geoms.html#geom_text",
    "title": "Deep dive: geoms",
    "section": "geom_text()",
    "text": "geom_text()\n\nscorecard_samp <- sample_n(scorecard, size = 50) # for viz purposes\n\nggplot(scorecard_samp, aes(x = avgfacsal, y = netcost)) +\n  geom_text(aes(label = type))"
  },
  {
    "objectID": "slides/04-geoms.html#geom_text-and-more",
    "href": "slides/04-geoms.html#geom_text-and-more",
    "title": "Deep dive: geoms",
    "section": "geom_text() and more",
    "text": "geom_text() and more\n\nggplot(scorecard_samp, aes(x = avgfacsal, y = netcost)) +\n  geom_text(aes(label = type, color = type))"
  },
  {
    "objectID": "slides/04-geoms.html#geom_text-and-even-more",
    "href": "slides/04-geoms.html#geom_text-and-even-more",
    "title": "Deep dive: geoms",
    "section": "geom_text() and even more",
    "text": "geom_text() and even more\n\nggplot(scorecard_samp, aes(x = avgfacsal, y = netcost)) +\n  geom_text(aes(label = type, color = type),\n    show.legend = FALSE\n  )"
  },
  {
    "objectID": "slides/04-geoms.html#two-variables---show-distribution",
    "href": "slides/04-geoms.html#two-variables---show-distribution",
    "title": "Deep dive: geoms",
    "section": "Two variables - show distribution",
    "text": "Two variables - show distribution\n\ngeom_bin2d(): bin into rectangles and count\ngeom_density2d(): smoothed 2d density estimate\ngeom_hex(): bin into hexagons and count"
  },
  {
    "objectID": "slides/04-geoms.html#geom_hex",
    "href": "slides/04-geoms.html#geom_hex",
    "title": "Deep dive: geoms",
    "section": "geom_hex()",
    "text": "geom_hex()\n\nggplot(scorecard, aes(x = avgfacsal, y = netcost)) +\n  geom_hex()"
  },
  {
    "objectID": "slides/04-geoms.html#geom_hex-and-warnings",
    "href": "slides/04-geoms.html#geom_hex-and-warnings",
    "title": "Deep dive: geoms",
    "section": "geom_hex() and warnings",
    "text": "geom_hex() and warnings\n\nRequires installing the hexbin package separately!\n\n\ninstall.packages(\"hexbin\")\n\n\nOtherwise you might see\n\nWarning: Computation failed in `stat_binhex()`"
  },
  {
    "objectID": "slides/04-geoms.html#two-variables",
    "href": "slides/04-geoms.html#two-variables",
    "title": "Deep dive: geoms",
    "section": "Two variables",
    "text": "Two variables\n\nAt least one discrete\n\ngeom_count(): count number of point at distinct locations\ngeom_jitter(): randomly jitter overlapping points\n\nOne continuous, one discrete\n\ngeom_col(): a bar chart of pre-computed summaries\ngeom_boxplot(): boxplots\ngeom_violin(): show density of values in each group"
  },
  {
    "objectID": "slides/04-geoms.html#geom_jitter",
    "href": "slides/04-geoms.html#geom_jitter",
    "title": "Deep dive: geoms",
    "section": "geom_jitter()",
    "text": "geom_jitter()\n\nHow are the following three plots different?\n\n\nPlot APlot BPlot C\n\n\n\nggplot(scorecard, aes(x = type, y = netcost)) +\n  geom_point()\n\n\n\n\n\n\n\n\n\n\n\nggplot(scorecard, aes(x = type, y = netcost)) +\n  geom_jitter()\n\n\n\n\n\n\n\n\n\n\n\nggplot(scorecard, aes(x = type, y = netcost)) +\n  geom_jitter()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n−+\n03:00"
  },
  {
    "objectID": "slides/04-geoms.html#geom_jitter-and-set.seed",
    "href": "slides/04-geoms.html#geom_jitter-and-set.seed",
    "title": "Deep dive: geoms",
    "section": "geom_jitter() and set.seed()",
    "text": "geom_jitter() and set.seed()\n\nPlot APlot BPlot C\n\n\n\nset.seed(123)\nggplot(scorecard, aes(x = type, y = netcost)) +\n  geom_jitter()\n\n\n\n\n\n\n\n\n\n\n\nset.seed(123)\nggplot(scorecard, aes(x = type, y = netcost)) +\n  geom_jitter()\n\n\n\n\n\n\n\n\n\n\n\nset.seed(234)\nggplot(scorecard, aes(x = type, y = netcost)) +\n  geom_jitter()"
  },
  {
    "objectID": "slides/04-geoms.html#two-variables-1",
    "href": "slides/04-geoms.html#two-variables-1",
    "title": "Deep dive: geoms",
    "section": "Two variables",
    "text": "Two variables\n\nOne time, one continuous\n\ngeom_area(): area plot\ngeom_line(): line plot\ngeom_step(): step plot\n\nDisplay uncertainty:\n\ngeom_crossbar(): vertical bar with center\ngeom_errorbar(): error bars\ngeom_linerange(): vertical line\ngeom_pointrange(): vertical line with center\n\nSpatial\n\ngeom_sf(): for map data (more on this later…)"
  },
  {
    "objectID": "slides/04-geoms.html#average-net-cost-per-pell-grant-recipient",
    "href": "slides/04-geoms.html#average-net-cost-per-pell-grant-recipient",
    "title": "Deep dive: geoms",
    "section": "Average net cost per Pell grant recipient",
    "text": "Average net cost per Pell grant recipient\n\nmean_netcost_pctpell <- scorecard |>\n  mutate(pctpell = round(pctpell, digits = 2)) |>\n  group_by(pctpell) |>\n  summarise(\n    n = n(),\n    mean_netcost = mean(netcost),\n    sd_netcost = sd(netcost)\n  ) |>\n  drop_na(mean_netcost)\n\nmean_netcost_pctpell\n\n# A tibble: 67 × 4\n   pctpell     n mean_netcost sd_netcost\n     <dbl> <int>        <dbl>      <dbl>\n 1    0.08     2        8334       2493.\n 2    0.09     5       34389.      3211.\n 3    0.1      9       35855.      8615.\n 4    0.11    17       29528.      8323.\n 5    0.12    15       32092.      9152.\n 6    0.13    18       31172.      6811.\n 7    0.14    27       28900.      7628.\n 8    0.17    29       27933.     11449.\n 9    0.18    25       24109.      9916.\n10    0.19    36       25109.      8936.\n# … with 57 more rows"
  },
  {
    "objectID": "slides/04-geoms.html#geom_line",
    "href": "slides/04-geoms.html#geom_line",
    "title": "Deep dive: geoms",
    "section": "geom_line()",
    "text": "geom_line()\n\nggplot(mean_netcost_pctpell, aes(x = pctpell, y = mean_netcost)) +\n  geom_line()"
  },
  {
    "objectID": "slides/04-geoms.html#geom_area",
    "href": "slides/04-geoms.html#geom_area",
    "title": "Deep dive: geoms",
    "section": "geom_area()",
    "text": "geom_area()\n\nggplot(mean_netcost_pctpell, aes(x = pctpell, y = mean_netcost)) +\n  geom_area()"
  },
  {
    "objectID": "slides/04-geoms.html#geom_step",
    "href": "slides/04-geoms.html#geom_step",
    "title": "Deep dive: geoms",
    "section": "geom_step()",
    "text": "geom_step()\n\nggplot(mean_netcost_pctpell, aes(x = pctpell, y = mean_netcost)) +\n  geom_step()"
  },
  {
    "objectID": "slides/04-geoms.html#geom_errorbar",
    "href": "slides/04-geoms.html#geom_errorbar",
    "title": "Deep dive: geoms",
    "section": "geom_errorbar()",
    "text": "geom_errorbar()\n\nDescribe how this plot is constructed and what the points and the lines (error bars) correspond to.\n\n\nCodePlot\n\n\n\nggplot(mean_netcost_pctpell, aes(x = pctpell, y = mean_netcost)) +\n  geom_point() +\n  geom_errorbar(aes(\n    ymin = mean_netcost - sd_netcost,\n    ymax = mean_netcost + sd_netcost\n  ))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n−+\n03:00"
  },
  {
    "objectID": "slides/04-geoms.html#lets-clean-things-up-a-bit",
    "href": "slides/04-geoms.html#lets-clean-things-up-a-bit",
    "title": "Deep dive: geoms",
    "section": "Let’s clean things up a bit!",
    "text": "Let’s clean things up a bit!\nMeet your new best friend, the scales package!\n\nlibrary(scales)"
  },
  {
    "objectID": "slides/04-geoms.html#lets-clean-things-up-a-bit-1",
    "href": "slides/04-geoms.html#lets-clean-things-up-a-bit-1",
    "title": "Deep dive: geoms",
    "section": "Let’s clean things up a bit!",
    "text": "Let’s clean things up a bit!\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(scorecard, aes(x = avgfacsal, y = netcost)) +\n  geom_point(alpha = 0.4, size = 2, color = \"#012169\") +\n  scale_x_continuous(labels = label_number(big.mark = \",\")) +\n  scale_y_continuous(labels = label_dollar()) +\n  labs(\n    x = \"Average faculty salary (USD)\",\n    y = \"Net cost of attendance (USD)\",\n    title = \"Faculty salaries and net cost of attendance in US universities\",\n    subtitle = \"2020-21\",\n    caption = \"Source: College Scorecard\"\n  )"
  },
  {
    "objectID": "slides/04-geoms.html#three-variables",
    "href": "slides/04-geoms.html#three-variables",
    "title": "Deep dive: geoms",
    "section": "Three variables",
    "text": "Three variables\n\ngeom_tile(): tile the plane with rectangles\ngeom_raster(): fast version of geom_tile() for equal sized tiles"
  },
  {
    "objectID": "slides/04-geoms.html#geom_tile",
    "href": "slides/04-geoms.html#geom_tile",
    "title": "Deep dive: geoms",
    "section": "geom_tile()",
    "text": "geom_tile()\n\nggplot(scorecard, aes(x = type, y = locale)) +\n geom_tile(aes(fill = netcost))"
  },
  {
    "objectID": "slides/04-geoms.html#another-look-at-smooth-ish-surface",
    "href": "slides/04-geoms.html#another-look-at-smooth-ish-surface",
    "title": "Deep dive: geoms",
    "section": "Another look at smooth-ish surface",
    "text": "Another look at smooth-ish surface\n\nSummarizePlot\n\n\n\nmean_netcost_type_locale <- scorecard |>\n  group_by(type, locale) |>\n  summarize(mean_netcost = mean(netcost, na.rm = TRUE), .groups = \"drop\")\n\nmean_netcost_type_locale\n\n# A tibble: 12 × 3\n   type                locale mean_netcost\n   <fct>               <fct>         <dbl>\n 1 Public              City         14007.\n 2 Public              Suburb       15946.\n 3 Public              Town         14692.\n 4 Public              Rural        13390.\n 5 Public              <NA>          7999 \n 6 Private, nonprofit  City         24485.\n 7 Private, nonprofit  Suburb       23018.\n 8 Private, nonprofit  Town         21785.\n 9 Private, nonprofit  Rural        22533.\n10 Private, for-profit City         28005.\n11 Private, for-profit Suburb       25778.\n12 Private, for-profit Town         13370.\n\n\n\n\n\nggplot(mean_netcost_type_locale, aes(x = type, y = locale)) +\n  geom_point(aes(color = mean_netcost), size = 30, pch = \"square\")"
  },
  {
    "objectID": "slides/04-geoms.html#activity-pick-a-geom",
    "href": "slides/04-geoms.html#activity-pick-a-geom",
    "title": "Deep dive: geoms",
    "section": "Activity: Pick a geom",
    "text": "Activity: Pick a geom\n\nFor each of the following problems, suggest a useful geom:\n\nDisplay how the value of variable has changed over time\nShow the detailed distribution of a single continuous variable\nFocus attention on the overall relationship between two variables in a large dataset\nLabel outlying points in a single variable\n\n\n\n\n\n−+\n03:00\n\n\n\n\n\n\n🔗 info3312.infosci.cornell.edu"
  },
  {
    "objectID": "slides/05-stats-scales-guides.html#project-1-1",
    "href": "slides/05-stats-scales-guides.html#project-1-1",
    "title": "Deep dive: stats + scales + guides",
    "section": "Project #1",
    "text": "Project #1\n\nProject description\nTeam assignments on Thursday\nDeliverables\n\nFebruary 16 - proposals for peer review\nFebruary 20 - revised proposals for instructor review\nMarch 3 - write-up and presentation"
  },
  {
    "objectID": "slides/05-stats-scales-guides.html#packages-figures",
    "href": "slides/05-stats-scales-guides.html#packages-figures",
    "title": "Deep dive: stats + scales + guides",
    "section": "Packages + figures",
    "text": "Packages + figures\n\n# load packages\nlibrary(tidyverse)\nlibrary(rcis)\n\n# set default theme for ggplot2\nggplot2::theme_set(ggplot2::theme_minimal(base_size = 14))\n\nYAML options\nknitr:\n  opts_chunk:\n    fig.width: 7\n    fig.asp: 0.618\n    fig.retina: 2\n    dpi: 150\n    out.width: \"80%\""
  },
  {
    "objectID": "slides/05-stats-scales-guides.html#scorecard",
    "href": "slides/05-stats-scales-guides.html#scorecard",
    "title": "Deep dive: stats + scales + guides",
    "section": "scorecard",
    "text": "scorecard\n\nglimpse(scorecard)\n\nRows: 1,721\nColumns: 14\n$ unitid    <dbl> 100654, 100663, 100706, 100724, 100751, 100830, 100858, 1009…\n$ name      <chr> \"Alabama A & M University\", \"University of Alabama at Birmin…\n$ state     <chr> \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", …\n$ type      <fct> \"Public\", \"Public\", \"Public\", \"Public\", \"Public\", \"Public\", …\n$ admrate   <dbl> 0.8965, 0.8060, 0.7711, 0.9888, 0.8039, 0.9555, 0.8507, 0.60…\n$ satavg    <dbl> 959, 1245, 1300, 938, 1262, 1061, 1302, 1202, 1068, NA, 1101…\n$ cost      <dbl> 23445, 25542, 24861, 21892, 30016, 20225, 32196, 32514, 3483…\n$ netcost   <dbl> 15529, 16530, 17208, 19534, 20917, 13678, 24018, 19808, 2050…\n$ avgfacsal <dbl> 68391, 102420, 87273, 64746, 93141, 69561, 96498, 62649, 533…\n$ pctpell   <dbl> 0.7095, 0.3397, 0.2403, 0.7368, 0.1718, 0.4654, 0.1343, 0.22…\n$ comprate  <dbl> 0.2866, 0.6117, 0.5714, 0.3177, 0.7214, 0.3040, 0.7870, 0.70…\n$ firstgen  <dbl> 0.3658281, 0.3412237, 0.3101322, 0.3434343, 0.2257127, 0.381…\n$ debt      <dbl> 15250, 15085, 14000, 17500, 17671, 12000, 17500, 16000, 1425…\n$ locale    <fct> City, City, City, City, City, City, City, City, City, Suburb…"
  },
  {
    "objectID": "slides/05-stats-scales-guides.html#stats-geoms",
    "href": "slides/05-stats-scales-guides.html#stats-geoms",
    "title": "Deep dive: stats + scales + guides",
    "section": "Stats < > geoms",
    "text": "Stats < > geoms\n\nStatistical transformation (stat) transforms the data, typically by summarizing\nMany of ggplot2’s stats are used behind the scenes to generate many important geoms\n\n\n\n\n\n\n\n\nstat\ngeom\n\n\n\n\nstat_bin()\ngeom_bar(), geom_freqpoly(), geom_histogram()\n\n\nstat_bin2d()\ngeom_bin2d()\n\n\nstat_bindot()\ngeom_dotplot()\n\n\nstat_binhex()\ngeom_hex()\n\n\nstat_boxplot()\ngeom_boxplot()\n\n\nstat_contour()\ngeom_contour()\n\n\nstat_quantile()\ngeom_quantile()\n\n\nstat_smooth()\ngeom_smooth()\n\n\nstat_sum()\ngeom_count()"
  },
  {
    "objectID": "slides/05-stats-scales-guides.html#stat_boxplot",
    "href": "slides/05-stats-scales-guides.html#stat_boxplot",
    "title": "Deep dive: stats + scales + guides",
    "section": "stat_boxplot()",
    "text": "stat_boxplot()"
  },
  {
    "objectID": "slides/05-stats-scales-guides.html#layering-with-stats",
    "href": "slides/05-stats-scales-guides.html#layering-with-stats",
    "title": "Deep dive: stats + scales + guides",
    "section": "Layering with stats",
    "text": "Layering with stats\n\nggplot(scorecard, aes(x = type, y = avgfacsal)) +\n  geom_point(alpha = 0.5) +\n  stat_summary(geom = \"point\", fun = \"median\", color = \"red\", size = 5, pch = 4, stroke = 2)"
  },
  {
    "objectID": "slides/05-stats-scales-guides.html#alternate-layering-with-stats",
    "href": "slides/05-stats-scales-guides.html#alternate-layering-with-stats",
    "title": "Deep dive: stats + scales + guides",
    "section": "Alternate: layering with stats",
    "text": "Alternate: layering with stats\n\nggplot(scorecard, aes(x = type, y = avgfacsal)) +\n  geom_point(alpha = 0.5) +\n  geom_point(stat = \"summary\", fun = \"median\", color = \"red\", size = 5, pch = 4, stroke = 2)"
  },
  {
    "objectID": "slides/05-stats-scales-guides.html#statistical-transformations",
    "href": "slides/05-stats-scales-guides.html#statistical-transformations",
    "title": "Deep dive: stats + scales + guides",
    "section": "Statistical transformations",
    "text": "Statistical transformations\n\nWhat can you say about the distribution of average faculty salaries from the following QQ plot?\n\n\n\nggplot(scorecard, aes(sample = avgfacsal)) +\n  stat_qq() +\n  stat_qq_line() +\n  labs(y = \"avgfacsal\")"
  },
  {
    "objectID": "slides/05-stats-scales-guides.html#what-is-a-scale",
    "href": "slides/05-stats-scales-guides.html#what-is-a-scale",
    "title": "Deep dive: stats + scales + guides",
    "section": "What is a scale?",
    "text": "What is a scale?\n\nEach scale is a function from a region in data space (the domain of the scale) to a region in aesthetic space (the range of the scale)\nThe axis or legend is the inverse function: it allows you to convert visual properties back to data"
  },
  {
    "objectID": "slides/05-stats-scales-guides.html#scale-specification",
    "href": "slides/05-stats-scales-guides.html#scale-specification",
    "title": "Deep dive: stats + scales + guides",
    "section": "Scale specification",
    "text": "Scale specification\nEvery aesthetic in your plot is associated with exactly one scale:\n\nCodePlot\n\n\n\n# automatic scales\nggplot(scorecard, aes(x = pctpell, y = avgfacsal, color = type)) +\n  geom_point(alpha = 0.8)\n# manual scales\nggplot(scorecard, aes(x = pctpell, y = avgfacsal, color = type)) +\n  geom_point(alpha = 0.8) +\n  scale_x_continuous() +\n  scale_y_continuous() +\n  scale_color_ordinal()"
  },
  {
    "objectID": "slides/05-stats-scales-guides.html#anatomy-of-a-scale-function",
    "href": "slides/05-stats-scales-guides.html#anatomy-of-a-scale-function",
    "title": "Deep dive: stats + scales + guides",
    "section": "Anatomy of a scale function",
    "text": "Anatomy of a scale function\n\nscale_A_B()\n\n\nAlways starts with scale\nA: Name of the primary aesthetic (e.g., color, shape, x)\nB: Name of the scale (e.g., continuous, discrete, brewer)"
  },
  {
    "objectID": "slides/05-stats-scales-guides.html#guess-the-output",
    "href": "slides/05-stats-scales-guides.html#guess-the-output",
    "title": "Deep dive: stats + scales + guides",
    "section": "Guess the output",
    "text": "Guess the output\n\nWhat will the x-axis label of the following plot say?\n\n\nggplot(scorecard, aes(x = pctpell, y = avgfacsal, color = type)) +\n  geom_point(alpha = 0.8) +\n  scale_x_continuous(name = \"pctpell\") +\n  scale_x_continuous(name = \"Percent of students receiving a Pell grant\")\n\n\n\n\n−+\n01:00"
  },
  {
    "objectID": "slides/05-stats-scales-guides.html#address-messages",
    "href": "slides/05-stats-scales-guides.html#address-messages",
    "title": "Deep dive: stats + scales + guides",
    "section": "“Address” messages",
    "text": "“Address” messages\n\n\nggplot(scorecard, aes(x = pctpell, y = avgfacsal, color = type)) +\n  geom_point(alpha = 0.8) +\n  scale_x_continuous(name = \"pctpell\") +\n  scale_x_continuous(name = \"Percent of students receiving a Pell grant\")\n\n\nScale for x is already present.\nAdding another scale for x, which will replace the existing scale."
  },
  {
    "objectID": "slides/05-stats-scales-guides.html#guess-the-output-1",
    "href": "slides/05-stats-scales-guides.html#guess-the-output-1",
    "title": "Deep dive: stats + scales + guides",
    "section": "Guess the output",
    "text": "Guess the output\n\nWhat happens if you pair a discrete variable with a continuous scale? What happens if you pair a continuous variable with a discrete scale? Answer in the context of the following plots.\n\n\nPlotsResults\n\n\n\n\n\nggplot(\n  data = scorecard,\n  mapping = aes(\n    x = type,\n    y = avgfacsal\n  )\n) +\n  geom_point(alpha = 0.5) +\n  scale_x_continuous()\n\n\n\nggplot(\n  data = scorecard,\n  mapping = aes(\n    x = type,\n    y = avgfacsal\n  )\n) +\n  geom_point(alpha = 0.5) +\n  scale_y_discrete()\n\n\n\n\n\n\n\n\n\nError: Discrete value supplied to continuous scale\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n−+\n03:00"
  },
  {
    "objectID": "slides/05-stats-scales-guides.html#transformations",
    "href": "slides/05-stats-scales-guides.html#transformations",
    "title": "Deep dive: stats + scales + guides",
    "section": "Transformations",
    "text": "Transformations\nWhen working with continuous data, the default is to map linearly from the data space onto the aesthetic space, but this scale can be transformed\n\nLinearTransformed\n\n\n\n\nggplot(\n  scorecard,\n  aes(x = pctpell, y = avgfacsal)\n) +\n  geom_point(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(\n  scorecard,\n  aes(x = pctpell, y = avgfacsal)\n) +\n  geom_point(alpha = 0.5) +\n  scale_y_continuous(trans = \"log10\")"
  },
  {
    "objectID": "slides/05-stats-scales-guides.html#continuous-scale-transformations",
    "href": "slides/05-stats-scales-guides.html#continuous-scale-transformations",
    "title": "Deep dive: stats + scales + guides",
    "section": "Continuous scale transformations",
    "text": "Continuous scale transformations\n\n\n\nName\nFunction \\(f(x)\\)\nInverse \\(f^{-1}(y)\\)\n\n\n\n\nasn\n\\(\\tanh^{-1}(x)\\)\n\\(\\tanh(y)\\)\n\n\nexp\n\\(e ^ x\\)\n\\(\\log(y)\\)\n\n\nidentity\n\\(x\\)\n\\(y\\)\n\n\nlog\n\\(\\log(x)\\)\n\\(e ^ y\\)\n\n\nlog10\n\\(\\log_{10}(x)\\)\n\\(10 ^ y\\)\n\n\nlog2\n\\(\\log_2(x)\\)\n\\(2 ^ y\\)\n\n\nlogit\n\\(\\log(\\frac{x}{1 - x})\\)\n\\(\\frac{1}{1 + e(y)}\\)\n\n\npow10\n\\(10^x\\)\n\\(\\log_{10}(y)\\)\n\n\nprobit\n\\(\\Phi(x)\\)\n\\(\\Phi^{-1}(y)\\)\n\n\nreciprocal\n\\(x^{-1}\\)\n\\(y^{-1}\\)\n\n\nreverse\n\\(-x\\)\n\\(-y\\)\n\n\nsqrt\n\\(x^{1/2}\\)\n\\(y ^ 2\\)"
  },
  {
    "objectID": "slides/05-stats-scales-guides.html#convenience-functions-for-transformations",
    "href": "slides/05-stats-scales-guides.html#convenience-functions-for-transformations",
    "title": "Deep dive: stats + scales + guides",
    "section": "Convenience functions for transformations",
    "text": "Convenience functions for transformations\n\n\n\nggplot(\n  scorecard,\n  aes(x = pctpell, y = avgfacsal)\n) +\n  geom_point(alpha = 0.5) +\n  scale_y_continuous(trans = \"log10\")\n\n\n\n\n\n\n\n\n\n\nggplot(\n  scorecard,\n  aes(x = pctpell, y = avgfacsal)\n) +\n  geom_point(alpha = 0.5) +\n  scale_y_log10()"
  },
  {
    "objectID": "slides/05-stats-scales-guides.html#scale-transform-vs.-data-transform",
    "href": "slides/05-stats-scales-guides.html#scale-transform-vs.-data-transform",
    "title": "Deep dive: stats + scales + guides",
    "section": "Scale transform vs. data transform",
    "text": "Scale transform vs. data transform\n\nHow are the following two plots different, how are they similar? What does this say about how scale transformations work.\n\n\nPlot APlot B\n\n\n\n\nscorecard |>\n  mutate(avgfacsal_log10 = log(avgfacsal, base = 10)) |>\n  ggplot(aes(\n    x = pctpell,\n    y = avgfacsal_log10\n  )) +\n  geom_point(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(\n  scorecard,\n  aes(x = pctpell, y = avgfacsal)\n) +\n  geom_point(alpha = 0.5) +\n  scale_y_log10()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n−+\n02:00"
  },
  {
    "objectID": "slides/05-stats-scales-guides.html#what-is-a-guide",
    "href": "slides/05-stats-scales-guides.html#what-is-a-guide",
    "title": "Deep dive: stats + scales + guides",
    "section": "What is a guide?",
    "text": "What is a guide?\nGuides are legends and axes:\n\n\nSource: ggplot2: Elegant Graphics for Data Analysis, Chp 15."
  },
  {
    "objectID": "slides/05-stats-scales-guides.html#customizing-axes",
    "href": "slides/05-stats-scales-guides.html#customizing-axes",
    "title": "Deep dive: stats + scales + guides",
    "section": "Customizing axes",
    "text": "Customizing axes\n\nggplot(scorecard, aes(x = netcost, y = avgfacsal)) +\n  geom_point(alpha = 0.5) +\n  scale_x_continuous(\n    name = \"Net cost of attendance\"\n  )"
  },
  {
    "objectID": "slides/05-stats-scales-guides.html#customizing-axes-1",
    "href": "slides/05-stats-scales-guides.html#customizing-axes-1",
    "title": "Deep dive: stats + scales + guides",
    "section": "Customizing axes",
    "text": "Customizing axes\n\nWhy does 60000 not appear on the x-axis?\n\n\n\nggplot(scorecard, aes(x = netcost, y = avgfacsal)) +\n  geom_point(alpha = 0.5) +\n  scale_x_continuous(\n    name = \"Net cost of attendance\",\n    breaks = seq(from = 0, to = 60000, by = 10000)\n  )"
  },
  {
    "objectID": "slides/05-stats-scales-guides.html#customizing-axes-2",
    "href": "slides/05-stats-scales-guides.html#customizing-axes-2",
    "title": "Deep dive: stats + scales + guides",
    "section": "Customizing axes",
    "text": "Customizing axes\n\n\nggplot(scorecard, aes(x = netcost, y = avgfacsal)) +\n  geom_point(alpha = 0.5) +\n  scale_x_continuous(\n    name = \"Net cost of attendance\",\n    breaks = seq(from = 0, to = 60000, by = 10000),\n    limits = c(0, 60000)\n  )"
  },
  {
    "objectID": "slides/05-stats-scales-guides.html#customizing-axes-3",
    "href": "slides/05-stats-scales-guides.html#customizing-axes-3",
    "title": "Deep dive: stats + scales + guides",
    "section": "Customizing axes",
    "text": "Customizing axes\n\n\nggplot(scorecard, aes(x = netcost, y = avgfacsal)) +\n  geom_point(alpha = 0.5) +\n  scale_x_continuous(\n    name = \"Net cost of attendance\",\n    breaks = seq(from = 0, to = 60000, by = 10000),\n    limits = c(0, 60000),\n    labels = c(\"$0\", \"$10,000\", \"$20,000\", \"$30,000\", \"$40,000\", \"$50,000\", \"$60,000\")\n  )"
  },
  {
    "objectID": "slides/05-stats-scales-guides.html#customizing-axes-4",
    "href": "slides/05-stats-scales-guides.html#customizing-axes-4",
    "title": "Deep dive: stats + scales + guides",
    "section": "Customizing axes",
    "text": "Customizing axes\n\n\nlibrary(scales)\n\nggplot(scorecard, aes(x = netcost, y = avgfacsal)) +\n  geom_point(alpha = 0.5) +\n  scale_x_continuous(\n    name = \"Net cost of attendance\",\n    breaks = seq(from = 0, to = 60000, by = 10000),\n    limits = c(0, 60000),\n    labels = label_dollar()\n  )"
  },
  {
    "objectID": "slides/05-stats-scales-guides.html#customizing-axes-5",
    "href": "slides/05-stats-scales-guides.html#customizing-axes-5",
    "title": "Deep dive: stats + scales + guides",
    "section": "Customizing axes",
    "text": "Customizing axes\n\n\nggplot(scorecard, aes(x = netcost, y = avgfacsal)) +\n  geom_point(alpha = 0.5) +\n  scale_x_continuous(\n    name = \"Net cost of attendance\",\n    breaks = seq(from = 0, to = 60000, by = 10000),\n    limits = c(0, 60000),\n    labels = label_dollar(scale_cut = cut_short_scale())\n  )"
  },
  {
    "objectID": "slides/05-stats-scales-guides.html#customizing-axes-6",
    "href": "slides/05-stats-scales-guides.html#customizing-axes-6",
    "title": "Deep dive: stats + scales + guides",
    "section": "Customizing axes",
    "text": "Customizing axes\n\n\nggplot(scorecard, aes(x = netcost, y = avgfacsal)) +\n  geom_point(alpha = 0.5) +\n  scale_x_continuous(\n    name = \"Net cost of attendance\",\n    breaks = seq(from = 0, to = 60000, by = 10000),\n    limits = c(0, 60000),\n    labels = label_dollar(scale_cut = cut_short_scale())\n  ) +\n  scale_y_continuous(\n    name = \"Average faculty salary (USD)\",\n    labels = label_dollar(scale_cut = cut_short_scale())\n  )"
  },
  {
    "objectID": "slides/05-stats-scales-guides.html#aside-storing-a-plot",
    "href": "slides/05-stats-scales-guides.html#aside-storing-a-plot",
    "title": "Deep dive: stats + scales + guides",
    "section": "Aside: storing a plot",
    "text": "Aside: storing a plot\n\n\nset.seed(123)\n\np_pctpell_avgfacsal_type <- ggplot(\n  scorecard,\n  aes(x = pctpell, y = avgfacsal)\n) +\n  geom_jitter(\n    aes(\n      color = type,\n      shape = type\n    ),\n    size = 2\n  )\np_pctpell_avgfacsal_type"
  },
  {
    "objectID": "slides/05-stats-scales-guides.html#customizing-axis-and-legend-labels-with-scale_",
    "href": "slides/05-stats-scales-guides.html#customizing-axis-and-legend-labels-with-scale_",
    "title": "Deep dive: stats + scales + guides",
    "section": "Customizing axis and legend labels with scale_*()",
    "text": "Customizing axis and legend labels with scale_*()\n\n\np_pctpell_avgfacsal_type +\n  scale_x_continuous(name = \"Percent of students receiving a Pell grant\") +\n  scale_y_continuous(name = \"Average faculty salary (USD)\") +\n  scale_color_discrete(name = \"College type\") +\n  scale_shape_discrete(name = \"College type\")"
  },
  {
    "objectID": "slides/05-stats-scales-guides.html#customizing-axis-and-legend-labels-with-labs",
    "href": "slides/05-stats-scales-guides.html#customizing-axis-and-legend-labels-with-labs",
    "title": "Deep dive: stats + scales + guides",
    "section": "Customizing axis and legend labels with labs()",
    "text": "Customizing axis and legend labels with labs()\n\n\np_pctpell_avgfacsal_type +\n  labs(\n    x = \"Percent of students receiving a Pell grant\",\n    y = \"Average faculty salary (USD)\",\n    color = \"College type\",\n    shape = \"College type\"\n  )"
  },
  {
    "objectID": "slides/05-stats-scales-guides.html#splitting-legend-labels",
    "href": "slides/05-stats-scales-guides.html#splitting-legend-labels",
    "title": "Deep dive: stats + scales + guides",
    "section": "Splitting legend labels",
    "text": "Splitting legend labels\n\n\np_pctpell_avgfacsal_type +\n  labs(\n    x = \"Percent of students receiving a Pell grant\",\n    y = \"Average faculty salary (USD)\",\n    color = \"College type\"\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n🔗 info3312.infosci.cornell.edu"
  },
  {
    "objectID": "slides/03-look-at-data.html#recreate-the-visualization",
    "href": "slides/03-look-at-data.html#recreate-the-visualization",
    "title": "Look at data",
    "section": "Recreate the visualization",
    "text": "Recreate the visualization\nIn order to recreate this visualization we need to first reshape the data to have one variable for faculty type and one variable for year. In other words, we will convert the data from the long format to wide format.\nBut before we do so…\n\nIf the long data will have a row for each year/faculty type combination, and there are 5 faculty types and 11 years of data, how many rows will the data have?"
  },
  {
    "objectID": "slides/03-look-at-data.html#pivot_-function",
    "href": "slides/03-look-at-data.html#pivot_-function",
    "title": "Look at data",
    "section": "pivot_*() function",
    "text": "pivot_*() function"
  },
  {
    "objectID": "slides/03-look-at-data.html#pivot_longer",
    "href": "slides/03-look-at-data.html#pivot_longer",
    "title": "Look at data",
    "section": "pivot_longer()",
    "text": "pivot_longer()\n\npivot_longer(data, cols, names_to = \"name\", values_to = \"value\")\n\n\nThe first argument is data as usual.\nThe second argument, cols, is where you specify which columns to pivot into longer format – in this case all columns except for the faculty_type\nThe third argument, names_to, is a string specifying the name of the column to create from the data stored in the column names of data – in this case year\nThe fourth argument, values_to, is a string specifying the name of the column to create from the data stored in cell values, in this case percentage"
  },
  {
    "objectID": "slides/03-look-at-data.html#pivot-instructor-data",
    "href": "slides/03-look-at-data.html#pivot-instructor-data",
    "title": "Look at data",
    "section": "Pivot instructor data",
    "text": "Pivot instructor data\n\nlibrary(tidyverse)\n\nstaff_long <- staff |>\n  pivot_longer(cols = -faculty_type, names_to = \"year\", \n               values_to = \"percentage\") |>\n  mutate(percentage = as.numeric(percentage))\n\nstaff_long\n\n# A tibble: 55 × 3\n   faculty_type              year  percentage\n   <chr>                     <chr>      <dbl>\n 1 Full-Time Tenured Faculty 1975        29  \n 2 Full-Time Tenured Faculty 1989        27.6\n 3 Full-Time Tenured Faculty 1993        25  \n 4 Full-Time Tenured Faculty 1995        24.8\n 5 Full-Time Tenured Faculty 1999        21.8\n 6 Full-Time Tenured Faculty 2001        20.3\n 7 Full-Time Tenured Faculty 2003        19.3\n 8 Full-Time Tenured Faculty 2005        17.8\n 9 Full-Time Tenured Faculty 2007        17.2\n10 Full-Time Tenured Faculty 2009        16.8\n# … with 45 more rows"
  },
  {
    "objectID": "slides/03-look-at-data.html#some-improvement",
    "href": "slides/03-look-at-data.html#some-improvement",
    "title": "Look at data",
    "section": "Some improvement…",
    "text": "Some improvement…\n\n\nstaff_long |>\n  ggplot(aes(x = percentage, y = year, fill = faculty_type)) +\n  geom_col()"
  },
  {
    "objectID": "slides/03-look-at-data.html#more-improvement",
    "href": "slides/03-look-at-data.html#more-improvement",
    "title": "Look at data",
    "section": "More improvement",
    "text": "More improvement\n\n\nstaff_long |>\n  ggplot(aes(x = year, y = percentage, group = faculty_type, \n             color = faculty_type)) +\n  geom_line() +\n  theme_minimal()"
  },
  {
    "objectID": "slides/03-look-at-data.html#goal-even-more-improvement",
    "href": "slides/03-look-at-data.html#goal-even-more-improvement",
    "title": "Look at data",
    "section": "Goal: even more improvement!",
    "text": "Goal: even more improvement!\n\nI want to achieve the following look but I have no idea how!"
  },
  {
    "objectID": "slides/03-look-at-data.html#asking-good-questions",
    "href": "slides/03-look-at-data.html#asking-good-questions",
    "title": "Look at data",
    "section": "Asking good questions",
    "text": "Asking good questions\n\nDescribe what you want\nDescribe where you are\nCreate a minimal reproducible example: reprex::reprex()"
  },
  {
    "objectID": "slides/03-look-at-data.html#data-college-education-costs",
    "href": "slides/03-look-at-data.html#data-college-education-costs",
    "title": "Look at data",
    "section": "Data: College education costs",
    "text": "Data: College education costs\n\n\n\nData on four year colleges and universities in the United States (2020-21)\nExtracted from College Scorecard API\nSource: rcis::scorecard"
  },
  {
    "objectID": "slides/03-look-at-data.html#rcisscorecard",
    "href": "slides/03-look-at-data.html#rcisscorecard",
    "title": "Look at data",
    "section": "rcis::scorecard",
    "text": "rcis::scorecard\n\nlibrary(tidyverse)\n# remotes::install_github(\"cis-ds/rcis\")\nlibrary(rcis)\n\nglimpse(scorecard)\n\nRows: 1,721\nColumns: 14\n$ unitid    <dbl> 100654, 100663, 100706, 100724, 100751, 100830, 100858, 1009…\n$ name      <chr> \"Alabama A & M University\", \"University of Alabama at Birmin…\n$ state     <chr> \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", …\n$ type      <fct> \"Public\", \"Public\", \"Public\", \"Public\", \"Public\", \"Public\", …\n$ admrate   <dbl> 0.8965, 0.8060, 0.7711, 0.9888, 0.8039, 0.9555, 0.8507, 0.60…\n$ satavg    <dbl> 959, 1245, 1300, 938, 1262, 1061, 1302, 1202, 1068, NA, 1101…\n$ cost      <dbl> 23445, 25542, 24861, 21892, 30016, 20225, 32196, 32514, 3483…\n$ netcost   <dbl> 15529, 16530, 17208, 19534, 20917, 13678, 24018, 19808, 2050…\n$ avgfacsal <dbl> 68391, 102420, 87273, 64746, 93141, 69561, 96498, 62649, 533…\n$ pctpell   <dbl> 0.7095, 0.3397, 0.2403, 0.7368, 0.1718, 0.4654, 0.1343, 0.22…\n$ comprate  <dbl> 0.2866, 0.6117, 0.5714, 0.3177, 0.7214, 0.3040, 0.7870, 0.70…\n$ firstgen  <dbl> 0.3658281, 0.3412237, 0.3101322, 0.3434343, 0.2257127, 0.381…\n$ debt      <dbl> 15250, 15085, 14000, 17500, 17671, 12000, 17500, 16000, 1425…\n$ locale    <fct> City, City, City, City, City, City, City, City, City, Suburb…"
  },
  {
    "objectID": "slides/03-look-at-data.html#a-simple-visualization",
    "href": "slides/03-look-at-data.html#a-simple-visualization",
    "title": "Look at data",
    "section": "A simple visualization",
    "text": "A simple visualization\n\nCodePlot\n\n\n\nggplot(scorecard, aes(x = avgfacsal, y = netcost)) +\n  geom_point(alpha = 0.5, size = 2) +\n  geom_smooth(method = \"lm\", se = FALSE, size = 0.7) +\n  labs(\n    x = \"Average faculty salary (USD)\",\n    y = \"Net cost of attendance (USD)\",\n    title = \"Faculty salaries and net cost of attendance in US universities\"\n  )"
  },
  {
    "objectID": "slides/03-look-at-data.html#new-variable-pctpell_cat",
    "href": "slides/03-look-at-data.html#new-variable-pctpell_cat",
    "title": "Look at data",
    "section": "New variable: pctpell_cat",
    "text": "New variable: pctpell_cat\n\nscorecard <- scorecard |>\n  mutate(pctpell_cat = cut_interval(x = pctpell, n = 6)) |>\n  drop_na(pctpell_cat)\n\nscorecard |>\n  select(pctpell, pctpell_cat)\n\n# A tibble: 1,717 × 2\n   pctpell pctpell_cat  \n     <dbl> <fct>        \n 1   0.710 (0.667,0.833]\n 2   0.340 (0.333,0.5]  \n 3   0.240 (0.167,0.333]\n 4   0.737 (0.667,0.833]\n 5   0.172 (0.167,0.333]\n 6   0.465 (0.333,0.5]  \n 7   0.134 [0,0.167]    \n 8   0.226 (0.167,0.333]\n 9   0.501 (0.5,0.667]  \n10   0.697 (0.667,0.833]\n# … with 1,707 more rows"
  },
  {
    "objectID": "slides/03-look-at-data.html#distribution-of-pctpell_cat",
    "href": "slides/03-look-at-data.html#distribution-of-pctpell_cat",
    "title": "Look at data",
    "section": "Distribution of pctpell_cat",
    "text": "Distribution of pctpell_cat\n\nscorecard <- scorecard |>\n  mutate(pctpell_cat = cut_interval(x = pctpell, n = 6)) |>\n  drop_na(pctpell_cat)\n\nscorecard |>\n  count(pctpell_cat)\n\n# A tibble: 6 × 2\n  pctpell_cat       n\n  <fct>         <int>\n1 [0,0.167]       169\n2 (0.167,0.333]   630\n3 (0.333,0.5]     609\n4 (0.5,0.667]     205\n5 (0.667,0.833]    73\n6 (0.833,1]        31"
  },
  {
    "objectID": "slides/03-look-at-data.html#a-slightly-more-complex-visualization",
    "href": "slides/03-look-at-data.html#a-slightly-more-complex-visualization",
    "title": "Look at data",
    "section": "A slightly more complex visualization",
    "text": "A slightly more complex visualization\n\nCodePlot\n\n\n\nggplot(scorecard, aes(x = avgfacsal, y = netcost, color = pctpell_cat)) +\n  geom_point(alpha = 0.5, show.legend = FALSE) +\n  geom_smooth(method = \"lm\", se = FALSE, size = 0.5, show.legend = FALSE) +\n  facet_wrap(vars(pctpell_cat)) +\n  labs(\n    x = \"Average faculty salary (USD)\",\n    y = \"Net cost of attendance (USD)\",\n    color = \"Percentage of Pell grant recipients\",\n    title = \"Faculty salaries and net cost of attendance in US universities\"\n  )"
  },
  {
    "objectID": "slides/03-look-at-data.html#test-1",
    "href": "slides/03-look-at-data.html#test-1",
    "title": "Look at data",
    "section": "Test 1",
    "text": "Test 1\n\nPlot APlot B"
  },
  {
    "objectID": "slides/03-look-at-data.html#test-2",
    "href": "slides/03-look-at-data.html#test-2",
    "title": "Look at data",
    "section": "Test 2",
    "text": "Test 2\n\nPlot APlot B"
  },
  {
    "objectID": "slides/03-look-at-data.html#minimal-theme-viridis-scale-default-option",
    "href": "slides/03-look-at-data.html#minimal-theme-viridis-scale-default-option",
    "title": "Look at data",
    "section": "Minimal theme + viridis scale, default option",
    "text": "Minimal theme + viridis scale, default option\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(scorecard, aes(x = avgfacsal, y = netcost, color = pctpell_cat)) +\n  geom_point(alpha = 0.5, show.legend = FALSE) +\n  geom_smooth(method = \"lm\", se = FALSE, size = 0.5, show.legend = FALSE) +\n  facet_wrap(vars(pctpell_cat)) +\n  labs(\n    x = \"Average faculty salary (USD)\",\n    y = \"Net cost of attendance (USD)\",\n    color = \"Percentage of Pell grant recipients\",\n    title = \"Faculty salaries and net cost of attendance in US universities\"\n  ) +\n  theme_minimal(base_size = 14) +\n  scale_color_viridis_d(end = 0.9)"
  },
  {
    "objectID": "slides/03-look-at-data.html#viridis-scale-option-a-magma",
    "href": "slides/03-look-at-data.html#viridis-scale-option-a-magma",
    "title": "Look at data",
    "section": "Viridis scale, option A (magma)",
    "text": "Viridis scale, option A (magma)\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(scorecard, aes(x = avgfacsal, y = netcost, color = pctpell_cat)) +\n  geom_point(alpha = 0.5, show.legend = FALSE) +\n  geom_smooth(method = \"lm\", se = FALSE, size = 0.5, show.legend = FALSE) +\n  facet_wrap(vars(pctpell_cat)) +\n  labs(\n    x = \"Average faculty salary (USD)\",\n    y = \"Net cost of attendance (USD)\",\n    color = \"Percentage of Pell grant recipients\",\n    title = \"Faculty salaries and net cost of attendance in US universities\"\n  ) +\n  theme_minimal(base_size = 14) +\n  scale_color_viridis_d(end = 0.8, option = \"A\")"
  },
  {
    "objectID": "slides/03-look-at-data.html#dark-theme-further-theme-customization",
    "href": "slides/03-look-at-data.html#dark-theme-further-theme-customization",
    "title": "Look at data",
    "section": "Dark theme + further theme customization",
    "text": "Dark theme + further theme customization\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(scorecard, aes(x = avgfacsal, y = netcost, color = pctpell_cat)) +\n  geom_point(alpha = 0.5, show.legend = FALSE) +\n  geom_smooth(method = \"lm\", se = FALSE, size = 0.5, show.legend = FALSE) +\n  facet_wrap(vars(pctpell_cat)) +\n  labs(\n    x = \"Average faculty salary (USD)\",\n    y = \"Net cost of attendance (USD)\",\n    color = \"Percentage of Pell grant recipients\",\n    title = \"Faculty salaries and net cost of attendance in US universities\"\n  ) +\n  theme_dark(base_size = 14) +\n  scale_color_manual(values = c(\"yellow\", \"blue\", \"orange\", \"red\", \"green\", \"white\")) +\n  theme(\n    text = element_text(color = \"red\", face = \"bold.italic\"),\n    plot.background = element_rect(fill = \"yellow\")\n  )"
  },
  {
    "objectID": "slides/03-look-at-data.html#bad-taste",
    "href": "slides/03-look-at-data.html#bad-taste",
    "title": "Look at data",
    "section": "Bad taste",
    "text": "Bad taste"
  },
  {
    "objectID": "slides/03-look-at-data.html#data-to-ink-ratio",
    "href": "slides/03-look-at-data.html#data-to-ink-ratio",
    "title": "Look at data",
    "section": "Data-to-ink ratio",
    "text": "Data-to-ink ratio\n\n\nTufte strongly recommends maximizing the data-to-ink ratio this in the Visual Display of Quantitative Information (Tufte, 1983).\n\nGraphical excellence is the well-designed presentation of interesting data—a matter of substance, of statistics, and of design … [It] consists of complex ideas communicated with clarity, precision, and efficiency. … [It] is that which gives to the viewer the greatest number of ideas in the shortest time with the least ink in the smallest space … [It] is nearly always multivariate … And graphical excellence requires telling the truth about the data. (Tufte, 1983, p. 51)."
  },
  {
    "objectID": "slides/03-look-at-data.html#summary-statistics",
    "href": "slides/03-look-at-data.html#summary-statistics",
    "title": "Look at data",
    "section": "Summary statistics",
    "text": "Summary statistics\n\nmean_netcost_pctpell <- scorecard |>\n  group_by(pctpell_cat) |>\n  summarise(mean_netcost = mean(netcost, na.rm = TRUE))\n\nmean_netcost_pctpell\n\n# A tibble: 6 × 2\n  pctpell_cat   mean_netcost\n  <fct>                <dbl>\n1 [0,0.167]           29919.\n2 (0.167,0.333]       22579.\n3 (0.333,0.5]         19171.\n4 (0.5,0.667]         16966.\n5 (0.667,0.833]       15572.\n6 (0.833,1]           10138."
  },
  {
    "objectID": "slides/03-look-at-data.html#barplot",
    "href": "slides/03-look-at-data.html#barplot",
    "title": "Look at data",
    "section": "Barplot",
    "text": "Barplot\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(mean_netcost_pctpell, aes(y = pctpell_cat, x = mean_netcost)) +\n  geom_col() +\n  labs(\n    x = \"Mean net cost of attendance\", y = \"Pell grant recipients\",\n    title = \"Mean net cost of attendance, by Pell grant recipients\"\n  ) +\n  theme_minimal(base_size = 14)"
  },
  {
    "objectID": "slides/03-look-at-data.html#scatterplot",
    "href": "slides/03-look-at-data.html#scatterplot",
    "title": "Look at data",
    "section": "Scatterplot",
    "text": "Scatterplot\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(mean_netcost_pctpell, aes(y = pctpell_cat, x = mean_netcost)) +\n  geom_point(size = 4) +\n  labs(\n    x = \"Mean net cost of attendance\", y = \"Pell grant recipients\",\n    title = \"Mean net cost of attendance, by Pell grant recipients\"\n  ) +\n  theme_minimal(base_size = 14)"
  },
  {
    "objectID": "slides/03-look-at-data.html#lollipop-plot-a-happy-medium",
    "href": "slides/03-look-at-data.html#lollipop-plot-a-happy-medium",
    "title": "Look at data",
    "section": "Lollipop plot – a happy medium?",
    "text": "Lollipop plot – a happy medium?\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(mean_netcost_pctpell, aes(y = pctpell_cat, x = mean_netcost)) +\n  geom_point(size = 4) +\n  geom_segment(\n    aes(\n      x = 0, xend = mean_netcost,\n      y = pctpell_cat, yend = pctpell_cat\n    )\n  ) +\n  labs(\n    x = \"Mean net cost of attendance\", y = \"Pell grant recipients\",\n    title = \"Mean net cost of attendance, by Pell grant recipients\"\n  ) +\n  theme_minimal(base_size = 14)"
  },
  {
    "objectID": "slides/03-look-at-data.html#activity-napoleons-disastrous-russian-campaign-of-1812",
    "href": "slides/03-look-at-data.html#activity-napoleons-disastrous-russian-campaign-of-1812",
    "title": "Look at data",
    "section": "Activity: Napoleon’s disastrous Russian campaign of 1812",
    "text": "Activity: Napoleon’s disastrous Russian campaign of 1812\n\n\n\n\n\n\n\n\n\n\n\nSource: Wikipedia"
  },
  {
    "objectID": "slides/03-look-at-data.html#activity-napoleons-retreat",
    "href": "slides/03-look-at-data.html#activity-napoleons-retreat",
    "title": "Look at data",
    "section": "Activity: Napoleon’s retreat",
    "text": "Activity: Napoleon’s retreat\n\n\n\nThis is Minard’s visualization of Napoleon’s retreat. Discuss in a pair (or group) the features of the following visualization. What are the variables plotted? Which aesthetics are they mapped to?\n\n\n\n\n\n−+\n05:00\n\n\n\n\n\n\nSource: Wikipedia"
  },
  {
    "objectID": "slides/03-look-at-data.html#bad-data",
    "href": "slides/03-look-at-data.html#bad-data",
    "title": "Look at data",
    "section": "Bad data",
    "text": "Bad data\n\nOriginalImproved\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHealy, Data Visualization: A practical introduction. Chapter 1. Figures 1.8 and 1.9."
  },
  {
    "objectID": "slides/03-look-at-data.html#bad-perception",
    "href": "slides/03-look-at-data.html#bad-perception",
    "title": "Look at data",
    "section": "Bad perception",
    "text": "Bad perception\n\n\n\n\n\n\n\n\n\n\n\nHealy, Data Visualization: A practical introduction. Chapter 1. Figure 1.12."
  },
  {
    "objectID": "slides/03-look-at-data.html#a-second-look-lollipop-plot",
    "href": "slides/03-look-at-data.html#a-second-look-lollipop-plot",
    "title": "Look at data",
    "section": "A second look: lollipop plot",
    "text": "A second look: lollipop plot\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(mean_netcost_pctpell, aes(y = pctpell_cat, x = mean_netcost)) +\n  geom_point(size = 4) +\n  geom_segment(\n    aes(\n      x = 0, xend = mean_netcost,\n      y = pctpell_cat, yend = pctpell_cat\n    )\n  ) +\n  labs(\n    x = \"Mean net cost of attendance\", y = \"Pell grant recipients\",\n    title = \"Mean net cost of attendance, by Pell grant recipients\"\n  ) +\n  theme_minimal(base_size = 14)"
  },
  {
    "objectID": "slides/03-look-at-data.html#activity-spot-the-difference-i",
    "href": "slides/03-look-at-data.html#activity-spot-the-difference-i",
    "title": "Look at data",
    "section": "Activity: Spot the difference I",
    "text": "Activity: Spot the difference I\n\nCan you spot the differences between the code here and the one provided in the previous slide? Are there any differences in the resulting plot? Work in a pair (or group) to answer.\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(mean_netcost_pctpell, aes(y = pctpell_cat, x = mean_netcost)) +\n  geom_point(size = 4) +\n  geom_segment(aes(\n    xend = 0,\n    yend = pctpell_cat\n  )) +\n  labs(\n    x = \"Mean net cost of attendance\", y = \"Pell grant recipients\",\n    title = \"Mean net cost of attendance, by Pell grant recipients\"\n  ) +\n  theme_minimal(base_size = 14)\n\n\n\n\n\n\n\n−+\n01:00"
  },
  {
    "objectID": "slides/03-look-at-data.html#global-vs.-layer-specific-aesthetics",
    "href": "slides/03-look-at-data.html#global-vs.-layer-specific-aesthetics",
    "title": "Look at data",
    "section": "Global vs. layer-specific aesthetics",
    "text": "Global vs. layer-specific aesthetics\n\nAesthetic mappings can be supplied in the initial ggplot() call, in individual layers, or in some combination of both.\nWithin each layer, you can add, override, or remove mappings.\nIf you only have one layer in the plot, the way you specify aesthetics doesn’t make any difference. However, the distinction is important when you start adding additional layers."
  },
  {
    "objectID": "slides/03-look-at-data.html#wrap-up",
    "href": "slides/03-look-at-data.html#wrap-up",
    "title": "Look at data",
    "section": "Wrap up",
    "text": "Wrap up\n\nThink back to all the plots you saw in the lecture, without flipping back through the slides. Which plot first comes to mind? Describe it in words.\n\n\n\n\n🔗 info3312.infosci.cornell.edu"
  },
  {
    "objectID": "course-faq.html",
    "href": "course-faq.html",
    "title": "FAQ",
    "section": "",
    "text": "Go to your Files tab, check the box next to the file you want to download.\n\nClick on the blue gear icon on the Files tab to reveal the drop down menu, and select Export….\n\nClick the Download button. If you have selected multiple files to export, RStudio will zip them up into a single zip file for you. If you’ve selected just a single file, it will only download that. For assignments submitted via Gradescope, you only need to download the PDF. The downloaded file will go to wherever files you download off the internet goes on your computer (usually your Downloads folder)."
  },
  {
    "objectID": "course-faq.html#how-can-i-submit-my-assignment-to-gradescope",
    "href": "course-faq.html#how-can-i-submit-my-assignment-to-gradescope",
    "title": "FAQ",
    "section": "How can I submit my assignment to Gradescope?",
    "text": "How can I submit my assignment to Gradescope?\nThe instructions for submitting your assignment to Gradescope can be found here. In a nutshell, you’ll upload your PDF and them mark the page(s) where each question can be found. It’s OK if a question spans multiple pages, just mark them all. It’s also OK if a page includes multiple questions."
  },
  {
    "objectID": "course-faq.html#can-i-use-a-local-install-of-r-and-rstudio-instead-of-using-rstudio-workbench",
    "href": "course-faq.html#can-i-use-a-local-install-of-r-and-rstudio-instead-of-using-rstudio-workbench",
    "title": "FAQ",
    "section": "Can I use a local install of R and RStudio instead of using RStudio Workbench?",
    "text": "Can I use a local install of R and RStudio instead of using RStudio Workbench?\nThe short answer is, I’d rather you didn’t, to save yourself some headache. But, the long answer is, sure! But you will need to install a specific version of R and RStudio for everything to work as expected. You will also need to install the R packages we’re using as well as have Git installed on your computer.\nThese are not extremely challenging things to get right, but they are not trivial either, particularly on certain operating systems. Myself and the TAs are always happy to provide help with any computational questions when you’re working in RStudio Workbench. Since we have provisioned that server, we know it will work for all the labs/homeworks/exams/etc. If you’re working on your local setup, we can’t guarantee being able to resolve your issues, though we’re happy to try.\nIf you want to take this path, here is what you need to do:\n\nDownload and install R 4.2.2: https://cran.r-project.org/\nDownload and install RStudio: https://posit.co/download/rstudio-desktop/\nInstall Git: https://happygitwithr.com/install-git.html\nInstall any necessary packages with install.packages(\"___\")\n\nAnd I’d like to reiterate again that successful installation of these software is not a learning goal of this course. So if any of this seems tedious or intimidating in any way, just use the computing environment we have set up for you. More on that here."
  },
  {
    "objectID": "computing-cheatsheets.html",
    "href": "computing-cheatsheets.html",
    "title": "R cheatsheets",
    "section": "",
    "text": "The following cheatsheets come from https://posit.co/resources/cheatsheets/. We haven’t covered every function and functionality listed on them, but you might still find them useful as references."
  },
  {
    "objectID": "course-support.html",
    "href": "course-support.html",
    "title": "Course support",
    "section": "",
    "text": "Most of you will need help at some point and we want to make sure you can identify when that is without getting too frustrated and feel comfortable seeking help. Please follow the 15 minute rule in this class.\nIf you are stuck on a problem, you should attempt to fix it on your own for 15 minutes. After 15 minutes, you must ask for help."
  },
  {
    "objectID": "course-support.html#lectures-and-labs",
    "href": "course-support.html#lectures-and-labs",
    "title": "Course support",
    "section": "Lectures and labs",
    "text": "Lectures and labs\nIf you have a question during lecture or lab, feel free to ask it! There are likely other students with the same question, so by asking you will create a learning opportunity for everyone."
  },
  {
    "objectID": "course-support.html#office-hours",
    "href": "course-support.html#office-hours",
    "title": "Course support",
    "section": "Office hours",
    "text": "Office hours\nThe course staff is here to help you be successful in the course. You are encouraged to attend office hours during the times posted on the home page to ask questions about the course content and assignments. A lot of questions are most effectively answered in-person, so office hours are a valuable resource. I encourage each and every one of you to take advantage of this resource!\nMake a pledge to stop by office hours at least once during the first three weeks of class. If you truly have no questions to ask, just stop by and say hi and introduce yourself. You can find a list of everyone’s office hours here."
  },
  {
    "objectID": "course-support.html#github-discussions",
    "href": "course-support.html#github-discussions",
    "title": "Course support",
    "section": "GitHub Discussions",
    "text": "GitHub Discussions\nHave a question that can’t wait for office hours? Prefer to write out your question in detail rather than asking in person? The course discussion forum. There is a chance another student has already asked a similar question, so please check the other posts on GitHub Discussions before adding a new question. If you know the answer to a question posted on the discussion board, I encourage you to respond!"
  },
  {
    "objectID": "course-support.html#email",
    "href": "course-support.html#email",
    "title": "Course support",
    "section": "Email",
    "text": "Email\nPlease refrain from emailing any course content questions (those should go to office hours or GitHub Discussions), and only use email for questions about personal matters that may not be appropriate for the public course forum (e.g., illness, accommodations, etc.). For such matters, you may email Dr. Benjamin Soltoff at soltoffbc@cornell.edu.\nIf there is a question that’s not appropriate for a public discussion forum, you are welcome to email me directly. Barring extenuating circumstances, I will respond to INFO 3312/5312 emails within 48 hours Monday - Friday. Response time may be slower for emails sent Friday evening - Sunday."
  },
  {
    "objectID": "course-support.html#academic-support",
    "href": "course-support.html#academic-support",
    "title": "Course support",
    "section": "Academic support",
    "text": "Academic support\nSometimes you may need help with the class that is beyond what can be provided by the course staff. Cornell offers multiple centers to support student learning. The Learning Strategies Center (LSC) offers programs and resources to develop effective approaches to the learning process and become a successful and independent student. They host workshops, provide online resources, and offer private consultations for one-on-one support to develop effective learning strategies. Contact learningstrategiescenter@cornell.edu to setup an appointment."
  },
  {
    "objectID": "course-support.html#mental-health-and-wellness",
    "href": "course-support.html#mental-health-and-wellness",
    "title": "Course support",
    "section": "Mental health and wellness",
    "text": "Mental health and wellness\nIf your mental health concerns and/or stressful events negatively affect your daily emotional state, academic performance, or ability to participate in your daily activities, many resources are available to help you through difficult times. Counseling & Psychological Services at Cornell Health provides professional and confidential mental health care to help you “live well to learn well” here at Cornell. Their services include self-care resources and programming, workshops, informal consultations, individual and group counseling, and referrals to off-campus mental health providers. To schedule an access appointment, log in tomyCornellHealth using your Cornell NetID and password, and select Appointments. You may also call 607-255-5155 during business hours to schedule."
  },
  {
    "objectID": "course-support.html#course-costs",
    "href": "course-support.html#course-costs",
    "title": "Course support",
    "section": "Course costs",
    "text": "Course costs\n\nTextbooks: The textbooks for this course are freely available on the web.\nLaptops: Each student is expected to have a laptop they can bring to each lecture and lab.\n\nIf you are having difficulty with costs associated with this course, here are some resources:\n\nContact the financial aid office (whether or not you are on aid). They have loans and resources for connecting students with programs on campus that might be able to help alleviate these costs."
  },
  {
    "objectID": "course-syllabus.html",
    "href": "course-syllabus.html",
    "title": "Syllabus",
    "section": "",
    "text": "Click here to download a PDF copy of the syllabus."
  },
  {
    "objectID": "course-syllabus.html#info-33125312---data-communication",
    "href": "course-syllabus.html#info-33125312---data-communication",
    "title": "Syllabus",
    "section": "INFO 3312/5312 - Data Communication",
    "text": "INFO 3312/5312 - Data Communication\n\nInstructor\n\nDr. Benjamin Soltoff\nOffice: Gates Hall 216\nEmail: soltoffbc@cornell.edu\nOffice hours: Wed 9-11am\n\n\n\nCourse logistics\n\nMeets TuTh 1:00 - 2:15 pm for 28 sessions\nLab sections meet on Fridays at varying times for 15 sessions\n4 credits, offered for a letter grade\nPrerequisites: INFO 2950. Prior experience with R and Git/GitHub is preferred.\n\n\n\nCourse description\nData scientists often present information to disseminate their findings. This course introduces theories and applications of communicating with data, with an emphasis on visualizations. To support this approach, we will focus on the what, why, and how of data visualization. “What” focuses on specific types of visualizations for a particular purpose, as well as tools for constructing these plots. In “how” we will focus on the process of generating a data visualization from pre-processing the raw data, mapping attributes of the data to plot aesthetics, strategically determining how to define the visual encoding of the data for maximal accessibility, and finalizing the visualization to consider the importance of visual appeal. In “why” we discuss the theory tying together the “how” and the “what”, and consider empirical evidence of best-practices in data communication.\n\n\nCourse learning objectives\nBy the end of the semester, you will…\n\nImplement principles of designing and creating effective data visualizations.\nEvaluate, critique, and improve upon one’s own and others’ data visualizations based on how good a job the visualization does for communicating a message clearly and correctly.\nPost-process and refine plots for effective communication.\nMaster using R and a variety of modern data visualization packages to reproducibly create data visualizations.\nWork reproducibly individually and collaboratively using Git and GitHub."
  },
  {
    "objectID": "course-syllabus.html#office-hours",
    "href": "course-syllabus.html#office-hours",
    "title": "Syllabus",
    "section": "Office hours",
    "text": "Office hours\nClick here for the instructor and TA office hours and locations.\nYou are welcome to attend the office hours for any INFO 3312/5312 TA, regardless of section."
  },
  {
    "objectID": "course-syllabus.html#textbooks",
    "href": "course-syllabus.html#textbooks",
    "title": "Syllabus",
    "section": "Textbooks",
    "text": "Textbooks\nAll books are freely available online.\n\n\n\nggplot2: Elegant Graphics for Data Analysis\nHadley Wickham, Danielle Navarro, and Thomas Lin Pedersen\nSpringer, 3rd edition (in progress)\nHard copy only available of 2nd edition\n\n\nFundamentals of Data Visualization\nClaus O. Wilke\nO’Rielly Media, 2019\nHard copy available"
  },
  {
    "objectID": "course-syllabus.html#course-community",
    "href": "course-syllabus.html#course-community",
    "title": "Syllabus",
    "section": "Course community",
    "text": "Course community\nWe want you to feel like you belong in this class and are respected. Cornell University (as an institution) and we (as human beings and instructors of this course) are committed to full inclusion in education for all persons. If for any reason you feel that we have failed these goals, please either let us know or report it, and we will address the issue.\nServices and reasonable accommodations are available to persons with temporary and permanent disabilities, to students with DACA or undocumented status, to students facing mental health or other personal challenges, and to students with other kinds of learning challenges. Please feel free to let me know if there are circumstances affecting your ability to participate in class. Some resources that might be of use include:\n\nOffice of Student Disability Services: https://sds.cornell.edu\nCornell Health CAPS (Counseling & Psychological Services): https://health.cornell.edu/services/counseling-psychiatry\nUndocumented/DACA Student support: https://dos.cornell.edu/undocumented-daca-support/undergraduate-admissions-financial-aid\n\n\nAcademic accommodations\nWe want all students to have the opportunity to be successful in this course. Accommodations can help provide some flexibility and equitable classroom access.\nPer university policy, this course provides the following accommodations:\n\nDisability Accommodations\nReligious-Observance Accommodations\nTitle IX Accommodations\nVarsity Athlete Accommodations\nMedical Accommodations\nMilitary Service\nOther Accommodations\n\n\n\nAccessibility\nIf there is any portion of the course that is not accessible to you due to challenges with technology or the course format, please let me know so we can make appropriate accommodations.\nStudent Disability Services is available to ensure that students are able to engage with their courses and related assignments. Students should be in touch with Student Disability Services to request or update accommodations under these circumstances.\nIf you have an approved SDS accommodation, please send a copy of this letter to the instructors at soltoffbc@cornell.edu so we can ensure your accommodations are implemented in this course.\n\n\nCommunication\nAll lecture notes, assignment instructions, an up-to-date schedule, and other course materials may be found on the course website: info3312.infosci.cornell.edu.\nAnnouncements will be posted through Canvas Announcements periodically. Please check Canvas (or ensure Canvas announcements are forwarded to your email) to ensure you have the latest announcements for the course.\n\n\nWhere to get help\n\nIf you have a question during lecture or lab, feel free to ask it! There are likely other students with the same question, so by asking you will create a learning opportunity for everyone.\nThe course staff is here to help you be successful in the course. You are encouraged to attend office hours to ask questions about the course content and assignments. Many questions are most effectively answered as you discuss them with others, so office hours are a valuable resource. Please use them!\nOutside of class and office hours, any general questions about course content or assignments should be posted on the course discussion forum. There is a chance another student has already asked a similar question, so please check the other posts on GitHub Discussions before adding a new question. If you know the answer to a question posted on the discussion board, I encourage you to respond!\n\n\n\nEmail\nIf there is a question that’s not appropriate for the public forum, please email us at soltoffbc@cornell.edu. Barring extenuating circumstances, we will respond to INFO 3312/5312 emails within 48 hours Monday - Friday. Response time may be slower for emails sent Friday evening - Sunday."
  },
  {
    "objectID": "course-syllabus.html#assessment",
    "href": "course-syllabus.html#assessment",
    "title": "Syllabus",
    "section": "Assessment",
    "text": "Assessment\nAssessments in this course are designed to help you successfully achieve the course learning objectives. They are comprised of three components: attendance and participation, homework assignments, and projects.\n\nAttendance and participation is expected throughout the semester.\nHomework assignments (6), due every other week (roughly), completed individually and submitted via Gradescope. Each homework assignment is worth 10% of the course grade. Lowest homework assignment score is dropped.\nProjects (2), mid-semester and end of semester, completed in teams.\n\nProject 1: Teams will be given a dataset to visualize. Project 1 is worth 20% of the course grade.\nProject 2: Teams will pick a dataset of interest to them and/or build an R package that implements a new type of data visualization in R. Project 2 is worth 30% of the course grade.\n\nThe deliverables for each project will include a data visualization, a write up of the process and findings, and a presentation. For the second project, you will be encouraged to think beyond a traditional two-dimensional data visualization (e.g. interactive web apps/dashboards, data art, generative art, physical/tangible visualizations, ggplot2 extensions, etc.).\nEach project will have a peer review component to provide at least one round of feedback during the process of development. Teams will provide confidential peer feedback regarding their teammates upon completion of the project. The scores from the peer evaluations, along with individual contributions tracked by commits on GitHub, will be used to ensure that each student has contributed to the teamwork.\nAll team members must take part in the presentation. Presentations can be given in person in class."
  },
  {
    "objectID": "course-syllabus.html#grading",
    "href": "course-syllabus.html#grading",
    "title": "Syllabus",
    "section": "Grading",
    "text": "Grading\nThe final course grade will be calculated as follows:\n\n\n\nCategory\nPercentage\n\n\n\n\nHomework\n50%\n\n\nProject 1\n20%\n\n\nProject 2\n30%\n\n\n\nThe final letter grade will be determined based on the following thresholds:\n\n\n\nLetter Grade\nFinal Course Grade\n\n\n\n\nA+\n>= 98\n\n\nA\n93 - 97.99\n\n\nA-\n90 - 92.99\n\n\nB+\n87 - 89.99\n\n\nB\n83 - 86.99\n\n\nB-\n80 - 82.99\n\n\nC+\n77 - 79.99\n\n\nC\n73 - 76.99\n\n\nC-\n70 - 72.99\n\n\nD+\n67 - 69.99\n\n\nD\n63 - 66.99\n\n\nD-\n60 - 62.99\n\n\nF\n< 60"
  },
  {
    "objectID": "course-syllabus.html#teams",
    "href": "course-syllabus.html#teams",
    "title": "Syllabus",
    "section": "Teams",
    "text": "Teams\nYou will be assigned to a different team for each of your two projects. You are encouraged to sit with your teammates in lecture and you will also work with them in the lab sessions. All team members are expected to contribute equally to the completion of each project and you will be asked to evaluate your team members after each assignment is due. Failure to adequately contribute to an assignment will result in a penalty to your mark relative to the team’s overall mark.\nYou are expected to make use of the provided GitHub repository as their central collaborative platform. Commits to this repository will be used as a metric (one of several) of each team member’s relative contribution for each project."
  },
  {
    "objectID": "course-syllabus.html#graduate-requirements-for-info-5312",
    "href": "course-syllabus.html#graduate-requirements-for-info-5312",
    "title": "Syllabus",
    "section": "Graduate requirements for INFO 5312",
    "text": "Graduate requirements for INFO 5312\nStudents in INFO 5312 have additional expectations in the course:\n\nINFO 5312 homework will at times be graded against a more stringent rubric\nINFO 5312 students will be grouped together for all projects\nProject rubric line items will have more stringent criteria for INFO 5312 students\nINFO 5312 students will complete an additional individual project during the semester\n\nThe final course grade for students registered in INFO 5312 will be calculated as follows:\n\n\n\nCategory\nPercentage\n\n\n\n\nHomework\n40%\n\n\nProject 1\n15%\n\n\nProject 2\n25%\n\n\nIndividual project\n20%\n\n\n\nThe final letter grade will be determined using the same thresholds as for INFO 3312."
  },
  {
    "objectID": "course-syllabus.html#course-policies",
    "href": "course-syllabus.html#course-policies",
    "title": "Syllabus",
    "section": "Course policies",
    "text": "Course policies\n\nAcademic honesty\nTL;DR: Don’t cheat!\nPlease abide by the following as you work on assignments in this course:\n\nYou may discuss individual homework assignments with other students; however, you may not directly share (or copy) code or write up with other students. Unauthorized sharing (or copying) of the code or write up will be considered a violation for all students involved.\nReusing code: Unless explicitly stated otherwise, you may make use of online resources (e.g. StackOverflow) for coding examples on assignments. You may not directly copy and paste from these sources, but instead you need to adapt the code to fit your specific task. You must explicitly cite where you obtained the code using a code comment # immediately near the appearance of the reused code in the file. Any recycled code that is discovered and is not explicitly cited will be treated as plagiarism.\nAutomated help: you may use AI code helpers such as GitHub CoPilot and ChatGPT as reference tools only. We recognize that these tools are becoming quite powerful, but relying on them prevents you from meeting the core learning objectives of this course. All code you submit in this class must be written by a human being – you.\n\nAny violations in academic honesty standards as outlined in the Cornell University Code of Academic Integrity and those specific to this course will result in a 0 for the assignment (or possibly more) and will be reported to the College of Engineering Academic Integrity Hearing Board.\n\n\nLate work & extensions\nThe due dates for assignments are there to help you keep up with the course material and to ensure the course staff can provide feedback within a timely manner. We understand that things come up periodically that could make it difficult to submit an assignment by the deadline.\n\nLate work\n\nHomework assignments: A slip day allows you to submit an assignment 24 hours after the deadline and still receive credit without a late penalty. You are provided with a total of 3 slip days for the entire semester. Slip days may be used on homework assignments. You can use up to 1 slip day for a given homework assignment. Note that the lowest homework assignment will be dropped at the end of the semester.\nTo use your slip days, just submit your assignment late. No need to email telling us you are submitting using your slip days. Check Canvas to see how many of your slip days you have used before submitting an assignment late.\nIf you run out of slip days or submit after the slip day deadline, you may submit your homework assignment for up to 70% credit.\nProjects: Late work is not accepted.\n\n\n\n\nRegrade requests\n\nHomework assignments: Regrade requests must be submitted on Gradescope within a week of when an assignment is returned. Regrade requests will be considered if there was an error in the grade calculation or if you feel a correct answer was mistakenly marked as incorrect. Requests to dispute the number of points deducted for an incorrect response will not be considered. Note that by submitting a regrade request, the entire question will be graded which could potentially result in losing points.\nProjects: Copy the template below into an email. Send that email to soltoffbc@cornell.edu.\nSubject:\n\nINFO 3312/5312 (REQUEST) Regrade\n\nEmail Message Template:\n\nNetID: TODO  Team Name: TODO  Assignment: TODO\nDirectly state the mistake(s) in the grading of your assignment. Be specific and specify the total points that you believed should be returned for each mistake. (1-3 brief and concise bullets):\nTODO\n(optional) If necessary, briefly explain why your approach to this assignment is a good choice (1-3 brief and concise bullets):\nTODO\n\nTips:\n\nWhen writing, please be respectful, thoughtful, and professional.\nBe brief and concise. Bullet points are encouraged. Please do not write a lengthy explanation.\nForm and ground your argument based on ideas and principles presented in this course. This is the primary criteria we use to evaluate your regrade request.\nAssume that we made a mistake; avoid accusing us being unfair or punishing you."
  },
  {
    "objectID": "slides/06-coordinates-facets.html#announcements-1",
    "href": "slides/06-coordinates-facets.html#announcements-1",
    "title": "Deep dive: coordinates + facets",
    "section": "Announcements",
    "text": "Announcements\n\nHomework 1 collected\nTeam projects begin tomorrow – look for team assignments in Canvas"
  },
  {
    "objectID": "slides/06-coordinates-facets.html#agenda-for-today",
    "href": "slides/06-coordinates-facets.html#agenda-for-today",
    "title": "Deep dive: coordinates + facets",
    "section": "Agenda for today",
    "text": "Agenda for today\n\nCoordinate systems\nFacets\nGroup collaboration"
  },
  {
    "objectID": "slides/06-coordinates-facets.html#packages-figures",
    "href": "slides/06-coordinates-facets.html#packages-figures",
    "title": "Deep dive: coordinates + facets",
    "section": "Packages + figures",
    "text": "Packages + figures\n\n# load packages\nlibrary(tidyverse)\nlibrary(knitr)\nlibrary(openintro)\nlibrary(palmerpenguins)\nlibrary(ggrepel)\nlibrary(waffle)\nlibrary(broom)\n\n# set default theme for ggplot2\nggplot2::theme_set(ggplot2::theme_minimal(base_size = 14))\n\n# dplyr print min and max\noptions(dplyr.print_max = 6, dplyr.print_min = 6)\n\nYAML options\nknitr:\n  opts_chunk:\n    fig.width: 7\n    fig.asp: 0.618\n    fig.retina: 2\n    dpi: 150\n    out.width: \"80%\""
  },
  {
    "objectID": "slides/06-coordinates-facets.html#coordinate-systems-purpose",
    "href": "slides/06-coordinates-facets.html#coordinate-systems-purpose",
    "title": "Deep dive: coordinates + facets",
    "section": "Coordinate systems: purpose",
    "text": "Coordinate systems: purpose\n\nCombine the two position aesthetics (x and y) to produce a 2d position on the plot:\n\nlinear coordinate system: horizontal and vertical coordinates\npolar coordinate system: angle and radius\nmaps: latitude and longitude\n\nDraw axes and panel backgrounds in coordination with the coordinate systems"
  },
  {
    "objectID": "slides/06-coordinates-facets.html#coordinate-systems-types",
    "href": "slides/06-coordinates-facets.html#coordinate-systems-types",
    "title": "Deep dive: coordinates + facets",
    "section": "Coordinate systems: types",
    "text": "Coordinate systems: types\n\nLinear coordinate systems: preserve the shape of geoms\n\n\ncoord_cartesian(): the default Cartesian coordinate system, where the 2d position of an element is given by the combination of the x and y positions.\ncoord_flip(): Cartesian coordinate system with x and y axes flipped (won’t be using much now that geoms can take aesthetic mappings in x and y axes)\ncoord_fixed(): Cartesian coordinate system with a fixed aspect ratio. (useful only in limited circumstances)\n\n\n\nNon-linear coordinate systems: can change the shapes – a straight line may no longer be straight. The closest distance between two points may no longer be a straight line.\n\n\ncoord_trans(): Apply arbitrary transformations to x and y positions, after the data has been processed by the stat\ncoord_polar(): Polar coordinates\ncoord_map() / coord_quickmap() / coord_sf(): Map projections"
  },
  {
    "objectID": "slides/06-coordinates-facets.html#setting-limits-what-the-plots-say",
    "href": "slides/06-coordinates-facets.html#setting-limits-what-the-plots-say",
    "title": "Deep dive: coordinates + facets",
    "section": "Setting limits: what the plots say",
    "text": "Setting limits: what the plots say\n\nIdentify the differences between each plot. Focus on the range of the x and y axesas well as the contents of the plots.\n\n\n\n\n−+\n04:00\n\n\n\n\n\n\nggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g, color = species)) +\n  geom_point() + geom_smooth() +\n  labs(title = \"Plot 1\")\nggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g, color = species)) +\n  geom_point() + geom_smooth() +\n  scale_x_continuous(limits = c(190, 220)) +\n  scale_y_continuous(limits = c(4000, 5000)) +\n  labs(title = \"Plot 2\")\nggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g, color = species)) +\n  geom_point() + geom_smooth() +\n  xlim(190, 220) + ylim(4000, 5000) +\n  labs(title = \"Plot 3\")\nggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g, color = species)) +\n  geom_point() + geom_smooth() +\n  coord_cartesian(xlim = c(190,220), ylim = c(4000, 5000)) +\n  labs(title = \"Plot 4\")"
  },
  {
    "objectID": "slides/06-coordinates-facets.html#setting-limits-what-the-warnings-say",
    "href": "slides/06-coordinates-facets.html#setting-limits-what-the-warnings-say",
    "title": "Deep dive: coordinates + facets",
    "section": "Setting limits: what the warnings say",
    "text": "Setting limits: what the warnings say\n\nggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g, color = species)) +\n  geom_point() + geom_smooth() +\n  labs(title = \"Plot 1\")\n## `geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n## Warning: Removed 2 rows containing non-finite values (`stat_smooth()`).\n## Warning: Removed 2 rows containing missing values (`geom_point()`).\n\nggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g, color = species)) +\n  geom_point() + geom_smooth() +\n  scale_x_continuous(limits = c(190, 220)) +\n  scale_y_continuous(limits = c(4000, 5000)) +\n  labs(title = \"Plot 2\")\n## `geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n## Warning: Removed 235 rows containing non-finite values (`stat_smooth()`).\n## Warning: Removed 235 rows containing missing values (`geom_point()`).\n\nggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g, color = species)) +\n  geom_point() + geom_smooth() +\n  xlim(190, 220) + ylim(4000, 5000) +\n  labs(title = \"Plot 3\")\n## `geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n## Warning: Removed 235 rows containing non-finite values (`stat_smooth()`).\n## Removed 235 rows containing missing values (`geom_point()`).\n\nggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g, color = species)) +\n  geom_point() + geom_smooth() +\n  coord_cartesian(xlim = c(190,220), ylim = c(4000, 5000)) +\n  labs(title = \"Plot 4\")\n## `geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n## Warning: Removed 2 rows containing non-finite values (`stat_smooth()`).\n## Warning: Removed 2 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "slides/06-coordinates-facets.html#setting-limits",
    "href": "slides/06-coordinates-facets.html#setting-limits",
    "title": "Deep dive: coordinates + facets",
    "section": "Setting limits",
    "text": "Setting limits\n\nSetting scale limits: Any data outside the limits is thrown away\n\nscale_*_continuous(), xlim and ylim arguments\nxlim() and ylim()\n\nSetting coordinate system limits: Use all the data, but only display a small region of the plot (zooming in)\n\ncoord_cartesian(), xlim and ylim arguments"
  },
  {
    "objectID": "slides/06-coordinates-facets.html#fixing-aspect-ratio-with-coord_fixed",
    "href": "slides/06-coordinates-facets.html#fixing-aspect-ratio-with-coord_fixed",
    "title": "Deep dive: coordinates + facets",
    "section": "Fixing aspect ratio with coord_fixed()",
    "text": "Fixing aspect ratio with coord_fixed()\nUseful when having an aspect ratio of 1 makes sense, e.g. scores on two tests (reading and writing) on the same scale (0 to 100 points)\n\n\nggplot(hsb2, aes(x = read, y = write)) +\n  geom_point() + geom_smooth(method = \"lm\") +\n  geom_abline(intercept = 0, slope = 1, linetype = \"dashed\", color = \"gray\") +\n  labs(title = \"Not fixed\")\n\nggplot(hsb2, aes(x = read, y = write)) +\n  geom_point() + geom_smooth(method = \"lm\") +\n  geom_abline(intercept = 0, slope = 1, linetype = \"dashed\", color = \"gray\") +\n  coord_fixed() +\n  labs(title = \"Fixed\")"
  },
  {
    "objectID": "slides/06-coordinates-facets.html#fixing-aspect-ratio-with-tunecoord_obs_pred",
    "href": "slides/06-coordinates-facets.html#fixing-aspect-ratio-with-tunecoord_obs_pred",
    "title": "Deep dive: coordinates + facets",
    "section": "Fixing aspect ratio with tune::coord_obs_pred()",
    "text": "Fixing aspect ratio with tune::coord_obs_pred()\n\nCodecoord_cartesian()coord_fixed()coord_obs_pred()\n\n\n\ndata(solubility_test, package = \"modeldata\")\n\np <- ggplot(solubility_test, aes(x = solubility, y = prediction)) +\n  geom_abline(lty = 2) +\n  geom_point(alpha = 0.5)\n\n\n\n\np + coord_cartesian()\n\n\n\n\n\n\n\n\n\n\n\np + coord_fixed()\n\n\n\n\n\n\n\n\n\n\n\np + tune::coord_obs_pred()"
  },
  {
    "objectID": "slides/06-coordinates-facets.html#transformations",
    "href": "slides/06-coordinates-facets.html#transformations",
    "title": "Deep dive: coordinates + facets",
    "section": "Transformations",
    "text": "Transformations\n\nRaw axesscale_*_log10()coord_trans()log()\n\n\n\n\nggplot(penguins, aes(x = bill_depth_mm, y = body_mass_g)) +\n  geom_point() + geom_smooth(method = \"lm\") +\n  labs(title = \"Plot 1\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(penguins, aes(x = bill_depth_mm, y = body_mass_g)) +\n  geom_point() + geom_smooth(method = \"lm\") +\n  scale_x_log10() + scale_y_log10() +\n  labs(title = \"Plot 2\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(penguins, aes(x = bill_depth_mm, y = body_mass_g)) +\n  geom_point() + geom_smooth(method = \"lm\") +\n  coord_trans(x = \"log10\", y = \"log10\") +\n  labs(title = \"Plot 3\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = log(bill_depth_mm, base = 10),\n    y = log(body_mass_g, base = 10)\n  )\n) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  labs(title = \"Plot 4\")"
  },
  {
    "objectID": "slides/06-coordinates-facets.html#pie-charts-and-bullseye-charts-with-coord_polar",
    "href": "slides/06-coordinates-facets.html#pie-charts-and-bullseye-charts-with-coord_polar",
    "title": "Deep dive: coordinates + facets",
    "section": "Pie charts and bullseye charts with coord_polar()",
    "text": "Pie charts and bullseye charts with coord_polar()\n\n\nggplot(penguins, aes(x = 1, fill = species)) +\n  geom_bar() +\n  labs(title = \"Stacked bar chart\")\n\nggplot(penguins, aes(x = 1, fill = species)) +\n  geom_bar() +\n  coord_polar(theta = \"y\") +\n  labs(title = \"Pie chart\")\n\nggplot(penguins, aes(x = 1, fill = species)) +\n  geom_bar() +\n  coord_polar(theta = \"x\") +\n  labs(title = \"Bullseye chart\")"
  },
  {
    "objectID": "slides/06-coordinates-facets.html#pie-charts",
    "href": "slides/06-coordinates-facets.html#pie-charts",
    "title": "Deep dive: coordinates + facets",
    "section": "Pie charts",
    "text": "Pie charts\n\nWhat do you know about pie charts and data visualization best practices? Love ’em or lose ’em?"
  },
  {
    "objectID": "slides/06-coordinates-facets.html#pie-charts-when-to-love-em-when-to-lose-em",
    "href": "slides/06-coordinates-facets.html#pie-charts-when-to-love-em-when-to-lose-em",
    "title": "Deep dive: coordinates + facets",
    "section": "Pie charts: when to love ’em, when to lose ’em",
    "text": "Pie charts: when to love ’em, when to lose ’em\n\n\n❤️ For categorical variables with few levels, pie charts can work well\n\n💔 For categorical variables with many levels, pie charts are difficult to read"
  },
  {
    "objectID": "slides/06-coordinates-facets.html#waffle-charts",
    "href": "slides/06-coordinates-facets.html#waffle-charts",
    "title": "Deep dive: coordinates + facets",
    "section": "Waffle charts",
    "text": "Waffle charts\n\nLike with pie charts, work best when the number of levels represented is low\nUnlike pie charts, easier to compare proportions that represent non-simple fractions"
  },
  {
    "objectID": "slides/06-coordinates-facets.html#waffle-charts-making-of",
    "href": "slides/06-coordinates-facets.html#waffle-charts-making-of",
    "title": "Deep dive: coordinates + facets",
    "section": "Waffle charts: making of",
    "text": "Waffle charts: making of\n\n\nlibrary(waffle)\n\npenguins |>\n  count(species) |>\n  ggplot(aes(fill = species, values = n)) +\n  geom_waffle(color = \"white\",\n              flip = TRUE,\n              make_proportional = TRUE) +\n  labs(fill = NULL,\n       title = \"Penguin species\")"
  },
  {
    "objectID": "slides/06-coordinates-facets.html#waffle-charts-enhanced-theme",
    "href": "slides/06-coordinates-facets.html#waffle-charts-enhanced-theme",
    "title": "Deep dive: coordinates + facets",
    "section": "Waffle charts: enhanced theme",
    "text": "Waffle charts: enhanced theme\n\n\npenguins |>\n  count(species) |>\n  ggplot(aes(fill = species, values = n)) +\n  geom_waffle(color = \"white\", flip = TRUE, make_proportional = TRUE) +\n  labs(fill = NULL, title = \"Penguin species\") +\n  theme_enhance_waffle()"
  },
  {
    "objectID": "slides/06-coordinates-facets.html#coord_quickmap",
    "href": "slides/06-coordinates-facets.html#coord_quickmap",
    "title": "Deep dive: coordinates + facets",
    "section": "coord_quickmap()",
    "text": "coord_quickmap()\n.pull-left-narrow[ - Approximation that sets the aspect ratio to ensure that 1m of latitude and 1m of longitude are the same distance in the middle of the plot - Reasonable for smaller regions - Fast] .pull-right-wide[ .panelset[ .panel[.panel-name[Cartesian]\n\nggplot(map_data(\"italy\"), aes(long, lat, group = group)) +\n  geom_polygon(fill = \"white\", color = \"#008c45\") +\n  labs(x = NULL, y = NULL)\n\n\n\n\n\n\n\n\n] .panel[.panel-name[Quickmap]\n\nggplot(map_data(\"italy\"), aes(long, lat, group = group)) +\n  geom_polygon(fill = \"white\", color = \"#008c45\") +\n  labs(x = NULL, y = NULL) +\n  coord_quickmap()\n\n\n\n\n\n\n\n\n] ] ]"
  },
  {
    "objectID": "slides/06-coordinates-facets.html#coord_map",
    "href": "slides/06-coordinates-facets.html#coord_map",
    "title": "Deep dive: coordinates + facets",
    "section": "coord_map()",
    "text": "coord_map()\n.pull-left-narrow[ - Uses the mapproj package - Uses Mercator projection by default, with many other options via mapproj::mapproject() - Slower than coord_quickmap()] .pull-right-wide[ .panelset[ .panel[.panel-name[Cartesian]\n\nggplot(map_data(\"state\"), aes(long, lat, group = group)) +\n  geom_polygon(fill = \"white\", color = \"#3c3b6e\") +\n  labs(x = NULL, y = NULL)\n\n\n\n\n\n\n\n\n] .panel[.panel-name[Mercator]\n\nggplot(map_data(\"state\"), aes(long, lat, group = group)) +\n  geom_polygon(fill = \"white\", color = \"#3c3b6e\") +\n  labs(x = NULL, y = NULL) +\n  coord_map()\n\n\n\n\n\n\n\n\n] .panel[.panel-name[Stereographic]\n\nggplot(map_data(\"state\"), aes(long, lat, group = group)) +\n  geom_polygon(fill = \"white\", color = \"#3c3b6e\") +\n  labs(x = NULL, y = NULL) +\n  coord_map(projection = \"stereographic\")\n\n\n\n\n\n\n\n\n] ] ]"
  },
  {
    "objectID": "slides/06-coordinates-facets.html#facet_",
    "href": "slides/06-coordinates-facets.html#facet_",
    "title": "Deep dive: coordinates + facets",
    "section": "facet_*()",
    "text": "facet_*()\n\n\n\nfacet_wrap()\n\n“wraps” a 1d ribbon of panels into 2d\ngenerally for faceting by a single variable\n\nfacet_grid() for faceting\n\nproduces a 2d grid of panels defined by variables which form the rows and columns\ngenerally for faceting by two variables\n\nfacet_null(): a single plot, the default"
  },
  {
    "objectID": "slides/06-coordinates-facets.html#free-the-scales",
    "href": "slides/06-coordinates-facets.html#free-the-scales",
    "title": "Deep dive: coordinates + facets",
    "section": "Free the scales!",
    "text": "Free the scales!\n\n\np <- ggplot(penguins, aes(x = flipper_length_mm,\n                          y = body_mass_g)) +\n  geom_point()\n\np + \n  facet_wrap(vars(species)) + \n  labs(title = \"Same scales\")\np + \n  facet_wrap(vars(species),\n             scales = \"free\") +\n  labs(title = \"Free scales\")"
  },
  {
    "objectID": "slides/06-coordinates-facets.html#free-some-scales",
    "href": "slides/06-coordinates-facets.html#free-some-scales",
    "title": "Deep dive: coordinates + facets",
    "section": "Free some scales",
    "text": "Free some scales\n\n\np +\n  facet_wrap(vars(species),\n             scales = \"free_x\") +\n  labs(title = \"Free x scale\")\n\np +\n  facet_wrap(vars(species),\n             scales = \"free_y\") +\n  labs(title = \"Free x scale\")"
  },
  {
    "objectID": "slides/06-coordinates-facets.html#free-spaces",
    "href": "slides/06-coordinates-facets.html#free-spaces",
    "title": "Deep dive: coordinates + facets",
    "section": "Free spaces",
    "text": "Free spaces\n\nggplot(penguins, aes(y = species, x = body_mass_g, fill = species)) +\n  geom_boxplot(show.legend = FALSE) +\n  facet_grid(island ~ ., scales = \"free_y\", space = \"free\") +\n  labs(title = \"Free y scale and spacing\")"
  },
  {
    "objectID": "slides/06-coordinates-facets.html#highlighting-across-facets",
    "href": "slides/06-coordinates-facets.html#highlighting-across-facets",
    "title": "Deep dive: coordinates + facets",
    "section": "Highlighting across facets",
    "text": "Highlighting across facets\n\npenguins_sans_species <- penguins |> select(-species)\n\nggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g)) +\n  geom_point(data = penguins_sans_species, color = \"gray\") +\n  geom_point(aes(color = species)) +\n  facet_wrap(vars(species))"
  },
  {
    "objectID": "slides/06-coordinates-facets.html#complete-themes",
    "href": "slides/06-coordinates-facets.html#complete-themes",
    "title": "Deep dive: coordinates + facets",
    "section": "Complete themes",
    "text": "Complete themes"
  },
  {
    "objectID": "slides/06-coordinates-facets.html#themes-from-ggthemes",
    "href": "slides/06-coordinates-facets.html#themes-from-ggthemes",
    "title": "Deep dive: coordinates + facets",
    "section": "Themes from ggthemes",
    "text": "Themes from ggthemes"
  },
  {
    "objectID": "slides/06-coordinates-facets.html#themes-and-color-scales-from-ggthemes",
    "href": "slides/06-coordinates-facets.html#themes-and-color-scales-from-ggthemes",
    "title": "Deep dive: coordinates + facets",
    "section": "Themes and color scales from ggthemes",
    "text": "Themes and color scales from ggthemes\n\np + \n  aes(color = species) +\n  scale_color_wsj() +\n  theme_wsj() + \n  labs(title = \"Wall Street Journal\")"
  },
  {
    "objectID": "slides/06-coordinates-facets.html#modifying-theme-elements",
    "href": "slides/06-coordinates-facets.html#modifying-theme-elements",
    "title": "Deep dive: coordinates + facets",
    "section": "Modifying theme elements",
    "text": "Modifying theme elements\n\np + \n  labs(title = \"Palmer penguins\") +\n  theme(\n    plot.title = element_text(color = \"red\", face = \"bold\", family = \"Comic Sans MS\"),\n    plot.background = element_rect(color = \"red\", fill = \"mistyrose\")\n  )"
  },
  {
    "objectID": "slides/06-coordinates-facets.html#project-1-1",
    "href": "slides/06-coordinates-facets.html#project-1-1",
    "title": "Deep dive: coordinates + facets",
    "section": "Project #1",
    "text": "Project #1\n\n\n\nInitial proposal\nDevelop as a team\nTake chances, make mistakes, get messy!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n🔗 info3312.infosci.cornell.edu"
  }
]