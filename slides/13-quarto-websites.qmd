---
title: "Publishing reproducible websites with Quarto"
subtitle: "Lecture 13"
date: "March 9, 2023"
format: revealjs
---

```{r}
#| label: setup
#| include: false
#| cache: false

source(here::here("slides", "_R", "slide-opts.R"))
library(patchwork)
```

# Announcements

## Announcements

- No lab tomorrow
- Working on project \#1 grades

# Websites using Quarto

## Websites

-   Websites are essentially `format: html` + a Quarto Project

. . .

-   Website is different than `format: html` in that it has *multiple pages*
-   Website is our first exploration into Quarto Projects
    - Similar to R Projects, but for Quarto!

## Why not WordPress, Tumblr, Medium.com, Blogger.com, etc?[^1]

[^1]: From Yihui: <https://slides.yihui.name/2017-rmarkdown-UNL-Yihui-Xie.html#36>

-   No Quarto support (even math support is often nonexistent or awkward)

-   Huge benefits of static websites compared to dynamic websites

-   all static files, no PHP or databases, no login/password, work everywhere (even offline)

-   typically fast to visit (no computation needed on the server side), and easy to speed up via CDN

## RStudio \> New Project \> New Quarto Blog

![](images/13/quarto-blog.png){fig-align="center" width=800}

## Navigation & Structure

| File                  | Description                |
|:----------------------|:---------------------------|
| `_quarto.yml`         | Quarto project file.       |
| `index.qmd`           | Blog home page.            |
| `about.qmd`           | Blog about page.           |
| `posts/`              | Directory containing posts |
| `posts/_metadata.yml` | Shared options for `posts` |
| `styles.css`          | Custom CSS for website     |

## Create a blog

-   A blog is a website with specific "opinions" already made
-   Includes a listing automatically from `posts` directory
-   Can build custom listings in several ways

## 

![](https://quarto.org/docs/websites/images/myblog.png){fig-align="center"}

## Core blog workflow

-   Create a new folder under `/posts` - this folder will be the "slug" URL (like `bensoltoff.com/2023-03-09-new-post/`)
-   Create a new `index.qmd` within the new folder

## `r fontawesome::fa("laptop-code")` Your Turn

-   Create a new RStudio project (in a separate RStudio session) and select Quarto blog
-   Give it a name
-   Explore the directory

## Rendering posts

-   On a specific post, Render with RStudio \> Render
-   Build tab \> Render/Preview Website

These will preview the entire website

. . .

When you render the website, it will re-execute code in older posts. Not ideal in many situations!

## `r fontawesome::fa("laptop-code")` Your Turn

-   Let's render the `index.qmd` together!
-   Now, let's try Build \> Render Website

## Freeze

> You can use the freeze option to denote that computational documents should never be re-rendered during a global project render, or alternatively only be re-rendered when their source file changes

. . .

``` yaml
execute:
  freeze: true  # never re-render during project render
```

``` yaml
execute:
  freeze: auto  # re-render only when source changes
```

. . .

`freeze: true` is typically added to a `_metadata.yml` file within a specific directory, affecting all files in that directory.

In the case of a blog - the `_metadata.yml` is saved at the root of the `posts` directory. You can have it only within specific subdirectories for more complex sites.

## Cache

Cache on the other hand, stores the results of computations for a specific file.

> Note that cache invalidation is triggered by changes in chunk source code (or other cache attributes you've defined).

``` yaml
execute:
  cache: true
```

. . .

I typically use cache throughout various types of outputs when I have computationally expensive chunks.

## `r fontawesome::fa("laptop-code")` Your Turn

-   Render `index.qmd` in the project directory and note the items that are built

-   Explore the `_freeze` directory

. . .

-   Marvel at the "beautiful" JSON - it's not for you, it's for the machine

## Themes

<https://quarto.org/docs/websites/website-blog.html#themes>

[default](https://bootswatch.com/default/), [cerulean](https://bootswatch.com/cerulean/), [cosmo](https://bootswatch.com/cosmo/), [cyborg](https://bootswatch.com/cyborg/), [darkly](https://bootswatch.com/darkly/), [flatly](https://bootswatch.com/flatly/), [journal](https://bootswatch.com/journal/), [litera](https://bootswatch.com/litera/), [lumen](https://bootswatch.com/lumen/), [lux](https://bootswatch.com/lux/), [materia](https://bootswatch.com/materia/), [minty](https://bootswatch.com/minty/), [morph](https://bootswatch.com/morph/), [pulse](https://bootswatch.com/pulse/), [quartz](https://bootswatch.com/quartz/), [sandstone](https://bootswatch.com/sandstone/), [simplex](https://bootswatch.com/simplex/), [sketchy](https://bootswatch.com/sketchy/), [slate](https://bootswatch.com/slate/), [solar](https://bootswatch.com/solar/), [spacelab](https://bootswatch.com/spacelab/), [superhero](https://bootswatch.com/superhero/), [united](https://bootswatch.com/united/), [vapor](https://bootswatch.com/vapor/), [yeti](https://bootswatch.com/yeti/), [zephyr](https://bootswatch.com/zephyr/)

. . .

To change theme, modify the bottom of your website's `_quarto.yml`

``` yaml
format:
  html:
    theme: cosmo
```

## Themes

::: {.r-stack}

![](https://quarto.org/docs/websites/images/theme-litera.png){.fragment}

![](https://quarto.org/docs/websites/images/theme-solar.png){.fragment}

![](https://quarto.org/docs/websites/images/theme-morph.png){.fragment}

:::

## `r fontawesome::fa("laptop-code")` Your Turn

-   Open `_quarto.yml` and change the theme to one of the support Bootswatch themes
-   Create a new folder in `/posts/` - title it `2023-03-09-my-first-post`
-   Create a new blank `index.qmd` in that folder, add a `format: html` YAML header
-   Add some text and a markdown image: `![]()`, along with maybe some code
-   Render it!

## Adding an About page

``` yaml
twitter-card:
  image: images/profile-preview.png
  creator: "@soltoffbc"
open-graph: true
title: "Benjamin Soltoff"
image: images/profile-preview.png
about:
  template: trestles
  links:
    - icon: twitter
      text: Twitter
      href: https://twitter.com/soltoffbc
    - icon: github
      text: Github
      href: https://github.com/bensoltoff
```

## About page templates

``` yaml
about:
  template: trestles
```

::: panel-tabset
## jolla

![](https://quarto.org/docs/websites/images/about-jolla.png){fig-align="center"}

## trestles

![](https://quarto.org/docs/websites/images/about-trestles.png){fig-align="center"}

## solana

![](https://quarto.org/docs/websites/images/about-solana.png){fig-align="center"}

## marquee

![](https://quarto.org/docs/websites/images/about-marquee.png){fig-align="center"}

## broadside

![](https://quarto.org/docs/websites/images/about-broadside.png){fig-align="center"}

:::

## `r fontawesome::fa("laptop-code")` Your Turn

-   Open your about page (`about.qmd`)
-   Change some of the details, add more details and choose a specific template (jolla, trestles, solana, marquee, broadside)
-   Render it!

## Landing page

-   The landing page for your website defaults to the blog/listings page
-   `your-proj/index.qmd` becomes your "home page"

. . .

-  If you want your "About Me" page to be the landing page, rename your `index.qmd` -\> `blog.qmd` and `about.qmd` -\> `index.qmd`

. . .

-   Re-structuring your website also requires modifying your `_quarto.yml`

``` yaml
website:
  title: "My blog name"
  site-url: "https://MyBlogSiteUrl.com"
  navbar:
    right:
     - blog.qmd
     - icon: twitter
       href: "https://twitter.com/my_user_name"
```

Example: <https://www.ericekholm.com/posts/demo-quarto-site/>

## Listings

![](https://quarto.org/docs/websites/images/myblog.png){.r-stretch fig-align="center"}

## Listings

|  Type   | Description                 |
|:-------:|:----------------------------|
| default | A blog style list of items. |
|  table  | A table of listings.        |
|  grid   | A grid of listing cards.    |

## Listings

::: panel-tabset
## Default

> By default, listings will appear in full width rows that display the item's metadata (author and date), title, description, and image.

<img src="https://quarto.org/docs/websites/images/listing-default.png" height="400px"/>

## Grid

> Grid style listings display a card for each item.

<img src="https://quarto.org/docs/websites/images/listing-grid.png" height="400px"/>

## Table

> The table listing style provides a traditional tabular layout.

<img src="https://quarto.org/docs/websites/images/listing-table.png" height="400px"/>
:::

## `r fontawesome::fa("laptop-code")` Your Turn

-   Open your existing Quarto blog from before
-   Let's change the listing type of our blog - change from default to `grid`
-   Re-render the `index.qmd`

## Publishing

| Destination                                                                | Description                                                                                                                                                                                     |
|----------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| [GitHub Pages](https://quarto.org/docs/publishing/github-pages.html)       | Publish content based on source code managed within a GitHub repository. Use GitHub Pages when the source code for your document or site is hosted on GitHub.                                   |
| [RStudio Connect](https://quarto.org/docs/publishing/rstudio-connect.html) | Publishing platform for secure sharing of data products within an organization. Use RStudio Connect when you want to publish content within an organization rather than on the public internet. |
| [Netlify](https://quarto.org/docs/publishing/netlify.html)                 | Professional web publishing platform. Use Netlify when you want support for custom domains, authentication, previewing branches, and other more advanced capabilities.                          |
| [Other Services](https://quarto.org/docs/publishing/other.html)            | Content rendered with Quarto uses standard formats (HTML, PDFs, MS Word, etc.) that can be published anywhere. Use this if one of the methods above don't meet your requirements.               |

## Publishing

### Static Only

-   `quarto` R package: `quarto::quarto_publish_???()`

### Code

-   Evaluate R/Python code and render on a schedule

-   RStudio Connect

-   `rsconnect::deployDoc(quarto = "path/to/quarto")`

    -   `rsconnect::deployDoc(quarto = quarto::quarto_path())`

## Static Publish

-   `quarto::quarto_publish_???()`

    -   `quarto_publish_site(server = "rstudioconnect.example.com")`
    -   `quarto_publish_doc(server = "rpubs.com")`
    -   `quarto_publish_app(server = "shinyapps.io")`

## Netlify

-   Cheat code: Netlify drop

<iframe src="https://www.netlify.com/" height="600" width="1200">

</iframe>

## GitHub Pages

-   Render contents locally with the "Build Website" button
-   Stage/commit/push the rendered files to GitHub -- site built automatically

## Websites

Similar to blog, but less of a focus on listing/posts and more focus on individual pages and overall navigation.

## Quarto Project

-   <https://quarto.org/docs/projects/quarto-projects.html>

> When you create a project, a \_quarto.yml config file is created. Here is an example of what the \_quarto.yml looks like:

``` yaml
project:
  output-dir: _output

toc: true
number-sections: true
bibliography: references.bib  
  
format: #< default format inherited by other documents
  html:
    css: styles.css
```

## Quarto Projects

-   Minimal project has at least 1x file and 1x `_quarto.yml`
-   A project is a directory (and can have sub-directories)

. . .

A typical project is used to:

-   Aggregate content (website/blog/book)\
-   Share metadata (YAML config) across multiple files\
-   Render an entire directory together or redirect output to another directory\
-   Freeze computation across a project or team

. . .

- [Our course website](https://github.com/info-3312/course-site-s23)
