---
title: "Look at data"
subtitle: "Lecture 3"
date: "January 31, 2023"
format: revealjs
---

```{r}
#| label: setup
#| include: false
#| cache: false

source(here::here("slides", "_R", "slide-opts.R"))
ggplot2::theme_set(ggplot2::theme_gray(base_size = 14))

library(tidyverse)
```

# Take a sad plot, and make it better

---

::: {.appex .small}
The American Association of 
University Professors (AAUP) is a nonprofit membership association of faculty 
and other academic professionals. 
[This report](https://www.aaup.org/sites/default/files/files/AAUP_Report_InstrStaff-75-11_apr2013.pdf) 
by the AAUP shows trends in instructional staff employees between 1975 
and 2011, and contains an image very similar to the one given below.
:::

```{r}
#| echo: false
include_graphics("images/02/staff-employment.png")
```

---

::: small
Each row in this dataset represents a faculty type, and the columns are the years for which we have data. 
The values are percentage of hires of that type of faculty for each year.

:::

```{r}
#| label: load-data-staff
staff <- read_csv("data/instructional-staff.csv")
staff
```

## Recreate the visualization

In order to recreate this visualization we need to first reshape the data to have one variable for faculty type and one variable for year. In other words, we will convert the data from the long format to wide format. 

But before we do so... 

::: appex
If the long data will have a row for each year/faculty type combination, and there are 5 faculty types and 11 years of data, how many rows will the data have?
:::

---

```{r}
#| echo: false
include_graphics("images/02/pivot.gif")
```

## `pivot_*()` function

```{r}
#| out-width: 50%
#| echo: false
include_graphics("https://raw.githubusercontent.com/gadenbuie/tidyexplain/main/images/tidyr-pivoting.gif")
```

## `pivot_longer()`

```{r}
#| eval: false
pivot_longer(data, cols, names_to = "name", values_to = "value")
```

- The first argument is `data` as usual.
- The second argument, `cols`, is where you specify which columns to pivot 
into longer format -- in this case all columns except for the `faculty_type` 
- The third argument, `names_to`, is a string specifying the name of the column to create from the data stored in the column names of data -- in this case `year`
- The fourth argument, `values_to`, is a string specifying the name of the column to create from the data stored in cell values, in this case `percentage`

## Pivot instructor data

```{r}
library(tidyverse)

staff_long <- staff |>
  pivot_longer(cols = -faculty_type, names_to = "year", 
               values_to = "percentage") |>
  mutate(percentage = as.numeric(percentage))

staff_long
```

---

::: {.appex .small}
This doesn't look quite right, how would you fix it?
:::

::: {.small}

```{r}
#| fig-height: 2.0
staff_long |>
  ggplot(aes(x = percentage, y = faculty_type, color = year)) +
  geom_col(position = "dodge")
```

:::

---

::: {.small}

```{r}
#| fig-height: 2.0
staff_long |>
  ggplot(aes(x = percentage, y = faculty_type, fill = year)) +
  geom_col(position = "dodge")
```

:::

## Some improvement...

::: {.small}

```{r}
#| out-width: 60%
staff_long |>
  ggplot(aes(x = percentage, y = year, fill = faculty_type)) +
  geom_col()
```

:::

## More improvement

::: {.small}

```{r}
#| out-width: 100%
#| fig-asp: 0.4
#| fig-width: 7.0
staff_long |>
  ggplot(aes(x = year, y = percentage, group = faculty_type, 
             color = faculty_type)) +
  geom_line() +
  theme_minimal()
```

:::


## Goal: even more improvement!

::: appex
I want to achieve the following look but I have no idea how!
:::

```{r}
#| label: instructor-lines-for-show
#| echo: false
#| out-width: 60%
include_graphics("images/02/sketch.png")
```

## Asking good questions

- Describe what you want
- Describe where you are
- Create a minimal **repr**oducible **ex**ample: `reprex::reprex()`

---

::: {.panel-tabset}

### Plot

```{r}
#| ref.label: instructor-lines
#| echo: false
#| fig-width: 7.0
#| out-width: 100%
#| fig-asp: 0.5
```

### Code

::: small

```{r}
#| label: instructor-lines
#| fig-show: hide
#| code-line-numbers: "4-9,12-13,17-18,24"

library(scales)

staff_long |>
  mutate(
    part_time = if_else(faculty_type == "Part-Time Faculty",
      "Part-Time Faculty", "Other Faculty"
    ),
    year = as.numeric(year)
  ) |>
  ggplot(aes(
    x = year,
    y = percentage / 100,
    group = faculty_type,
    color = part_time
  )) +
  geom_line() +
  scale_color_manual(values = c("gray", "red")) +
  scale_y_continuous(labels = label_percent(accuracy = 1)) +
  theme_minimal() +
  labs(
    title = "Instructional staff employment trends",
    x = "Year", y = "Percentage", color = NULL
  ) +
  theme(legend.position = "bottom")
```

:::

:::

# A/B testing

## Data: College education costs

:::: columns

::: {.column width="50%"}

- Data on four year colleges and universities in the United States (2020-21)

- Extracted from College Scorecard API

- Source: `rcis::scorecard`

:::

::: {.column width="50%"}

{{< tweet ColIegeStudent 829377468595306500 >}}

:::

::::

## `rcis::scorecard`

```{r}
library(tidyverse)
# remotes::install_github("cis-ds/rcis")
library(rcis)

glimpse(scorecard)
```

## A simple visualization

::: {.panel-tabset}

### Code

```{r}
#| label: simple-viz
#| fig-show: hide
#| fig-asp: 0.5
ggplot(scorecard, aes(x = avgfacsal, y = netcost)) +
  geom_point(alpha = 0.5, size = 2) +
  geom_smooth(method = "lm", se = FALSE, size = 0.7) +
  labs(
    x = "Average faculty salary (USD)",
    y = "Net cost of attendance (USD)",
    title = "Faculty salaries and net cost of attendance in US universities"
  )
```

### Plot

```{r}
#| ref.label: simple-viz
#| echo: false
```

:::

## New variable: `pctpell_cat`

```{r}
scorecard <- scorecard |>
  mutate(pctpell_cat = cut_interval(x = pctpell, n = 6)) |>
  drop_na(pctpell_cat)

scorecard |>
  select(pctpell, pctpell_cat)
```

## Distribution of `pctpell_cat`

```{r}
scorecard <- scorecard |>
  mutate(pctpell_cat = cut_interval(x = pctpell, n = 6)) |>
  drop_na(pctpell_cat)

scorecard |>
  count(pctpell_cat)
```

## A slightly more complex visualization

::: {.panel-tabset}

### Code

```{r}
#| label: slight-complex-viz
#| fig-show: hide
ggplot(scorecard, aes(x = avgfacsal, y = netcost, color = pctpell_cat)) +
  geom_point(alpha = 0.5, show.legend = FALSE) +
  geom_smooth(method = "lm", se = FALSE, size = 0.5, show.legend = FALSE) +
  facet_wrap(vars(pctpell_cat)) +
  labs(
    x = "Average faculty salary (USD)",
    y = "Net cost of attendance (USD)",
    color = "Percentage of Pell grant recipients",
    title = "Faculty salaries and net cost of attendance in US universities"
  )
```

### Plot

```{r}
#| ref.label: slight-complex-viz
#| echo: false
```

:::

---

::: {.appex .center}

In the next two slides, the same plots are created with different "cosmetic" choices. Examine the plots two given (Plot A and Plot B), and decide which one you prefer.

:::

## Test 1

::: {.panel-tabset}

### Plot A

```{r}
#| label: test-1-a
#| echo: false
#| out.width: 90%
#| fig.asp: 0.5
#| fig.width: 10.0
#| code-line-numbers: "11-16"
ggplot(scorecard, aes(x = avgfacsal, y = netcost, color = pctpell_cat)) +
  geom_point(alpha = 0.5, show.legend = FALSE) +
  geom_smooth(method = "lm", se = FALSE, size = 0.5, show.legend = FALSE) +
  facet_wrap(vars(pctpell_cat)) +
  labs(
    x = "Average faculty salary (USD)",
    y = "Net cost of attendance (USD)",
    color = "Percentage of Pell grant recipients",
    title = "Faculty salaries and net cost of attendance in US universities"
  ) +
  theme_dark(base_size = 16) +
  scale_color_manual(values = c("yellow", "blue", "orange", "red", "green", "white")) +
  theme(
    text = element_text(color = "red", face = "bold.italic"),
    plot.background = element_rect(fill = "yellow")
  )
```

### Plot B

```{r}
#| label: test-1-b
#| echo: false
#| out.width: 90%
#| fig.asp: 0.5
#| fig.width: 10.0
#| code-line-numbers: "11-12"
ggplot(scorecard, aes(x = avgfacsal, y = netcost, color = pctpell_cat)) +
  geom_point(alpha = 0.5, show.legend = FALSE) +
  geom_smooth(method = "lm", se = FALSE, size = 0.5, show.legend = FALSE) +
  facet_wrap(vars(pctpell_cat)) +
  labs(
    x = "Average faculty salary (USD)",
    y = "Net cost of attendance (USD)",
    color = "Percentage of Pell grant recipients",
    title = "Faculty salaries and net cost of attendance in US universities"
  ) +
  theme_minimal(base_size = 16) +
  scale_color_viridis_d(end = 0.9)
```

:::

## Test 2

::: {.panel-tabset}

### Plot A

```{r}
#| ref.label: test-1-b
#| echo: false
#| out-width: 90%
#| fig-asp: 0.5
#| fig-width: 10.0
```

### Plot B

```{r}
#| label: test-2-b
#| echo: false
#| out.width: 90%
#| fig.asp: 0.5
#| fig.width: 10.0
#| code-line-numbers: "12"
ggplot(scorecard, aes(x = avgfacsal, y = netcost, color = pctpell_cat)) +
  geom_point(alpha = 0.5, show.legend = FALSE) +
  geom_smooth(method = "lm", se = FALSE, size = 0.5, show.legend = FALSE) +
  facet_wrap(vars(pctpell_cat)) +
  labs(
    x = "Average faculty salary (USD)",
    y = "Net cost of attendance (USD)",
    color = "Percentage of Pell grant recipients",
    title = "Faculty salaries and net cost of attendance in US universities"
  ) +
  theme_minimal(base_size = 16) +
  scale_color_viridis_d(end = 0.8, option = "A")
```

:::

---

::: {.appex .center}
a deeper look at the plotting code...
:::

---

## Minimal theme + viridis scale, default option

::: {.panel-tabset}

### Plot

```{r}
#| ref.label: test-1-b
#| out-width: 90%
#| fig-asp: 0.5
#| fig-width: 10.0
#| echo: false
```

### Code

```{r}
#| ref.label: test-1-b
#| code-line-numbers: "11-12"
#| fig-show: hide
```

:::

## Viridis scale, option A (magma)

::: {.panel-tabset}

### Plot

```{r}
#| ref.label: test-2-b
#| out-width: 90%
#| fig-asp: 0.5
#| fig-width: 10.0
#| echo: false
```

### Code

```{r}
#| ref.label: test-2-b
#| code-line-numbers: "12"
#| fig.show: hide
```

:::

## Dark theme + further theme customization

::: {.panel-tabset}

### Plot

```{r}
#| ref.label: test-1-a
#| out-width: 90%
#| fig-asp: 0.5
#| fig-width: 10.0
#| echo: false
```

### Code

```{r}
#| ref.label: test-1-a
#| code-line-numbers: "11-16"
#| fig-show: hide
```

:::

# What makes bad figures bad?

## Bad taste

```{r}
#| ref.label: test-1-a
#| echo: false
#| out-width: 90%
#| fig-asp: 0.5
#| fig-width: 10.0
```

## Data-to-ink ratio

:::: columns

::: {.column width="67%"}
Tufte strongly recommends maximizing the **data-to-ink ratio** this in the Visual Display of Quantitative Information (Tufte, 1983).

> Graphical excellence is the well-designed presentation of interesting data—a matter of substance, of statistics, and of design … [It] consists of complex ideas communicated with clarity, precision, and efficiency. … [It] is that which gives to the viewer the greatest number of ideas in the shortest time with the least ink in the smallest space … [It] is nearly always multivariate … And graphical excellence requires telling the truth about the data. (Tufte, 1983, p. 51).

:::

::: {.column width="33%"}

```{r}
#| echo: false
#| out-width: 100%
#| fig-align: right
#| fig-alt: Cover of Visual Display of Quantitative Information, Tufte (1983).
knitr::include_graphics("images/03/tufte-visual-display-cover.png")
```

:::

::::

---

::: {.appex}

Which of the plots has higher data-to-ink ratio?

:::

```{r}
#| label: mean-netcost-pctpell-summary
#| include: false
mean_netcost_pctpell <- scorecard |>
  group_by(pctpell_cat) |>
  summarise(mean_netcost = mean(netcost, na.rm = TRUE))

mean_netcost_pctpell
```

::: {.panel-tabset}

### Plot A

```{r}
#| label: mean-netcost-pctpell-a
#| out-width: 70%
#| echo: false
#| code-line-numbers: "2"
ggplot(mean_netcost_pctpell, aes(y = pctpell_cat, x = mean_netcost)) +
  geom_col() +
  labs(
    x = "Mean net cost of attendance", y = "Pell grant recipients",
    title = "Mean net cost of attendance, by Pell grant recipients"
  ) +
  theme_minimal(base_size = 16)
```
]

### Plot B

```{r}
#| label: mean-netcost-pctpell-b
#| out-width: 70%
#| echo: false
#| code-line-numbers: "2"
ggplot(mean_netcost_pctpell, aes(y = pctpell_cat, x = mean_netcost)) +
  geom_point(size = 4) +
  labs(
    x = "Mean net cost of attendance", y = "Pell grant recipients",
    title = "Mean net cost of attendance, by Pell grant recipients"
  ) +
  theme_minimal(base_size = 16)
```

:::

---

::: {.appex .center}
a deeper look at the plotting code...
:::

## Summary statistics

```{r}
#| ref.label: mean-netcost-pctpell-summary
```

## Barplot

::: {.panel-tabset}

### Plot

```{r}
#| ref.label: mean-netcost-pctpell-a
#| out-width: 70%
#| echo: false
```

### Code

```{r}
#| ref.label: mean-netcost-pctpell-a
#| code-line-numbers: "2"
#| fig-show: hide
```

:::

## Scatterplot

::: {.panel-tabset}

### Plot

```{r}
#| ref.label: mean-netcost-pctpell-b
#| out-width: 70%
#| echo: false
```

### Code

```{r}
#| ref.label: mean-netcost-pctpell-b
#| code-line-numbers: "2"
#| fig-show: hide
```

:::

## Lollipop plot -- a happy medium?

::: {.panel-tabset}

### Plot

```{r}
#| label: mean-netcost-pctpell-lollipop
#| out-width: 70%
#| echo: false
ggplot(mean_netcost_pctpell, aes(y = pctpell_cat, x = mean_netcost)) +
  geom_point(size = 4) +
  geom_segment(
    aes(
      x = 0, xend = mean_netcost,
      y = pctpell_cat, yend = pctpell_cat
    )
  ) +
  labs(
    x = "Mean net cost of attendance", y = "Pell grant recipients",
    title = "Mean net cost of attendance, by Pell grant recipients"
  ) +
  theme_minimal(base_size = 16)
```

### Code

```{r}
#| ref.label: mean-netcost-pctpell-lollipop
#| code-line-numbers: "3-8"
#| fig-show: hide
```

:::

## [Activity: Napoleon's disastrous Russian campaign of 1812]{.small}

```{r}
#| echo: false
#| fig-alt: Minard’s visualization of Napoleon’s retreat
knitr::include_graphics("images/03/minard.jpg")
```

::: aside
Source: [Wikipedia](https://en.wikipedia.org/wiki/Charles_Joseph_Minard#/media/File:Minard.png)
:::

## Activity: Napoleon's retreat

:::: columns

::: {.column width="70%"}

::: {.appex .small}

This is Minard’s visualization of Napoleon’s retreat. Discuss in a pair (or group) the features of the following visualization. What are the variables plotted? Which aesthetics are they mapped to?

:::

:::

::: {.column width="30%"}

```{r}
#| cache: false
#| echo: false
countdown(minutes = 5, top = 0, font_size = "5vw")
```

:::

::::

![Source: [Wikipedia](https://commons.wikimedia.org/wiki/File:Redrawing_of_Minard%27s_Napoleon_map.svg)](https://upload.wikimedia.org/wikipedia/commons/d/db/Redrawing_of_Minard%27s_Napoleon_map.svg){fig-alt="A modern recreation of Minard’s visualization of Napoleon’s retreat"}

## Bad data

::: {.panel-tabset}

### Original

```{r}
#| echo: false
#| fig-alt: A crisis of faith in democracy? New York Times.
#| out-width: 50%
knitr::include_graphics("images/03/healy-democracy-nyt-version.png")
```

### Improved

```{r}
#| echo: false
#| fig-alt: A crisis of faith in democracy? New York Times.
#| out-width: 50%
knitr::include_graphics("images/03/healy-democracy-voeten-version-2.png")
```

:::

::: aside
Healy, Data Visualization: A practical introduction. [Chapter 1](https://socviz.co/lookatdata.html). Figures 1.8 and 1.9.
:::

## Bad perception

```{r}
#| echo: false
#| fig-alt: Aspect ratios affect our perception of rates of change, modeled after an
#|   example by William S. Cleveland.
#| out-width: 80%
knitr::include_graphics("images/03/healy-perception-curves.png")
```

::: aside
Healy, Data Visualization: A practical introduction. [Chapter 1](https://socviz.co/lookatdata.html). Figure 1.12.
:::

# Aesthetic mappings in ggplot2

## A second look: lollipop plot

::: {.panel-tabset}

### Plot

```{r}
#| label: mean-netcost-pctpell-lollipop-layer
#| out-width: 70%
#| echo: false
ggplot(mean_netcost_pctpell, aes(y = pctpell_cat, x = mean_netcost)) +
  geom_point(size = 4) +
  geom_segment(
    aes(
      x = 0, xend = mean_netcost,
      y = pctpell_cat, yend = pctpell_cat
    )
  ) +
  labs(
    x = "Mean net cost of attendance", y = "Pell grant recipients",
    title = "Mean net cost of attendance, by Pell grant recipients"
  ) +
  theme_minimal(base_size = 16)
```

### Code

```{r}
#| ref.label: mean-netcost-pctpell-lollipop-layer
#| fig-show: hide
```

:::

## Activity: Spot the difference I

::: appex
Can you spot the differences between the code here and the one provided in the previous slide? Are there any differences in the resulting plot? Work in a pair (or group) to answer.
:::

::: {.panel-tabset}

### Plot

```{r}
#| label: mean-netcost-pctpell-lollipop-global
#| out-width: 50%
#| echo: false
ggplot(mean_netcost_pctpell, aes(y = pctpell_cat, x = mean_netcost)) +
  geom_point(size = 4) +
  geom_segment(aes(
    xend = 0,
    yend = pctpell_cat
  )) +
  labs(
    x = "Mean net cost of attendance", y = "Pell grant recipients",
    title = "Mean net cost of attendance, by Pell grant recipients"
  ) +
  theme_minimal(base_size = 16)
```

### Code

```{r}
#| ref.label: mean-netcost-pctpell-lollipop-global
#| code-line-numbers: "|1,4,5"
#| fig-show: hide
```

:::

```{r}
#| cache: false
#| echo: false
countdown(minutes = 1, bottom = 0)
```

## Global vs. layer-specific aesthetics

- Aesthetic mappings can be supplied in the initial `ggplot()` call, in individual layers, or in some combination of both.

- Within each layer, you can add, override, or remove mappings.

- If you only have one layer in the plot, the way you specify aesthetics doesn’t make any difference. However, the distinction is important when you start adding additional layers.

---

## Wrap up

::: {.appex .center}
Think back to all the plots you saw in the lecture, without flipping back through the slides. Which plot first comes to mind? Describe it in words.
:::
